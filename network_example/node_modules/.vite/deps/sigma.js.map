{
  "version": 3,
  "sources": ["../../@yomguithereal/helpers/extend.js", "../../sigma/types.js", "../../sigma/core/camera.js", "../../sigma/core/captors/captor.js", "../../sigma/core/captors/mouse.js", "../../sigma/core/quadtree.js", "../../sigma/core/labels.js", "../../sigma/rendering/canvas/label.js", "../../sigma/rendering/canvas/hover.js", "../../sigma/rendering/canvas/edge-label.js", "../../sigma/rendering/webgl/shaders/utils.js", "../../sigma/rendering/webgl/programs/common/program.js", "../../sigma/rendering/webgl/programs/common/node.js", "../../sigma/rendering/webgl/shaders/node.point.vert.glsl.js", "../../sigma/rendering/webgl/shaders/node.point.frag.glsl.js", "../../sigma/rendering/webgl/programs/node.point.js", "../../sigma/rendering/webgl/programs/common/edge.js", "../../sigma/rendering/webgl/shaders/edge.rectangle.vert.glsl.js", "../../sigma/rendering/webgl/shaders/edge.rectangle.frag.glsl.js", "../../sigma/rendering/webgl/programs/edge.rectangle.js", "../../sigma/rendering/webgl/shaders/edge.arrowHead.vert.glsl.js", "../../sigma/rendering/webgl/shaders/edge.arrowHead.frag.glsl.js", "../../sigma/rendering/webgl/programs/edge.arrowHead.js", "../../sigma/rendering/webgl/shaders/edge.clamped.vert.glsl.js", "../../sigma/rendering/webgl/programs/edge.clamped.js", "../../sigma/rendering/webgl/programs/edge.arrow.js", "../../sigma/settings.js", "../../sigma/core/captors/touch.js", "../../sigma/utils/edge-collisions.js", "../../sigma/sigma.js", "../../sigma/index.js"],
  "sourcesContent": ["/**\r\n * Extend function\r\n * ================\r\n *\r\n * Function used to push a bunch of values into an array at once.\r\n *\r\n * Its strategy is to mutate target array's length then setting the new indices\r\n * to be the values to add.\r\n *\r\n * A benchmark proved that it is faster than the following strategies:\r\n *   1) `array.push.apply(array, values)`.\r\n *   2) A loop of pushes.\r\n *   3) `array = array.concat(values)`, obviously.\r\n *\r\n * Intuitively, this is correct because when adding a lot of elements, the\r\n * chosen strategies does not need to handle the `arguments` object to\r\n * execute #.apply's variadicity and because the array know its final length\r\n * at the beginning, avoiding potential multiple reallocations of the underlying\r\n * contiguous array. Some engines may be able to optimize the loop of push\r\n * operations but empirically they don't seem to do so.\r\n */\r\n\r\n/**\r\n * Extends the target array with the given values.\r\n *\r\n * @param  {array} array  - Target array.\r\n * @param  {array} values - Values to add.\r\n */\r\nmodule.exports = function extend(array, values) {\r\n  var l2 = values.length;\r\n\r\n  if (l2 === 0)\r\n    return;\r\n\r\n  var l1 = array.length;\r\n\r\n  array.length += l2;\r\n\r\n  for (var i = 0; i < l2; i++)\r\n    array[l1 + i] = values[i];\r\n};\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TypedEventEmitter = void 0;\r\n/**\r\n * Sigma.js Types\r\n * ===============\r\n *\r\n * Various type declarations used throughout the library.\r\n * @module\r\n */\r\nvar events_1 = require(\"events\");\r\nvar TypedEventEmitter = /** @class */ (function (_super) {\r\n    __extends(TypedEventEmitter, _super);\r\n    function TypedEventEmitter() {\r\n        var _this = _super.call(this) || this;\r\n        _this.rawEmitter = _this;\r\n        return _this;\r\n    }\r\n    return TypedEventEmitter;\r\n}(events_1.EventEmitter));\r\nexports.TypedEventEmitter = TypedEventEmitter;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Sigma.js Camera Class\r\n * ======================\r\n *\r\n * Class designed to store camera information & used to update it.\r\n * @module\r\n */\r\nvar animate_1 = require(\"../utils/animate\");\r\nvar easings_1 = __importDefault(require(\"../utils/easings\"));\r\nvar utils_1 = require(\"../utils\");\r\nvar types_1 = require(\"../types\");\r\n/**\r\n * Defaults.\r\n */\r\nvar DEFAULT_ZOOMING_RATIO = 1.5;\r\n/**\r\n * Camera class\r\n *\r\n * @constructor\r\n */\r\nvar Camera = /** @class */ (function (_super) {\r\n    __extends(Camera, _super);\r\n    function Camera() {\r\n        var _this = _super.call(this) || this;\r\n        _this.x = 0.5;\r\n        _this.y = 0.5;\r\n        _this.angle = 0;\r\n        _this.ratio = 1;\r\n        _this.minRatio = null;\r\n        _this.maxRatio = null;\r\n        _this.nextFrame = null;\r\n        _this.previousState = null;\r\n        _this.enabled = true;\r\n        // State\r\n        _this.previousState = _this.getState();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Static method used to create a Camera object with a given state.\r\n     *\r\n     * @param state\r\n     * @return {Camera}\r\n     */\r\n    Camera.from = function (state) {\r\n        var camera = new Camera();\r\n        return camera.setState(state);\r\n    };\r\n    /**\r\n     * Method used to enable the camera.\r\n     *\r\n     * @return {Camera}\r\n     */\r\n    Camera.prototype.enable = function () {\r\n        this.enabled = true;\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to disable the camera.\r\n     *\r\n     * @return {Camera}\r\n     */\r\n    Camera.prototype.disable = function () {\r\n        this.enabled = false;\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to retrieve the camera's current state.\r\n     *\r\n     * @return {object}\r\n     */\r\n    Camera.prototype.getState = function () {\r\n        return {\r\n            x: this.x,\r\n            y: this.y,\r\n            angle: this.angle,\r\n            ratio: this.ratio,\r\n        };\r\n    };\r\n    /**\r\n     * Method used to check whether the camera has the given state.\r\n     *\r\n     * @return {object}\r\n     */\r\n    Camera.prototype.hasState = function (state) {\r\n        return this.x === state.x && this.y === state.y && this.ratio === state.ratio && this.angle === state.angle;\r\n    };\r\n    /**\r\n     * Method used to retrieve the camera's previous state.\r\n     *\r\n     * @return {object}\r\n     */\r\n    Camera.prototype.getPreviousState = function () {\r\n        var state = this.previousState;\r\n        if (!state)\r\n            return null;\r\n        return {\r\n            x: state.x,\r\n            y: state.y,\r\n            angle: state.angle,\r\n            ratio: state.ratio,\r\n        };\r\n    };\r\n    /**\r\n     * Method used to check minRatio and maxRatio values.\r\n     *\r\n     * @param ratio\r\n     * @return {number}\r\n     */\r\n    Camera.prototype.getBoundedRatio = function (ratio) {\r\n        var r = ratio;\r\n        if (typeof this.minRatio === \"number\")\r\n            r = Math.max(r, this.minRatio);\r\n        if (typeof this.maxRatio === \"number\")\r\n            r = Math.min(r, this.maxRatio);\r\n        return r;\r\n    };\r\n    /**\r\n     * Method used to check various things to return a legit state candidate.\r\n     *\r\n     * @param state\r\n     * @return {object}\r\n     */\r\n    Camera.prototype.validateState = function (state) {\r\n        var validatedState = {};\r\n        if (typeof state.x === \"number\")\r\n            validatedState.x = state.x;\r\n        if (typeof state.y === \"number\")\r\n            validatedState.y = state.y;\r\n        if (typeof state.angle === \"number\")\r\n            validatedState.angle = state.angle;\r\n        if (typeof state.ratio === \"number\")\r\n            validatedState.ratio = this.getBoundedRatio(state.ratio);\r\n        return validatedState;\r\n    };\r\n    /**\r\n     * Method used to check whether the camera is currently being animated.\r\n     *\r\n     * @return {boolean}\r\n     */\r\n    Camera.prototype.isAnimated = function () {\r\n        return !!this.nextFrame;\r\n    };\r\n    /**\r\n     * Method used to set the camera's state.\r\n     *\r\n     * @param  {object} state - New state.\r\n     * @return {Camera}\r\n     */\r\n    Camera.prototype.setState = function (state) {\r\n        if (!this.enabled)\r\n            return this;\r\n        // TODO: update by function\r\n        // Keeping track of last state\r\n        this.previousState = this.getState();\r\n        var validState = this.validateState(state);\r\n        if (typeof validState.x === \"number\")\r\n            this.x = validState.x;\r\n        if (typeof validState.y === \"number\")\r\n            this.y = validState.y;\r\n        if (typeof validState.angle === \"number\")\r\n            this.angle = validState.angle;\r\n        if (typeof validState.ratio === \"number\")\r\n            this.ratio = validState.ratio;\r\n        // Emitting\r\n        if (!this.hasState(this.previousState))\r\n            this.emit(\"updated\", this.getState());\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to update the camera's state using a function.\r\n     *\r\n     * @param  {function} updater - Updated function taking current state and\r\n     *                              returning next state.\r\n     * @return {Camera}\r\n     */\r\n    Camera.prototype.updateState = function (updater) {\r\n        this.setState(updater(this.getState()));\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to animate the camera.\r\n     *\r\n     * @param  {object}                    state      - State to reach eventually.\r\n     * @param  {object}                    opts       - Options:\r\n     * @param  {number}                      duration - Duration of the animation.\r\n     * @param  {string | number => number}   easing   - Easing function or name of an existing one\r\n     * @param  {function}                  callback   - Callback\r\n     */\r\n    Camera.prototype.animate = function (state, opts, callback) {\r\n        var _this = this;\r\n        if (!this.enabled)\r\n            return;\r\n        var options = Object.assign({}, animate_1.ANIMATE_DEFAULTS, opts);\r\n        var validState = this.validateState(state);\r\n        var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\r\n        // State\r\n        var start = Date.now(), initialState = this.getState();\r\n        // Function performing the animation\r\n        var fn = function () {\r\n            var t = (Date.now() - start) / options.duration;\r\n            // The animation is over:\r\n            if (t >= 1) {\r\n                _this.nextFrame = null;\r\n                _this.setState(validState);\r\n                if (_this.animationCallback) {\r\n                    _this.animationCallback.call(null);\r\n                    _this.animationCallback = undefined;\r\n                }\r\n                return;\r\n            }\r\n            var coefficient = easing(t);\r\n            var newState = {};\r\n            if (typeof validState.x === \"number\")\r\n                newState.x = initialState.x + (validState.x - initialState.x) * coefficient;\r\n            if (typeof validState.y === \"number\")\r\n                newState.y = initialState.y + (validState.y - initialState.y) * coefficient;\r\n            if (typeof validState.angle === \"number\")\r\n                newState.angle = initialState.angle + (validState.angle - initialState.angle) * coefficient;\r\n            if (typeof validState.ratio === \"number\")\r\n                newState.ratio = initialState.ratio + (validState.ratio - initialState.ratio) * coefficient;\r\n            _this.setState(newState);\r\n            _this.nextFrame = (0, utils_1.requestFrame)(fn);\r\n        };\r\n        if (this.nextFrame) {\r\n            (0, utils_1.cancelFrame)(this.nextFrame);\r\n            if (this.animationCallback)\r\n                this.animationCallback.call(null);\r\n            this.nextFrame = (0, utils_1.requestFrame)(fn);\r\n        }\r\n        else {\r\n            fn();\r\n        }\r\n        this.animationCallback = callback;\r\n    };\r\n    /**\r\n     * Method used to zoom the camera.\r\n     *\r\n     * @param  {number|object} factorOrOptions - Factor or options.\r\n     * @return {function}\r\n     */\r\n    Camera.prototype.animatedZoom = function (factorOrOptions) {\r\n        if (!factorOrOptions) {\r\n            this.animate({ ratio: this.ratio / DEFAULT_ZOOMING_RATIO });\r\n        }\r\n        else {\r\n            if (typeof factorOrOptions === \"number\")\r\n                return this.animate({ ratio: this.ratio / factorOrOptions });\r\n            else\r\n                this.animate({\r\n                    ratio: this.ratio / (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\r\n                }, factorOrOptions);\r\n        }\r\n    };\r\n    /**\r\n     * Method used to unzoom the camera.\r\n     *\r\n     * @param  {number|object} factorOrOptions - Factor or options.\r\n     */\r\n    Camera.prototype.animatedUnzoom = function (factorOrOptions) {\r\n        if (!factorOrOptions) {\r\n            this.animate({ ratio: this.ratio * DEFAULT_ZOOMING_RATIO });\r\n        }\r\n        else {\r\n            if (typeof factorOrOptions === \"number\")\r\n                return this.animate({ ratio: this.ratio * factorOrOptions });\r\n            else\r\n                this.animate({\r\n                    ratio: this.ratio * (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\r\n                }, factorOrOptions);\r\n        }\r\n    };\r\n    /**\r\n     * Method used to reset the camera.\r\n     *\r\n     * @param  {object} options - Options.\r\n     */\r\n    Camera.prototype.animatedReset = function (options) {\r\n        this.animate({\r\n            x: 0.5,\r\n            y: 0.5,\r\n            ratio: 1,\r\n            angle: 0,\r\n        }, options);\r\n    };\r\n    /**\r\n     * Returns a new Camera instance, with the same state as the current camera.\r\n     *\r\n     * @return {Camera}\r\n     */\r\n    Camera.prototype.copy = function () {\r\n        return Camera.from(this.getState());\r\n    };\r\n    return Camera;\r\n}(types_1.TypedEventEmitter));\r\nexports.default = Camera;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getWheelDelta = exports.getTouchCoords = exports.getTouchesArray = exports.getWheelCoords = exports.getMouseCoords = exports.getPosition = void 0;\r\n/**\r\n * Sigma.js Captor Class\r\n * ======================\r\n * @module\r\n */\r\nvar types_1 = require(\"../../types\");\r\n/**\r\n * Captor utils functions\r\n * ======================\r\n */\r\n/**\r\n * Extract the local X and Y coordinates from a mouse event or touch object. If\r\n * a DOM element is given, it uses this element's offset to compute the position\r\n * (this allows using events that are not bound to the container itself and\r\n * still have a proper position).\r\n *\r\n * @param  {event}       e - A mouse event or touch object.\r\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\r\n * @return {number}      The local Y value of the mouse.\r\n */\r\nfunction getPosition(e, dom) {\r\n    var bbox = dom.getBoundingClientRect();\r\n    return {\r\n        x: e.clientX - bbox.left,\r\n        y: e.clientY - bbox.top,\r\n    };\r\n}\r\nexports.getPosition = getPosition;\r\n/**\r\n * Convert mouse coords to sigma coords.\r\n *\r\n * @param  {event}       e   - A mouse event or touch object.\r\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\r\n * @return {object}\r\n */\r\nfunction getMouseCoords(e, dom) {\r\n    var res = __assign(__assign({}, getPosition(e, dom)), { sigmaDefaultPrevented: false, preventSigmaDefault: function () {\r\n            res.sigmaDefaultPrevented = true;\r\n        }, original: e });\r\n    return res;\r\n}\r\nexports.getMouseCoords = getMouseCoords;\r\n/**\r\n * Convert mouse wheel event coords to sigma coords.\r\n *\r\n * @param  {event}       e   - A wheel mouse event.\r\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\r\n * @return {object}\r\n */\r\nfunction getWheelCoords(e, dom) {\r\n    return __assign(__assign({}, getMouseCoords(e, dom)), { delta: getWheelDelta(e) });\r\n}\r\nexports.getWheelCoords = getWheelCoords;\r\nvar MAX_TOUCHES = 2;\r\nfunction getTouchesArray(touches) {\r\n    var arr = [];\r\n    for (var i = 0, l = Math.min(touches.length, MAX_TOUCHES); i < l; i++)\r\n        arr.push(touches[i]);\r\n    return arr;\r\n}\r\nexports.getTouchesArray = getTouchesArray;\r\n/**\r\n * Convert touch coords to sigma coords.\r\n *\r\n * @param  {event}       e   - A touch event.\r\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\r\n * @return {object}\r\n */\r\nfunction getTouchCoords(e, dom) {\r\n    return {\r\n        touches: getTouchesArray(e.touches).map(function (touch) { return getPosition(touch, dom); }),\r\n        original: e,\r\n    };\r\n}\r\nexports.getTouchCoords = getTouchCoords;\r\n/**\r\n * Extract the wheel delta from a mouse event or touch object.\r\n *\r\n * @param  {event}  e - A mouse event or touch object.\r\n * @return {number}     The wheel delta of the mouse.\r\n */\r\nfunction getWheelDelta(e) {\r\n    // TODO: check those ratios again to ensure a clean Chrome/Firefox compat\r\n    if (typeof e.deltaY !== \"undefined\")\r\n        return (e.deltaY * -3) / 360;\r\n    if (typeof e.detail !== \"undefined\")\r\n        return e.detail / -9;\r\n    throw new Error(\"Captor: could not extract delta from event.\");\r\n}\r\nexports.getWheelDelta = getWheelDelta;\r\n/**\r\n * Abstract class representing a captor like the user's mouse or touch controls.\r\n */\r\nvar Captor = /** @class */ (function (_super) {\r\n    __extends(Captor, _super);\r\n    function Captor(container, renderer) {\r\n        var _this = _super.call(this) || this;\r\n        // Properties\r\n        _this.container = container;\r\n        _this.renderer = renderer;\r\n        return _this;\r\n    }\r\n    return Captor;\r\n}(types_1.TypedEventEmitter));\r\nexports.default = Captor;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar captor_1 = __importStar(require(\"./captor\"));\r\n/**\r\n * Constants.\r\n */\r\nvar DRAG_TIMEOUT = 100;\r\nvar DRAGGED_EVENTS_TOLERANCE = 3;\r\nvar MOUSE_INERTIA_DURATION = 200;\r\nvar MOUSE_INERTIA_RATIO = 3;\r\nvar MOUSE_ZOOM_DURATION = 250;\r\nvar ZOOMING_RATIO = 1.7;\r\nvar DOUBLE_CLICK_TIMEOUT = 300;\r\nvar DOUBLE_CLICK_ZOOMING_RATIO = 2.2;\r\nvar DOUBLE_CLICK_ZOOMING_DURATION = 200;\r\n/**\r\n * Mouse captor class.\r\n *\r\n * @constructor\r\n */\r\nvar MouseCaptor = /** @class */ (function (_super) {\r\n    __extends(MouseCaptor, _super);\r\n    function MouseCaptor(container, renderer) {\r\n        var _this = _super.call(this, container, renderer) || this;\r\n        // State\r\n        _this.enabled = true;\r\n        _this.draggedEvents = 0;\r\n        _this.downStartTime = null;\r\n        _this.lastMouseX = null;\r\n        _this.lastMouseY = null;\r\n        _this.isMouseDown = false;\r\n        _this.isMoving = false;\r\n        _this.movingTimeout = null;\r\n        _this.startCameraState = null;\r\n        _this.clicks = 0;\r\n        _this.doubleClickTimeout = null;\r\n        _this.currentWheelDirection = 0;\r\n        // Binding methods\r\n        _this.handleClick = _this.handleClick.bind(_this);\r\n        _this.handleRightClick = _this.handleRightClick.bind(_this);\r\n        _this.handleDown = _this.handleDown.bind(_this);\r\n        _this.handleUp = _this.handleUp.bind(_this);\r\n        _this.handleMove = _this.handleMove.bind(_this);\r\n        _this.handleWheel = _this.handleWheel.bind(_this);\r\n        _this.handleOut = _this.handleOut.bind(_this);\r\n        // Binding events\r\n        container.addEventListener(\"click\", _this.handleClick, false);\r\n        container.addEventListener(\"contextmenu\", _this.handleRightClick, false);\r\n        container.addEventListener(\"mousedown\", _this.handleDown, false);\r\n        container.addEventListener(\"wheel\", _this.handleWheel, false);\r\n        container.addEventListener(\"mouseout\", _this.handleOut, false);\r\n        document.addEventListener(\"mousemove\", _this.handleMove, false);\r\n        document.addEventListener(\"mouseup\", _this.handleUp, false);\r\n        return _this;\r\n    }\r\n    MouseCaptor.prototype.kill = function () {\r\n        var container = this.container;\r\n        container.removeEventListener(\"click\", this.handleClick);\r\n        container.removeEventListener(\"contextmenu\", this.handleRightClick);\r\n        container.removeEventListener(\"mousedown\", this.handleDown);\r\n        container.removeEventListener(\"wheel\", this.handleWheel);\r\n        container.removeEventListener(\"mouseout\", this.handleOut);\r\n        document.removeEventListener(\"mousemove\", this.handleMove);\r\n        document.removeEventListener(\"mouseup\", this.handleUp);\r\n    };\r\n    MouseCaptor.prototype.handleClick = function (e) {\r\n        var _this = this;\r\n        if (!this.enabled)\r\n            return;\r\n        this.clicks++;\r\n        if (this.clicks === 2) {\r\n            this.clicks = 0;\r\n            if (typeof this.doubleClickTimeout === \"number\") {\r\n                clearTimeout(this.doubleClickTimeout);\r\n                this.doubleClickTimeout = null;\r\n            }\r\n            return this.handleDoubleClick(e);\r\n        }\r\n        setTimeout(function () {\r\n            _this.clicks = 0;\r\n            _this.doubleClickTimeout = null;\r\n        }, DOUBLE_CLICK_TIMEOUT);\r\n        // NOTE: this is here to prevent click events on drag\r\n        if (this.draggedEvents < DRAGGED_EVENTS_TOLERANCE)\r\n            this.emit(\"click\", (0, captor_1.getMouseCoords)(e, this.container));\r\n    };\r\n    MouseCaptor.prototype.handleRightClick = function (e) {\r\n        if (!this.enabled)\r\n            return;\r\n        this.emit(\"rightClick\", (0, captor_1.getMouseCoords)(e, this.container));\r\n    };\r\n    MouseCaptor.prototype.handleDoubleClick = function (e) {\r\n        if (!this.enabled)\r\n            return;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);\r\n        this.emit(\"doubleClick\", mouseCoords);\r\n        if (mouseCoords.sigmaDefaultPrevented)\r\n            return;\r\n        // default behavior\r\n        var camera = this.renderer.getCamera();\r\n        var newRatio = camera.getBoundedRatio(camera.getState().ratio / DOUBLE_CLICK_ZOOMING_RATIO);\r\n        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {\r\n            easing: \"quadraticInOut\",\r\n            duration: DOUBLE_CLICK_ZOOMING_DURATION,\r\n        });\r\n    };\r\n    MouseCaptor.prototype.handleDown = function (e) {\r\n        if (!this.enabled)\r\n            return;\r\n        // We only start dragging on left button\r\n        if (e.button === 0) {\r\n            this.startCameraState = this.renderer.getCamera().getState();\r\n            var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;\r\n            this.lastMouseX = x;\r\n            this.lastMouseY = y;\r\n            this.draggedEvents = 0;\r\n            this.downStartTime = Date.now();\r\n            this.isMouseDown = true;\r\n        }\r\n        this.emit(\"mousedown\", (0, captor_1.getMouseCoords)(e, this.container));\r\n    };\r\n    MouseCaptor.prototype.handleUp = function (e) {\r\n        var _this = this;\r\n        if (!this.enabled || !this.isMouseDown)\r\n            return;\r\n        var camera = this.renderer.getCamera();\r\n        this.isMouseDown = false;\r\n        if (typeof this.movingTimeout === \"number\") {\r\n            clearTimeout(this.movingTimeout);\r\n            this.movingTimeout = null;\r\n        }\r\n        var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;\r\n        var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };\r\n        if (this.isMoving) {\r\n            camera.animate({\r\n                x: cameraState.x + MOUSE_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\r\n                y: cameraState.y + MOUSE_INERTIA_RATIO * (cameraState.y - previousCameraState.y),\r\n            }, {\r\n                duration: MOUSE_INERTIA_DURATION,\r\n                easing: \"quadraticOut\",\r\n            });\r\n        }\r\n        else if (this.lastMouseX !== x || this.lastMouseY !== y) {\r\n            camera.setState({\r\n                x: cameraState.x,\r\n                y: cameraState.y,\r\n            });\r\n        }\r\n        this.isMoving = false;\r\n        setTimeout(function () {\r\n            _this.draggedEvents = 0;\r\n            // NOTE: this refresh is here to make sure `hideEdgesOnMove` can work\r\n            // when someone releases camera pan drag after having stopped moving.\r\n            // See commit: https://github.com/jacomyal/sigma.js/commit/cfd9197f70319109db6b675dd7c82be493ca95a2\r\n            // See also issue: https://github.com/jacomyal/sigma.js/issues/1290\r\n            // It could be possible to render instead of scheduling a refresh but for\r\n            // now it seems good enough.\r\n            _this.renderer.refresh();\r\n        }, 0);\r\n        this.emit(\"mouseup\", (0, captor_1.getMouseCoords)(e, this.container));\r\n    };\r\n    MouseCaptor.prototype.handleMove = function (e) {\r\n        var _this = this;\r\n        if (!this.enabled)\r\n            return;\r\n        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);\r\n        // Always trigger a \"mousemovebody\" event, so that it is possible to develop\r\n        // a drag-and-drop effect that works even when the mouse is out of the\r\n        // container:\r\n        this.emit(\"mousemovebody\", mouseCoords);\r\n        // Only trigger the \"mousemove\" event when the mouse is actually hovering\r\n        // the container, to avoid weirdly hovering nodes and/or edges when the\r\n        // mouse is not hover the container:\r\n        if (e.target === this.container) {\r\n            this.emit(\"mousemove\", mouseCoords);\r\n        }\r\n        if (mouseCoords.sigmaDefaultPrevented)\r\n            return;\r\n        // Handle the case when \"isMouseDown\" all the time, to allow dragging the\r\n        // stage while the mouse is not hover the container:\r\n        if (this.isMouseDown) {\r\n            this.isMoving = true;\r\n            this.draggedEvents++;\r\n            if (typeof this.movingTimeout === \"number\") {\r\n                clearTimeout(this.movingTimeout);\r\n            }\r\n            this.movingTimeout = window.setTimeout(function () {\r\n                _this.movingTimeout = null;\r\n                _this.isMoving = false;\r\n            }, DRAG_TIMEOUT);\r\n            var camera = this.renderer.getCamera();\r\n            var _a = (0, captor_1.getPosition)(e, this.container), eX = _a.x, eY = _a.y;\r\n            var lastMouse = this.renderer.viewportToFramedGraph({\r\n                x: this.lastMouseX,\r\n                y: this.lastMouseY,\r\n            });\r\n            var mouse = this.renderer.viewportToFramedGraph({ x: eX, y: eY });\r\n            var offsetX = lastMouse.x - mouse.x, offsetY = lastMouse.y - mouse.y;\r\n            var cameraState = camera.getState();\r\n            var x = cameraState.x + offsetX, y = cameraState.y + offsetY;\r\n            camera.setState({ x: x, y: y });\r\n            this.lastMouseX = eX;\r\n            this.lastMouseY = eY;\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n    };\r\n    MouseCaptor.prototype.handleWheel = function (e) {\r\n        var _this = this;\r\n        if (!this.enabled)\r\n            return;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        var delta = (0, captor_1.getWheelDelta)(e);\r\n        if (!delta)\r\n            return;\r\n        var wheelCoords = (0, captor_1.getWheelCoords)(e, this.container);\r\n        this.emit(\"wheel\", wheelCoords);\r\n        if (wheelCoords.sigmaDefaultPrevented)\r\n            return;\r\n        // Default behavior\r\n        var ratioDiff = delta > 0 ? 1 / ZOOMING_RATIO : ZOOMING_RATIO;\r\n        var camera = this.renderer.getCamera();\r\n        var newRatio = camera.getBoundedRatio(camera.getState().ratio * ratioDiff);\r\n        var wheelDirection = delta > 0 ? 1 : -1;\r\n        var now = Date.now();\r\n        // Cancel events that are too close too each other and in the same direction:\r\n        if (this.currentWheelDirection === wheelDirection &&\r\n            this.lastWheelTriggerTime &&\r\n            now - this.lastWheelTriggerTime < MOUSE_ZOOM_DURATION / 5) {\r\n            return;\r\n        }\r\n        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {\r\n            easing: \"quadraticOut\",\r\n            duration: MOUSE_ZOOM_DURATION,\r\n        }, function () {\r\n            _this.currentWheelDirection = 0;\r\n        });\r\n        this.currentWheelDirection = wheelDirection;\r\n        this.lastWheelTriggerTime = now;\r\n    };\r\n    MouseCaptor.prototype.handleOut = function () {\r\n        // TODO: dispatch event\r\n    };\r\n    return MouseCaptor;\r\n}(captor_1.default));\r\nexports.default = MouseCaptor;\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rectangleCollidesWithQuad = exports.squareCollidesWithQuad = exports.getCircumscribedAlignedRectangle = exports.isRectangleAligned = void 0;\r\n/**\r\n * Sigma.js Quad Tree Class\r\n * =========================\r\n *\r\n * Class implementing the quad tree data structure used to solve hovers and\r\n * determine which elements are currently in the scope of the camera so that\r\n * we don't waste time rendering things the user cannot see anyway.\r\n * @module\r\n */\r\n/* eslint no-nested-ternary: 0 */\r\n/* eslint no-constant-condition: 0 */\r\nvar extend_1 = __importDefault(require(\"@yomguithereal/helpers/extend\"));\r\n/**\r\n * Notes:\r\n *\r\n *   - a square can be represented as topleft + width, saying for the quad blocks,\r\n *     to reduce overall memory usage (which is already pretty low).\r\n *   - this implementation of a quadtree is often called a MX-CIF quadtree.\r\n *   - we could explore spatial hashing (hilbert quadtrees, notably).\r\n */\r\n/**\r\n * Constants.\r\n *\r\n * Note that since we are representing a static 4-ary tree, the indices of the\r\n * quadrants are the following:\r\n *   - TOP_LEFT:     4i + b\r\n *   - TOP_RIGHT:    4i + 2b\r\n *   - BOTTOM_LEFT:  4i + 3b\r\n *   - BOTTOM_RIGHT: 4i + 4b\r\n */\r\nvar BLOCKS = 4;\r\nvar MAX_LEVEL = 5;\r\n// Outside block is max block index + 1, i.e.:\r\n// BLOCKS * ((4 * (4 ** MAX_LEVEL) - 1) / 3)\r\nvar OUTSIDE_BLOCK = 5460;\r\nvar X_OFFSET = 0;\r\nvar Y_OFFSET = 1;\r\nvar WIDTH_OFFSET = 2;\r\nvar HEIGHT_OFFSET = 3;\r\nvar TOP_LEFT = 1;\r\nvar TOP_RIGHT = 2;\r\nvar BOTTOM_LEFT = 3;\r\nvar BOTTOM_RIGHT = 4;\r\nvar hasWarnedTooMuchOutside = false;\r\n/**\r\n * Geometry helpers.\r\n */\r\n/**\r\n * Function returning whether the given rectangle is axis-aligned.\r\n *\r\n * @param  {Rectangle} rect\r\n * @return {boolean}\r\n */\r\nfunction isRectangleAligned(rect) {\r\n    return rect.x1 === rect.x2 || rect.y1 === rect.y2;\r\n}\r\nexports.isRectangleAligned = isRectangleAligned;\r\n/**\r\n * Function returning the smallest rectangle that contains the given rectangle, and that is aligned with the axis.\r\n *\r\n * @param {Rectangle} rect\r\n * @return {Rectangle}\r\n */\r\nfunction getCircumscribedAlignedRectangle(rect) {\r\n    var width = Math.sqrt(Math.pow(rect.x2 - rect.x1, 2) + Math.pow(rect.y2 - rect.y1, 2));\r\n    var heightVector = {\r\n        x: ((rect.y1 - rect.y2) * rect.height) / width,\r\n        y: ((rect.x2 - rect.x1) * rect.height) / width,\r\n    };\r\n    // Compute all corners:\r\n    var tl = { x: rect.x1, y: rect.y1 };\r\n    var tr = { x: rect.x2, y: rect.y2 };\r\n    var bl = {\r\n        x: rect.x1 + heightVector.x,\r\n        y: rect.y1 + heightVector.y,\r\n    };\r\n    var br = {\r\n        x: rect.x2 + heightVector.x,\r\n        y: rect.y2 + heightVector.y,\r\n    };\r\n    var xL = Math.min(tl.x, tr.x, bl.x, br.x);\r\n    var xR = Math.max(tl.x, tr.x, bl.x, br.x);\r\n    var yT = Math.min(tl.y, tr.y, bl.y, br.y);\r\n    var yB = Math.max(tl.y, tr.y, bl.y, br.y);\r\n    return {\r\n        x1: xL,\r\n        y1: yT,\r\n        x2: xR,\r\n        y2: yT,\r\n        height: yB - yT,\r\n    };\r\n}\r\nexports.getCircumscribedAlignedRectangle = getCircumscribedAlignedRectangle;\r\n/**\r\n *\r\n * @param x1\r\n * @param y1\r\n * @param w\r\n * @param qx\r\n * @param qy\r\n * @param qw\r\n * @param qh\r\n */\r\nfunction squareCollidesWithQuad(x1, y1, w, qx, qy, qw, qh) {\r\n    return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + w > qy;\r\n}\r\nexports.squareCollidesWithQuad = squareCollidesWithQuad;\r\nfunction rectangleCollidesWithQuad(x1, y1, w, h, qx, qy, qw, qh) {\r\n    return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + h > qy;\r\n}\r\nexports.rectangleCollidesWithQuad = rectangleCollidesWithQuad;\r\nfunction pointIsInQuad(x, y, qx, qy, qw, qh) {\r\n    var xmp = qx + qw / 2, ymp = qy + qh / 2, top = y < ymp, left = x < xmp;\r\n    return top ? (left ? TOP_LEFT : TOP_RIGHT) : left ? BOTTOM_LEFT : BOTTOM_RIGHT;\r\n}\r\n/**\r\n * Helper functions that are not bound to the class so an external user\r\n * cannot mess with them.\r\n */\r\nfunction buildQuadrants(maxLevel, data) {\r\n    // [block, level]\r\n    var stack = [0, 0];\r\n    while (stack.length) {\r\n        var level = stack.pop(), block = stack.pop();\r\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\r\n        var x = data[block + X_OFFSET], y = data[block + Y_OFFSET], width = data[block + WIDTH_OFFSET], height = data[block + HEIGHT_OFFSET], hw = width / 2, hh = height / 2;\r\n        data[topLeftBlock + X_OFFSET] = x;\r\n        data[topLeftBlock + Y_OFFSET] = y;\r\n        data[topLeftBlock + WIDTH_OFFSET] = hw;\r\n        data[topLeftBlock + HEIGHT_OFFSET] = hh;\r\n        data[topRightBlock + X_OFFSET] = x + hw;\r\n        data[topRightBlock + Y_OFFSET] = y;\r\n        data[topRightBlock + WIDTH_OFFSET] = hw;\r\n        data[topRightBlock + HEIGHT_OFFSET] = hh;\r\n        data[bottomLeftBlock + X_OFFSET] = x;\r\n        data[bottomLeftBlock + Y_OFFSET] = y + hh;\r\n        data[bottomLeftBlock + WIDTH_OFFSET] = hw;\r\n        data[bottomLeftBlock + HEIGHT_OFFSET] = hh;\r\n        data[bottomRightBlock + X_OFFSET] = x + hw;\r\n        data[bottomRightBlock + Y_OFFSET] = y + hh;\r\n        data[bottomRightBlock + WIDTH_OFFSET] = hw;\r\n        data[bottomRightBlock + HEIGHT_OFFSET] = hh;\r\n        if (level < maxLevel - 1) {\r\n            stack.push(bottomRightBlock, level + 1);\r\n            stack.push(bottomLeftBlock, level + 1);\r\n            stack.push(topRightBlock, level + 1);\r\n            stack.push(topLeftBlock, level + 1);\r\n        }\r\n    }\r\n}\r\nfunction insertNode(maxLevel, data, containers, key, x, y, size) {\r\n    var x1 = x - size, y1 = y - size, w = size * 2;\r\n    var level = 0, block = 0;\r\n    while (true) {\r\n        // If we reached max level\r\n        if (level >= maxLevel) {\r\n            containers[block] = containers[block] || [];\r\n            containers[block].push(key);\r\n            return;\r\n        }\r\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\r\n        var collidingWithTopLeft = squareCollidesWithQuad(x1, y1, w, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);\r\n        var collidingWithTopRight = squareCollidesWithQuad(x1, y1, w, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);\r\n        var collidingWithBottomLeft = squareCollidesWithQuad(x1, y1, w, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);\r\n        var collidingWithBottomRight = squareCollidesWithQuad(x1, y1, w, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);\r\n        var collisions = [\r\n            collidingWithTopLeft,\r\n            collidingWithTopRight,\r\n            collidingWithBottomLeft,\r\n            collidingWithBottomRight,\r\n        ].reduce(function (acc, current) {\r\n            if (current)\r\n                return acc + 1;\r\n            else\r\n                return acc;\r\n        }, 0);\r\n        // If we have no collision at root level, inject node in the outside block\r\n        if (collisions === 0 && level === 0) {\r\n            containers[OUTSIDE_BLOCK].push(key);\r\n            if (!hasWarnedTooMuchOutside && containers[OUTSIDE_BLOCK].length >= 5) {\r\n                hasWarnedTooMuchOutside = true;\r\n                console.warn(\"sigma/quadtree.insertNode: At least 5 nodes are outside the global quadtree zone. \" +\r\n                    \"You might have a problem with the normalization function or the custom bounding box.\");\r\n            }\r\n            return;\r\n        }\r\n        // If we don't have at least a collision but deeper, there is an issue\r\n        if (collisions === 0)\r\n            throw new Error(\"sigma/quadtree.insertNode: no collision (level: \".concat(level, \", key: \").concat(key, \", x: \").concat(x, \", y: \").concat(y, \", size: \").concat(size, \").\"));\r\n        // If we have 3 collisions, we have a geometry problem obviously\r\n        if (collisions === 3)\r\n            throw new Error(\"sigma/quadtree.insertNode: 3 impossible collisions (level: \".concat(level, \", key: \").concat(key, \", x: \").concat(x, \", y: \").concat(y, \", size: \").concat(size, \").\"));\r\n        // If we have more that one collision, we stop here and store the node\r\n        // in the relevant containers\r\n        if (collisions > 1) {\r\n            containers[block] = containers[block] || [];\r\n            containers[block].push(key);\r\n            return;\r\n        }\r\n        else {\r\n            level++;\r\n        }\r\n        // Else we recurse into the correct quads\r\n        if (collidingWithTopLeft)\r\n            block = topLeftBlock;\r\n        if (collidingWithTopRight)\r\n            block = topRightBlock;\r\n        if (collidingWithBottomLeft)\r\n            block = bottomLeftBlock;\r\n        if (collidingWithBottomRight)\r\n            block = bottomRightBlock;\r\n    }\r\n}\r\nfunction getNodesInAxisAlignedRectangleArea(maxLevel, data, containers, x1, y1, w, h) {\r\n    // [block, level]\r\n    var stack = [0, 0];\r\n    var collectedNodes = [];\r\n    var container;\r\n    while (stack.length) {\r\n        var level = stack.pop(), block = stack.pop();\r\n        // Collecting nodes\r\n        container = containers[block];\r\n        if (container)\r\n            (0, extend_1.default)(collectedNodes, container);\r\n        // If we reached max level\r\n        if (level >= maxLevel)\r\n            continue;\r\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\r\n        var collidingWithTopLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);\r\n        var collidingWithTopRight = rectangleCollidesWithQuad(x1, y1, w, h, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);\r\n        var collidingWithBottomLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);\r\n        var collidingWithBottomRight = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);\r\n        if (collidingWithTopLeft)\r\n            stack.push(topLeftBlock, level + 1);\r\n        if (collidingWithTopRight)\r\n            stack.push(topRightBlock, level + 1);\r\n        if (collidingWithBottomLeft)\r\n            stack.push(bottomLeftBlock, level + 1);\r\n        if (collidingWithBottomRight)\r\n            stack.push(bottomRightBlock, level + 1);\r\n    }\r\n    return collectedNodes;\r\n}\r\n/**\r\n * QuadTree class.\r\n *\r\n * @constructor\r\n * @param {object} boundaries - The graph boundaries.\r\n */\r\nvar QuadTree = /** @class */ (function () {\r\n    function QuadTree(params) {\r\n        var _a;\r\n        if (params === void 0) { params = {}; }\r\n        this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);\r\n        this.cache = null;\r\n        this.lastRectangle = null;\r\n        // Allocating the underlying byte array\r\n        var L = Math.pow(4, MAX_LEVEL);\r\n        this.data = new Float32Array(BLOCKS * ((4 * L - 1) / 3));\r\n        if (params.boundaries)\r\n            this.resize(params.boundaries);\r\n        else\r\n            this.resize({\r\n                x: 0,\r\n                y: 0,\r\n                width: 1,\r\n                height: 1,\r\n            });\r\n    }\r\n    QuadTree.prototype.add = function (key, x, y, size) {\r\n        insertNode(MAX_LEVEL, this.data, this.containers, key, x, y, size);\r\n        return this;\r\n    };\r\n    QuadTree.prototype.resize = function (boundaries) {\r\n        this.clear();\r\n        // Building the quadrants\r\n        this.data[X_OFFSET] = boundaries.x;\r\n        this.data[Y_OFFSET] = boundaries.y;\r\n        this.data[WIDTH_OFFSET] = boundaries.width;\r\n        this.data[HEIGHT_OFFSET] = boundaries.height;\r\n        buildQuadrants(MAX_LEVEL, this.data);\r\n    };\r\n    QuadTree.prototype.clear = function () {\r\n        var _a;\r\n        this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);\r\n        return this;\r\n    };\r\n    QuadTree.prototype.point = function (x, y) {\r\n        var nodes = this.containers[OUTSIDE_BLOCK].slice();\r\n        var block = 0, level = 0;\r\n        do {\r\n            if (this.containers[block])\r\n                (0, extend_1.default)(nodes, this.containers[block]);\r\n            var quad = pointIsInQuad(x, y, this.data[block + X_OFFSET], this.data[block + Y_OFFSET], this.data[block + WIDTH_OFFSET], this.data[block + HEIGHT_OFFSET]);\r\n            block = 4 * block + quad * BLOCKS;\r\n            level++;\r\n        } while (level <= MAX_LEVEL);\r\n        return nodes;\r\n    };\r\n    QuadTree.prototype.rectangle = function (x1, y1, x2, y2, height) {\r\n        var lr = this.lastRectangle;\r\n        if (lr && x1 === lr.x1 && x2 === lr.x2 && y1 === lr.y1 && y2 === lr.y2 && height === lr.height) {\r\n            return this.cache;\r\n        }\r\n        this.lastRectangle = {\r\n            x1: x1,\r\n            y1: y1,\r\n            x2: x2,\r\n            y2: y2,\r\n            height: height,\r\n        };\r\n        // If the rectangle is shifted, we use the smallest aligned rectangle that contains the shifted one:\r\n        if (!isRectangleAligned(this.lastRectangle))\r\n            this.lastRectangle = getCircumscribedAlignedRectangle(this.lastRectangle);\r\n        this.cache = getNodesInAxisAlignedRectangleArea(MAX_LEVEL, this.data, this.containers, x1, y1, Math.abs(x1 - x2) || Math.abs(y1 - y2), height);\r\n        // Add all the nodes in the outside block, since they might be relevant, and since they should be very few:\r\n        (0, extend_1.default)(this.cache, this.containers[OUTSIDE_BLOCK]);\r\n        return this.cache;\r\n    };\r\n    return QuadTree;\r\n}());\r\nexports.default = QuadTree;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.edgeLabelsToDisplayFromNodes = exports.LabelGrid = void 0;\r\n/**\r\n * Class representing a single candidate for the label grid selection.\r\n *\r\n * It also describes a deterministic way to compare two candidates to assess\r\n * which one is better.\r\n */\r\nvar LabelCandidate = /** @class */ (function () {\r\n    function LabelCandidate(key, size) {\r\n        this.key = key;\r\n        this.size = size;\r\n    }\r\n    LabelCandidate.compare = function (first, second) {\r\n        // First we compare by size\r\n        if (first.size > second.size)\r\n            return -1;\r\n        if (first.size < second.size)\r\n            return 1;\r\n        // Then since no two nodes can have the same key, we use it to\r\n        // deterministically tie-break by key\r\n        if (first.key > second.key)\r\n            return 1;\r\n        // NOTE: this comparator cannot return 0\r\n        return -1;\r\n    };\r\n    return LabelCandidate;\r\n}());\r\n/**\r\n * Class representing a 2D spatial grid divided into constant-size cells.\r\n */\r\nvar LabelGrid = /** @class */ (function () {\r\n    function LabelGrid() {\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.cellSize = 0;\r\n        this.columns = 0;\r\n        this.rows = 0;\r\n        this.cells = {};\r\n    }\r\n    LabelGrid.prototype.resizeAndClear = function (dimensions, cellSize) {\r\n        this.width = dimensions.width;\r\n        this.height = dimensions.height;\r\n        this.cellSize = cellSize;\r\n        this.columns = Math.ceil(dimensions.width / cellSize);\r\n        this.rows = Math.ceil(dimensions.height / cellSize);\r\n        this.cells = {};\r\n    };\r\n    LabelGrid.prototype.getIndex = function (pos) {\r\n        var xIndex = Math.floor(pos.x / this.cellSize);\r\n        var yIndex = Math.floor(pos.y / this.cellSize);\r\n        return yIndex * this.columns + xIndex;\r\n    };\r\n    LabelGrid.prototype.add = function (key, size, pos) {\r\n        var candidate = new LabelCandidate(key, size);\r\n        var index = this.getIndex(pos);\r\n        var cell = this.cells[index];\r\n        if (!cell) {\r\n            cell = [];\r\n            this.cells[index] = cell;\r\n        }\r\n        cell.push(candidate);\r\n    };\r\n    LabelGrid.prototype.organize = function () {\r\n        for (var k in this.cells) {\r\n            var cell = this.cells[k];\r\n            cell.sort(LabelCandidate.compare);\r\n        }\r\n    };\r\n    LabelGrid.prototype.getLabelsToDisplay = function (ratio, density) {\r\n        // TODO: work on visible nodes to optimize? ^ -> threshold outside so that memoization works?\r\n        // TODO: adjust threshold lower, but increase cells a bit?\r\n        // TODO: hunt for geom issue in disguise\r\n        // TODO: memoize while ratio does not move. method to force recompute\r\n        var cellArea = this.cellSize * this.cellSize;\r\n        var scaledCellArea = cellArea / ratio / ratio;\r\n        var scaledDensity = (scaledCellArea * density) / cellArea;\r\n        var labelsToDisplayPerCell = Math.ceil(scaledDensity);\r\n        var labels = [];\r\n        for (var k in this.cells) {\r\n            var cell = this.cells[k];\r\n            for (var i = 0; i < Math.min(labelsToDisplayPerCell, cell.length); i++) {\r\n                labels.push(cell[i].key);\r\n            }\r\n        }\r\n        return labels;\r\n    };\r\n    return LabelGrid;\r\n}());\r\nexports.LabelGrid = LabelGrid;\r\n/**\r\n * Label heuristic selecting edge labels to display, based on displayed node\r\n * labels\r\n *\r\n * @param  {object} params                 - Parameters:\r\n * @param  {Set}      displayedNodeLabels  - Currently displayed node labels.\r\n * @param  {Set}      highlightedNodes     - Highlighted nodes.\r\n * @param  {Graph}    graph                - The rendered graph.\r\n * @param  {string}   hoveredNode          - Hovered node (optional)\r\n * @return {Array}                         - The selected labels.\r\n */\r\nfunction edgeLabelsToDisplayFromNodes(params) {\r\n    var graph = params.graph, hoveredNode = params.hoveredNode, highlightedNodes = params.highlightedNodes, displayedNodeLabels = params.displayedNodeLabels;\r\n    var worthyEdges = [];\r\n    // TODO: the code below can be optimized using #.forEach and batching the code per adj\r\n    // We should display an edge's label if:\r\n    //   - Any of its extremities is highlighted or hovered\r\n    //   - Both of its extremities has its label shown\r\n    graph.forEachEdge(function (edge, _, source, target) {\r\n        if (source === hoveredNode ||\r\n            target === hoveredNode ||\r\n            highlightedNodes.has(source) ||\r\n            highlightedNodes.has(target) ||\r\n            (displayedNodeLabels.has(source) && displayedNodeLabels.has(target))) {\r\n            worthyEdges.push(edge);\r\n        }\r\n    });\r\n    return worthyEdges;\r\n}\r\nexports.edgeLabelsToDisplayFromNodes = edgeLabelsToDisplayFromNodes;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction drawLabel(context, data, settings) {\r\n    if (!data.label)\r\n        return;\r\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight, color = settings.labelColor.attribute\r\n        ? data[settings.labelColor.attribute] || settings.labelColor.color || \"#000\"\r\n        : settings.labelColor.color;\r\n    context.fillStyle = color;\r\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\r\n    context.fillText(data.label, data.x + data.size + 3, data.y + size / 3);\r\n}\r\nexports.default = drawLabel;\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar label_1 = __importDefault(require(\"./label\"));\r\n/**\r\n * Draw an hovered node.\r\n * - if there is no label => display a shadow on the node\r\n * - if the label box is bigger than node size => display a label box that contains the node with a shadow\r\n * - else node with shadow and the label box\r\n */\r\nfunction drawHover(context, data, settings) {\r\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight;\r\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\r\n    // Then we draw the label background\r\n    context.fillStyle = \"#FFF\";\r\n    context.shadowOffsetX = 0;\r\n    context.shadowOffsetY = 0;\r\n    context.shadowBlur = 8;\r\n    context.shadowColor = \"#000\";\r\n    var PADDING = 2;\r\n    if (typeof data.label === \"string\") {\r\n        var textWidth = context.measureText(data.label).width, boxWidth = Math.round(textWidth + 5), boxHeight = Math.round(size + 2 * PADDING), radius = Math.max(data.size, size / 2) + PADDING;\r\n        var angleRadian = Math.asin(boxHeight / 2 / radius);\r\n        var xDeltaCoord = Math.sqrt(Math.abs(Math.pow(radius, 2) - Math.pow(boxHeight / 2, 2)));\r\n        context.beginPath();\r\n        context.moveTo(data.x + xDeltaCoord, data.y + boxHeight / 2);\r\n        context.lineTo(data.x + radius + boxWidth, data.y + boxHeight / 2);\r\n        context.lineTo(data.x + radius + boxWidth, data.y - boxHeight / 2);\r\n        context.lineTo(data.x + xDeltaCoord, data.y - boxHeight / 2);\r\n        context.arc(data.x, data.y, radius, angleRadian, -angleRadian);\r\n        context.closePath();\r\n        context.fill();\r\n    }\r\n    else {\r\n        context.beginPath();\r\n        context.arc(data.x, data.y, data.size + PADDING, 0, Math.PI * 2);\r\n        context.closePath();\r\n        context.fill();\r\n    }\r\n    context.shadowOffsetX = 0;\r\n    context.shadowOffsetY = 0;\r\n    context.shadowBlur = 0;\r\n    // And finally we draw the label\r\n    (0, label_1.default)(context, data, settings);\r\n}\r\nexports.default = drawHover;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction drawEdgeLabel(context, edgeData, sourceData, targetData, settings) {\r\n    var size = settings.edgeLabelSize, font = settings.edgeLabelFont, weight = settings.edgeLabelWeight, color = settings.edgeLabelColor.attribute\r\n        ? edgeData[settings.edgeLabelColor.attribute] || settings.edgeLabelColor.color || \"#000\"\r\n        : settings.edgeLabelColor.color;\r\n    var label = edgeData.label;\r\n    if (!label)\r\n        return;\r\n    context.fillStyle = color;\r\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\r\n    // Computing positions without considering nodes sizes:\r\n    var sSize = sourceData.size;\r\n    var tSize = targetData.size;\r\n    var sx = sourceData.x;\r\n    var sy = sourceData.y;\r\n    var tx = targetData.x;\r\n    var ty = targetData.y;\r\n    var cx = (sx + tx) / 2;\r\n    var cy = (sy + ty) / 2;\r\n    var dx = tx - sx;\r\n    var dy = ty - sy;\r\n    var d = Math.sqrt(dx * dx + dy * dy);\r\n    if (d < sSize + tSize)\r\n        return;\r\n    // Adding nodes sizes:\r\n    sx += (dx * sSize) / d;\r\n    sy += (dy * sSize) / d;\r\n    tx -= (dx * tSize) / d;\r\n    ty -= (dy * tSize) / d;\r\n    cx = (sx + tx) / 2;\r\n    cy = (sy + ty) / 2;\r\n    dx = tx - sx;\r\n    dy = ty - sy;\r\n    d = Math.sqrt(dx * dx + dy * dy);\r\n    // Handling ellipsis\r\n    var textLength = context.measureText(label).width;\r\n    if (textLength > d) {\r\n        var ellipsis = \"…\";\r\n        label = label + ellipsis;\r\n        textLength = context.measureText(label).width;\r\n        while (textLength > d && label.length > 1) {\r\n            label = label.slice(0, -2) + ellipsis;\r\n            textLength = context.measureText(label).width;\r\n        }\r\n        if (label.length < 4)\r\n            return;\r\n    }\r\n    var angle;\r\n    if (dx > 0) {\r\n        if (dy > 0)\r\n            angle = Math.acos(dx / d);\r\n        else\r\n            angle = Math.asin(dy / d);\r\n    }\r\n    else {\r\n        if (dy > 0)\r\n            angle = Math.acos(dx / d) + Math.PI;\r\n        else\r\n            angle = Math.asin(dx / d) + Math.PI / 2;\r\n    }\r\n    context.save();\r\n    context.translate(cx, cy);\r\n    context.rotate(angle);\r\n    context.fillText(label, -textLength / 2, edgeData.size / 2 + size);\r\n    context.restore();\r\n}\r\nexports.default = drawEdgeLabel;\r\n", "\"use strict\";\r\n/**\r\n * Sigma.js Shader Utils\r\n * ======================\r\n *\r\n * Code used to load sigma's shaders.\r\n * @module\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.loadProgram = exports.loadFragmentShader = exports.loadVertexShader = void 0;\r\n/**\r\n * Function used to load a shader.\r\n */\r\nfunction loadShader(type, gl, source) {\r\n    var glType = type === \"VERTEX\" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;\r\n    // Creating the shader\r\n    var shader = gl.createShader(glType);\r\n    if (shader === null) {\r\n        throw new Error(\"loadShader: error while creating the shader\");\r\n    }\r\n    // Loading source\r\n    gl.shaderSource(shader, source);\r\n    // Compiling the shader\r\n    gl.compileShader(shader);\r\n    // Retrieving compilation status\r\n    var successfullyCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    // Throwing if something went awry\r\n    if (!successfullyCompiled) {\r\n        var infoLog = gl.getShaderInfoLog(shader);\r\n        gl.deleteShader(shader);\r\n        throw new Error(\"loadShader: error while compiling the shader:\\n\".concat(infoLog, \"\\n\").concat(source));\r\n    }\r\n    return shader;\r\n}\r\nfunction loadVertexShader(gl, source) {\r\n    return loadShader(\"VERTEX\", gl, source);\r\n}\r\nexports.loadVertexShader = loadVertexShader;\r\nfunction loadFragmentShader(gl, source) {\r\n    return loadShader(\"FRAGMENT\", gl, source);\r\n}\r\nexports.loadFragmentShader = loadFragmentShader;\r\n/**\r\n * Function used to load a program.\r\n */\r\nfunction loadProgram(gl, shaders) {\r\n    var program = gl.createProgram();\r\n    if (program === null) {\r\n        throw new Error(\"loadProgram: error while creating the program.\");\r\n    }\r\n    var i, l;\r\n    // Attaching the shaders\r\n    for (i = 0, l = shaders.length; i < l; i++)\r\n        gl.attachShader(program, shaders[i]);\r\n    gl.linkProgram(program);\r\n    // Checking status\r\n    var successfullyLinked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (!successfullyLinked) {\r\n        gl.deleteProgram(program);\r\n        throw new Error(\"loadProgram: error while linking the program.\");\r\n    }\r\n    return program;\r\n}\r\nexports.loadProgram = loadProgram;\r\n", "\"use strict\";\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Program = exports.AbstractProgram = void 0;\r\nvar utils_1 = require(\"../../../../utils\");\r\nvar utils_2 = require(\"../../shaders/utils\");\r\nvar SIZE_FACTOR_PER_ATTRIBUTE_TYPE = (_a = {},\r\n    _a[WebGL2RenderingContext.BOOL] = 1,\r\n    _a[WebGL2RenderingContext.BYTE] = 1,\r\n    _a[WebGL2RenderingContext.UNSIGNED_BYTE] = 1,\r\n    _a[WebGL2RenderingContext.SHORT] = 2,\r\n    _a[WebGL2RenderingContext.UNSIGNED_SHORT] = 2,\r\n    _a[WebGL2RenderingContext.INT] = 4,\r\n    _a[WebGL2RenderingContext.UNSIGNED_INT] = 4,\r\n    _a[WebGL2RenderingContext.FLOAT] = 4,\r\n    _a);\r\nvar AbstractProgram = /** @class */ (function () {\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    function AbstractProgram(_gl, _renderer) {\r\n    }\r\n    return AbstractProgram;\r\n}());\r\nexports.AbstractProgram = AbstractProgram;\r\nvar Program = /** @class */ (function () {\r\n    function Program(gl, renderer) {\r\n        var _this = this;\r\n        this.array = new Float32Array();\r\n        this.indicesArray = null;\r\n        this.uniformLocations = {};\r\n        this.attributeLocations = {};\r\n        this.capacity = 0;\r\n        this.verticesCount = 0;\r\n        // Reading program definition\r\n        var definition = this.getDefinition();\r\n        this.VERTICES = definition.VERTICES;\r\n        this.ARRAY_ITEMS_PER_VERTEX = definition.ARRAY_ITEMS_PER_VERTEX;\r\n        this.VERTEX_SHADER_SOURCE = definition.VERTEX_SHADER_SOURCE;\r\n        this.FRAGMENT_SHADER_SOURCE = definition.FRAGMENT_SHADER_SOURCE;\r\n        this.UNIFORMS = definition.UNIFORMS;\r\n        this.ATTRIBUTES = definition.ATTRIBUTES;\r\n        // Computing stride\r\n        this.STRIDE = this.VERTICES * this.ARRAY_ITEMS_PER_VERTEX;\r\n        // Members\r\n        this.gl = gl;\r\n        this.renderer = renderer;\r\n        // Webgl buffers\r\n        var buffer = gl.createBuffer();\r\n        if (buffer === null)\r\n            throw new Error(\"Program: error while creating the webgl buffer.\");\r\n        this.buffer = buffer;\r\n        var indicesBuffer = gl.createBuffer();\r\n        if (indicesBuffer === null)\r\n            throw new Error(\"Program: error while creating the webgl indices buffer.\");\r\n        this.indicesBuffer = indicesBuffer;\r\n        // Shaders and program\r\n        this.vertexShader = (0, utils_2.loadVertexShader)(this.gl, this.VERTEX_SHADER_SOURCE);\r\n        this.fragmentShader = (0, utils_2.loadFragmentShader)(this.gl, this.FRAGMENT_SHADER_SOURCE);\r\n        this.program = (0, utils_2.loadProgram)(this.gl, [this.vertexShader, this.fragmentShader]);\r\n        // Indices\r\n        this.canUse32BitsIndices = (0, utils_1.canUse32BitsIndices)(this.gl);\r\n        this.indicesType = this.canUse32BitsIndices ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\r\n        this.IndicesArray = this.canUse32BitsIndices ? Uint32Array : Uint16Array;\r\n        // Initializing locations\r\n        this.UNIFORMS.forEach(function (uniformName) {\r\n            var location = _this.gl.getUniformLocation(_this.program, uniformName);\r\n            if (location === null)\r\n                throw new Error(\"Program: error while getting location for uniform \\\"\".concat(uniformName, \"\\\".\"));\r\n            _this.uniformLocations[uniformName] = location;\r\n        });\r\n        this.ATTRIBUTES.forEach(function (attr) {\r\n            var location = _this.gl.getAttribLocation(_this.program, attr.name);\r\n            if (location === -1)\r\n                throw new Error(\"Program: error while getting location for attribute \\\"\".concat(attr.name, \"\\\".\"));\r\n            _this.attributeLocations[attr.name] = location;\r\n        });\r\n    }\r\n    Program.prototype.bind = function () {\r\n        var _this = this;\r\n        var gl = this.gl;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\r\n        if (this.indicesArray) {\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\r\n        }\r\n        for (var attributeName in this.attributeLocations) {\r\n            gl.enableVertexAttribArray(this.attributeLocations[attributeName]);\r\n        }\r\n        var offset = 0;\r\n        this.ATTRIBUTES.forEach(function (attr) {\r\n            var location = _this.attributeLocations[attr.name];\r\n            gl.vertexAttribPointer(location, attr.size, attr.type, attr.normalized || false, _this.ARRAY_ITEMS_PER_VERTEX * Float32Array.BYTES_PER_ELEMENT, offset);\r\n            var sizeFactor = SIZE_FACTOR_PER_ATTRIBUTE_TYPE[attr.type];\r\n            if (typeof sizeFactor !== \"number\")\r\n                throw new Error(\"Program.bind: yet unsupported attribute type \\\"\".concat(attr.type, \"\\\"!\"));\r\n            offset += attr.size * sizeFactor;\r\n        });\r\n    };\r\n    Program.prototype.bufferData = function () {\r\n        var gl = this.gl;\r\n        this.gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\r\n        if (this.indicesArray) {\r\n            this.gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indicesArray, gl.STATIC_DRAW);\r\n        }\r\n    };\r\n    // NOTE: implementing `reallocateIndices` is optional\r\n    Program.prototype.reallocateIndices = function () {\r\n        return;\r\n    };\r\n    Program.prototype.reallocate = function (capacity) {\r\n        // If desired capacity has not changed we do nothing\r\n        // NOTE: it's possible here to implement more subtle reallocation schemes\r\n        // when the number of rendered items increase or decrease\r\n        if (capacity === this.capacity)\r\n            return;\r\n        this.capacity = capacity;\r\n        this.verticesCount = this.VERTICES * capacity;\r\n        this.array = new Float32Array(this.verticesCount * this.ARRAY_ITEMS_PER_VERTEX);\r\n        if (typeof this.reallocateIndices === \"function\")\r\n            this.reallocateIndices();\r\n    };\r\n    Program.prototype.hasNothingToRender = function () {\r\n        return this.verticesCount === 0;\r\n    };\r\n    Program.prototype.render = function (params) {\r\n        if (this.hasNothingToRender())\r\n            return;\r\n        this.bind();\r\n        this.bufferData();\r\n        this.gl.useProgram(this.program);\r\n        this.draw(params);\r\n    };\r\n    return Program;\r\n}());\r\nexports.Program = Program;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createNodeCompoundProgram = exports.NodeProgram = exports.AbstractNodeProgram = void 0;\r\nvar program_1 = require(\"./program\");\r\nvar AbstractNodeProgram = /** @class */ (function (_super) {\r\n    __extends(AbstractNodeProgram, _super);\r\n    function AbstractNodeProgram() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return AbstractNodeProgram;\r\n}(program_1.AbstractProgram));\r\nexports.AbstractNodeProgram = AbstractNodeProgram;\r\nvar NodeProgram = /** @class */ (function (_super) {\r\n    __extends(NodeProgram, _super);\r\n    function NodeProgram() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    NodeProgram.prototype.process = function (offset, data) {\r\n        var i = offset * this.STRIDE;\r\n        // NOTE: dealing with hidden items automatically\r\n        if (data.hidden) {\r\n            for (var l = i + this.STRIDE; i < l; i++) {\r\n                this.array[i] = 0;\r\n            }\r\n            return;\r\n        }\r\n        return this.processVisibleItem(i, data);\r\n    };\r\n    return NodeProgram;\r\n}(program_1.Program));\r\nexports.NodeProgram = NodeProgram;\r\n/**\r\n * Helper function combining two or more programs into a single compound one.\r\n * Note that this is more a quick & easy way to combine program than a really\r\n * performant option. More performant programs can be written entirely.\r\n *\r\n * @param  {array}    programClasses - Program classes to combine.\r\n * @return {function}\r\n */\r\nfunction createNodeCompoundProgram(programClasses) {\r\n    return /** @class */ (function () {\r\n        function NodeCompoundProgram(gl, renderer) {\r\n            this.programs = programClasses.map(function (Program) {\r\n                return new Program(gl, renderer);\r\n            });\r\n        }\r\n        NodeCompoundProgram.prototype.reallocate = function (capacity) {\r\n            this.programs.forEach(function (program) { return program.reallocate(capacity); });\r\n        };\r\n        NodeCompoundProgram.prototype.process = function (offset, data) {\r\n            this.programs.forEach(function (program) { return program.process(offset, data); });\r\n        };\r\n        NodeCompoundProgram.prototype.render = function (params) {\r\n            this.programs.forEach(function (program) { return program.render(params); });\r\n        };\r\n        return NodeCompoundProgram;\r\n    }());\r\n}\r\nexports.createNodeCompoundProgram = createNodeCompoundProgram;\r\n", "(()=>{\"use strict\";var o={d:(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o:(o,t)=>Object.prototype.hasOwnProperty.call(o,t),r:o=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(o,\"__esModule\",{value:!0})}},t={};o.r(t),o.d(t,{default:()=>e});const e=\"attribute vec2 a_position;\\nattribute float a_size;\\nattribute vec4 a_color;\\n\\nuniform float u_sizeRatio;\\nuniform float u_pixelRatio;\\nuniform mat3 u_matrix;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  gl_Position = vec4(\\n    (u_matrix * vec3(a_position, 1)).xy,\\n    0,\\n    1\\n  );\\n\\n  // Multiply the point size twice:\\n  //  - x SCALING_RATIO to correct the canvas scaling\\n  //  - x 2 to correct the formulae\\n  gl_PointSize = a_size / u_sizeRatio * u_pixelRatio * 2.0;\\n\\n  v_border = (0.5 / a_size) * u_sizeRatio;\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=t})();", "(()=>{\"use strict\";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>o});const o=\"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float radius = 0.5;\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  vec2 m = gl_PointCoord - vec2(0.5, 0.5);\\n  float dist = radius - length(m);\\n\\n  float t = 0.0;\\n  if (dist > v_border)\\n    t = 1.0;\\n  else if (dist > 0.0)\\n    t = dist / v_border;\\n\\n  gl_FragColor = mix(transparent, v_color, t);\\n}\\n\";module.exports=n})();", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utils_1 = require(\"../../../utils\");\r\nvar node_1 = require(\"./common/node\");\r\nvar node_point_vert_glsl_1 = __importDefault(require(\"../shaders/node.point.vert.glsl.js\"));\r\nvar node_point_frag_glsl_1 = __importDefault(require(\"../shaders/node.point.frag.glsl.js\"));\r\nvar UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;\r\nvar UNIFORMS = [\"u_sizeRatio\", \"u_pixelRatio\", \"u_matrix\"];\r\nvar NodePointProgram = /** @class */ (function (_super) {\r\n    __extends(NodePointProgram, _super);\r\n    function NodePointProgram() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    NodePointProgram.prototype.getDefinition = function () {\r\n        return {\r\n            VERTICES: 1,\r\n            ARRAY_ITEMS_PER_VERTEX: 4,\r\n            VERTEX_SHADER_SOURCE: node_point_vert_glsl_1.default,\r\n            FRAGMENT_SHADER_SOURCE: node_point_frag_glsl_1.default,\r\n            UNIFORMS: UNIFORMS,\r\n            ATTRIBUTES: [\r\n                { name: \"a_position\", size: 2, type: FLOAT },\r\n                { name: \"a_size\", size: 1, type: FLOAT },\r\n                { name: \"a_color\", size: 4, type: UNSIGNED_BYTE, normalized: true },\r\n            ],\r\n        };\r\n    };\r\n    NodePointProgram.prototype.processVisibleItem = function (i, data) {\r\n        var array = this.array;\r\n        array[i++] = data.x;\r\n        array[i++] = data.y;\r\n        array[i++] = data.size;\r\n        array[i] = (0, utils_1.floatColor)(data.color);\r\n    };\r\n    NodePointProgram.prototype.draw = function (params) {\r\n        var gl = this.gl;\r\n        var _a = this.uniformLocations, u_sizeRatio = _a.u_sizeRatio, u_pixelRatio = _a.u_pixelRatio, u_matrix = _a.u_matrix;\r\n        gl.uniform1f(u_sizeRatio, params.sizeRatio);\r\n        gl.uniform1f(u_pixelRatio, params.pixelRatio);\r\n        gl.uniformMatrix3fv(u_matrix, false, params.matrix);\r\n        gl.drawArrays(gl.POINTS, 0, this.verticesCount);\r\n    };\r\n    return NodePointProgram;\r\n}(node_1.NodeProgram));\r\nexports.default = NodePointProgram;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createEdgeCompoundProgram = exports.EdgeProgram = exports.AbstractEdgeProgram = void 0;\r\nvar program_1 = require(\"./program\");\r\nvar AbstractEdgeProgram = /** @class */ (function (_super) {\r\n    __extends(AbstractEdgeProgram, _super);\r\n    function AbstractEdgeProgram() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return AbstractEdgeProgram;\r\n}(program_1.AbstractProgram));\r\nexports.AbstractEdgeProgram = AbstractEdgeProgram;\r\nvar EdgeProgram = /** @class */ (function (_super) {\r\n    __extends(EdgeProgram, _super);\r\n    function EdgeProgram() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EdgeProgram.prototype.process = function (offset, sourceData, targetData, data) {\r\n        var i = offset * this.STRIDE;\r\n        // NOTE: dealing with hidden items automatically\r\n        if (data.hidden || sourceData.hidden || targetData.hidden) {\r\n            for (var l = i + this.STRIDE; i < l; i++) {\r\n                this.array[i] = 0;\r\n            }\r\n            return;\r\n        }\r\n        return this.processVisibleItem(i, sourceData, targetData, data);\r\n    };\r\n    return EdgeProgram;\r\n}(program_1.Program));\r\nexports.EdgeProgram = EdgeProgram;\r\n/**\r\n * Helper function combining two or more programs into a single compound one.\r\n * Note that this is more a quick & easy way to combine program than a really\r\n * performant option. More performant programs can be written entirely.\r\n *\r\n * @param  {array}    programClasses - Program classes to combine.\r\n * @return {function}\r\n */\r\nfunction createEdgeCompoundProgram(programClasses) {\r\n    return /** @class */ (function () {\r\n        function EdgeCompoundProgram(gl, renderer) {\r\n            this.programs = programClasses.map(function (Program) {\r\n                return new Program(gl, renderer);\r\n            });\r\n        }\r\n        EdgeCompoundProgram.prototype.reallocate = function (capacity) {\r\n            this.programs.forEach(function (program) { return program.reallocate(capacity); });\r\n        };\r\n        EdgeCompoundProgram.prototype.process = function (offset, sourceData, targetData, data) {\r\n            this.programs.forEach(function (program) { return program.process(offset, sourceData, targetData, data); });\r\n        };\r\n        EdgeCompoundProgram.prototype.render = function (params) {\r\n            this.programs.forEach(function (program) { return program.render(params); });\r\n        };\r\n        return EdgeCompoundProgram;\r\n    }());\r\n}\r\nexports.createEdgeCompoundProgram = createEdgeCompoundProgram;\r\n", "(()=>{\"use strict\";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>o});const o='attribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute vec2 a_position;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sizeRatio;\\nuniform float u_zoomRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // We require edges to be at least `minThickness` pixels thick *on screen*\\n  // (so we need to compensate the size ratio):\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n\\n  // Then, we need to retrieve the normalized thickness of the edge in the WebGL\\n  // referential (in a ([0, 1], [0, 1]) space), using our \"magic\" correction\\n  // ratio:\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * webGLThickness, 1)).xy, 0, 1);\\n\\n  // For the fragment shader though, we need a thickness that takes the \"magic\"\\n  // correction ratio into account (as in webGLThickness), but so that the\\n  // antialiasing effect does not depend on the zoom level. So here\\'s yet\\n  // another thickness version:\\n  v_thickness = webGLThickness / u_zoomRatio;\\n\\n  v_normal = unitNormal;\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n';module.exports=n})();", "(()=>{\"use strict\";var e={d:(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>t});const t=\"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float feather = 0.001;\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  float dist = length(v_normal) * v_thickness;\\n\\n  float t = smoothstep(\\n    v_thickness - feather,\\n    v_thickness,\\n    dist\\n  );\\n\\n  gl_FragColor = mix(v_color, transparent, t);\\n}\\n\";module.exports=n})();", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utils_1 = require(\"../../../utils\");\r\nvar edge_1 = require(\"./common/edge\");\r\nvar edge_rectangle_vert_glsl_1 = __importDefault(require(\"../shaders/edge.rectangle.vert.glsl.js\"));\r\nvar edge_rectangle_frag_glsl_1 = __importDefault(require(\"../shaders/edge.rectangle.frag.glsl.js\"));\r\nvar UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;\r\nvar UNIFORMS = [\"u_matrix\", \"u_zoomRatio\", \"u_sizeRatio\", \"u_correctionRatio\"];\r\nvar EdgeRectangleProgram = /** @class */ (function (_super) {\r\n    __extends(EdgeRectangleProgram, _super);\r\n    function EdgeRectangleProgram() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EdgeRectangleProgram.prototype.getDefinition = function () {\r\n        return {\r\n            VERTICES: 4,\r\n            ARRAY_ITEMS_PER_VERTEX: 5,\r\n            VERTEX_SHADER_SOURCE: edge_rectangle_vert_glsl_1.default,\r\n            FRAGMENT_SHADER_SOURCE: edge_rectangle_frag_glsl_1.default,\r\n            UNIFORMS: UNIFORMS,\r\n            ATTRIBUTES: [\r\n                { name: \"a_position\", size: 2, type: FLOAT },\r\n                { name: \"a_normal\", size: 2, type: FLOAT },\r\n                { name: \"a_color\", size: 4, type: UNSIGNED_BYTE, normalized: true },\r\n            ],\r\n        };\r\n    };\r\n    EdgeRectangleProgram.prototype.reallocateIndices = function () {\r\n        var l = this.verticesCount;\r\n        var size = l + l / 2;\r\n        var indices = new this.IndicesArray(size);\r\n        for (var i = 0, c = 0; i < l; i += 4) {\r\n            indices[c++] = i;\r\n            indices[c++] = i + 1;\r\n            indices[c++] = i + 2;\r\n            indices[c++] = i + 2;\r\n            indices[c++] = i + 1;\r\n            indices[c++] = i + 3;\r\n        }\r\n        this.indicesArray = indices;\r\n    };\r\n    EdgeRectangleProgram.prototype.processVisibleItem = function (i, sourceData, targetData, data) {\r\n        var thickness = data.size || 1;\r\n        var x1 = sourceData.x;\r\n        var y1 = sourceData.y;\r\n        var x2 = targetData.x;\r\n        var y2 = targetData.y;\r\n        var color = (0, utils_1.floatColor)(data.color);\r\n        // Computing normals\r\n        var dx = x2 - x1;\r\n        var dy = y2 - y1;\r\n        var len = dx * dx + dy * dy;\r\n        var n1 = 0;\r\n        var n2 = 0;\r\n        if (len) {\r\n            len = 1 / Math.sqrt(len);\r\n            n1 = -dy * len * thickness;\r\n            n2 = dx * len * thickness;\r\n        }\r\n        var array = this.array;\r\n        // First point\r\n        array[i++] = x1;\r\n        array[i++] = y1;\r\n        array[i++] = n1;\r\n        array[i++] = n2;\r\n        array[i++] = color;\r\n        // First point flipped\r\n        array[i++] = x1;\r\n        array[i++] = y1;\r\n        array[i++] = -n1;\r\n        array[i++] = -n2;\r\n        array[i++] = color;\r\n        // Second point\r\n        array[i++] = x2;\r\n        array[i++] = y2;\r\n        array[i++] = n1;\r\n        array[i++] = n2;\r\n        array[i++] = color;\r\n        // Second point flipped\r\n        array[i++] = x2;\r\n        array[i++] = y2;\r\n        array[i++] = -n1;\r\n        array[i++] = -n2;\r\n        array[i] = color;\r\n    };\r\n    EdgeRectangleProgram.prototype.draw = function (params) {\r\n        var gl = this.gl;\r\n        var _a = this.uniformLocations, u_matrix = _a.u_matrix, u_zoomRatio = _a.u_zoomRatio, u_correctionRatio = _a.u_correctionRatio, u_sizeRatio = _a.u_sizeRatio;\r\n        gl.uniformMatrix3fv(u_matrix, false, params.matrix);\r\n        gl.uniform1f(u_zoomRatio, params.zoomRatio);\r\n        gl.uniform1f(u_sizeRatio, params.sizeRatio);\r\n        gl.uniform1f(u_correctionRatio, params.correctionRatio);\r\n        if (!this.indicesArray)\r\n            throw new Error(\"EdgeRectangleProgram: indicesArray should be allocated when drawing!\");\r\n        gl.drawElements(gl.TRIANGLES, this.indicesArray.length, this.indicesType, 0);\r\n    };\r\n    return EdgeRectangleProgram;\r\n}(edge_1.EdgeProgram));\r\nexports.default = EdgeRectangleProgram;\r\n", "(()=>{\"use strict\";var e={d:(a,n)=>{for(var t in n)e.o(n,t)&&!e.o(a,t)&&Object.defineProperty(a,t,{enumerable:!0,get:n[t]})},o:(e,a)=>Object.prototype.hasOwnProperty.call(e,a),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},a={};e.r(a),e.d(a,{default:()=>n});const n=\"attribute vec2 a_position;\\nattribute vec2 a_normal;\\nattribute float a_radius;\\nattribute vec4 a_color;\\nattribute vec3 a_barycentric;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sizeRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadWidthLengthRatio = 0.66;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl and\\n  // edge.clamped.vert.glsl. Please read it to get better comments on what's\\n  // happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n  float webGLNodeRadius = a_radius * 2.0 * u_correctionRatio / u_sizeRatio;\\n  float webGLArrowHeadLength = webGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n  float webGLArrowHeadHalfWidth = webGLArrowHeadLength * arrowHeadWidthLengthRatio / 2.0;\\n\\n  float da = a_barycentric.x;\\n  float db = a_barycentric.y;\\n  float dc = a_barycentric.z;\\n\\n  vec2 delta = vec2(\\n      da * (webGLNodeRadius * unitNormal.y)\\n    + db * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y + webGLArrowHeadHalfWidth * unitNormal.x)\\n    + dc * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y - webGLArrowHeadHalfWidth * unitNormal.x),\\n\\n      da * (-webGLNodeRadius * unitNormal.x)\\n    + db * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x + webGLArrowHeadHalfWidth * unitNormal.y)\\n    + dc * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x - webGLArrowHeadHalfWidth * unitNormal.y)\\n  );\\n\\n  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;\\n\\n  gl_Position = vec4(position, 0, 1);\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=a})();", "(()=>{\"use strict\";var e={d:(o,r)=>{for(var t in r)e.o(r,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:r[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>r});const r=\"precision mediump float;\\n\\nvarying vec4 v_color;\\n\\nvoid main(void) {\\n  gl_FragColor = v_color;\\n}\\n\";module.exports=o})();", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utils_1 = require(\"../../../utils\");\r\nvar edge_1 = require(\"./common/edge\");\r\nvar edge_arrowHead_vert_glsl_1 = __importDefault(require(\"../shaders/edge.arrowHead.vert.glsl.js\"));\r\nvar edge_arrowHead_frag_glsl_1 = __importDefault(require(\"../shaders/edge.arrowHead.frag.glsl.js\"));\r\nvar UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;\r\nvar UNIFORMS = [\"u_matrix\", \"u_sizeRatio\", \"u_correctionRatio\"];\r\nvar EdgeArrowHeadProgram = /** @class */ (function (_super) {\r\n    __extends(EdgeArrowHeadProgram, _super);\r\n    function EdgeArrowHeadProgram() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EdgeArrowHeadProgram.prototype.getDefinition = function () {\r\n        return {\r\n            VERTICES: 3,\r\n            ARRAY_ITEMS_PER_VERTEX: 9,\r\n            VERTEX_SHADER_SOURCE: edge_arrowHead_vert_glsl_1.default,\r\n            FRAGMENT_SHADER_SOURCE: edge_arrowHead_frag_glsl_1.default,\r\n            UNIFORMS: UNIFORMS,\r\n            ATTRIBUTES: [\r\n                { name: \"a_position\", size: 2, type: FLOAT },\r\n                { name: \"a_normal\", size: 2, type: FLOAT },\r\n                { name: \"a_radius\", size: 1, type: FLOAT },\r\n                { name: \"a_color\", size: 4, type: UNSIGNED_BYTE, normalized: true },\r\n                { name: \"a_barycentric\", size: 3, type: FLOAT },\r\n            ],\r\n        };\r\n    };\r\n    EdgeArrowHeadProgram.prototype.processVisibleItem = function (i, sourceData, targetData, data) {\r\n        var thickness = data.size || 1;\r\n        var radius = targetData.size || 1;\r\n        var x1 = sourceData.x;\r\n        var y1 = sourceData.y;\r\n        var x2 = targetData.x;\r\n        var y2 = targetData.y;\r\n        var color = (0, utils_1.floatColor)(data.color);\r\n        // Computing normals\r\n        var dx = x2 - x1;\r\n        var dy = y2 - y1;\r\n        var len = dx * dx + dy * dy;\r\n        var n1 = 0;\r\n        var n2 = 0;\r\n        if (len) {\r\n            len = 1 / Math.sqrt(len);\r\n            n1 = -dy * len * thickness;\r\n            n2 = dx * len * thickness;\r\n        }\r\n        var array = this.array;\r\n        // First point\r\n        array[i++] = x2;\r\n        array[i++] = y2;\r\n        array[i++] = -n1;\r\n        array[i++] = -n2;\r\n        array[i++] = radius;\r\n        array[i++] = color;\r\n        array[i++] = 1;\r\n        array[i++] = 0;\r\n        array[i++] = 0;\r\n        // Second point\r\n        array[i++] = x2;\r\n        array[i++] = y2;\r\n        array[i++] = -n1;\r\n        array[i++] = -n2;\r\n        array[i++] = radius;\r\n        array[i++] = color;\r\n        array[i++] = 0;\r\n        array[i++] = 1;\r\n        array[i++] = 0;\r\n        // Third point\r\n        array[i++] = x2;\r\n        array[i++] = y2;\r\n        array[i++] = -n1;\r\n        array[i++] = -n2;\r\n        array[i++] = radius;\r\n        array[i++] = color;\r\n        array[i++] = 0;\r\n        array[i++] = 0;\r\n        array[i] = 1;\r\n    };\r\n    EdgeArrowHeadProgram.prototype.draw = function (params) {\r\n        var gl = this.gl;\r\n        var _a = this.uniformLocations, u_matrix = _a.u_matrix, u_sizeRatio = _a.u_sizeRatio, u_correctionRatio = _a.u_correctionRatio;\r\n        gl.uniformMatrix3fv(u_matrix, false, params.matrix);\r\n        gl.uniform1f(u_sizeRatio, params.sizeRatio);\r\n        gl.uniform1f(u_correctionRatio, params.correctionRatio);\r\n        gl.drawArrays(gl.TRIANGLES, 0, this.verticesCount);\r\n    };\r\n    return EdgeArrowHeadProgram;\r\n}(edge_1.EdgeProgram));\r\nexports.default = EdgeArrowHeadProgram;\r\n", "(()=>{\"use strict\";var e={d:(o,n)=>{for(var t in n)e.o(n,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:n[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>n});const n=\"attribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute vec2 a_position;\\nattribute float a_radius;\\n\\nuniform mat3 u_matrix;\\nuniform float u_zoomRatio;\\nuniform float u_sizeRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl. Please read it to\\n  // get better comments on what's happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n\\n  // Here, we move the point to leave space for the arrow head:\\n  float direction = sign(a_radius);\\n  float webGLNodeRadius = direction * a_radius * 2.0 * u_correctionRatio / u_sizeRatio;\\n  float webGLArrowHeadLength = webGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n\\n  vec2 compensationVector = vec2(-direction * unitNormal.y, direction * unitNormal.x) * (webGLNodeRadius + webGLArrowHeadLength);\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * webGLThickness + compensationVector, 1)).xy, 0, 1);\\n\\n  v_thickness = webGLThickness / u_zoomRatio;\\n\\n  v_normal = unitNormal;\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=o})();", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Sigma.js WebGL Renderer Edge Program\r\n * =====================================\r\n *\r\n * Program rendering edges as thick lines but with a twist: the end of edge\r\n * does not sit in the middle of target node but instead stays by some margin.\r\n *\r\n * This is useful when combined with arrows to draw directed edges.\r\n * @module\r\n */\r\nvar edge_rectangle_1 = __importDefault(require(\"./edge.rectangle\"));\r\nvar edge_clamped_vert_glsl_1 = __importDefault(require(\"../shaders/edge.clamped.vert.glsl.js\"));\r\nvar utils_1 = require(\"../../../utils\");\r\nvar UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;\r\nvar EdgeClampedProgram = /** @class */ (function (_super) {\r\n    __extends(EdgeClampedProgram, _super);\r\n    function EdgeClampedProgram() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EdgeClampedProgram.prototype.getDefinition = function () {\r\n        return __assign(__assign({}, _super.prototype.getDefinition.call(this)), { ARRAY_ITEMS_PER_VERTEX: 6, VERTEX_SHADER_SOURCE: edge_clamped_vert_glsl_1.default, ATTRIBUTES: [\r\n                { name: \"a_position\", size: 2, type: FLOAT },\r\n                { name: \"a_normal\", size: 2, type: FLOAT },\r\n                { name: \"a_color\", size: 4, type: UNSIGNED_BYTE, normalized: true },\r\n                { name: \"a_radius\", size: 1, type: FLOAT },\r\n            ] });\r\n    };\r\n    EdgeClampedProgram.prototype.processVisibleItem = function (i, sourceData, targetData, data) {\r\n        var thickness = data.size || 1;\r\n        var x1 = sourceData.x;\r\n        var y1 = sourceData.y;\r\n        var x2 = targetData.x;\r\n        var y2 = targetData.y;\r\n        var color = (0, utils_1.floatColor)(data.color);\r\n        // Computing normals\r\n        var dx = x2 - x1;\r\n        var dy = y2 - y1;\r\n        var radius = targetData.size || 1;\r\n        var len = dx * dx + dy * dy;\r\n        var n1 = 0;\r\n        var n2 = 0;\r\n        if (len) {\r\n            len = 1 / Math.sqrt(len);\r\n            n1 = -dy * len * thickness;\r\n            n2 = dx * len * thickness;\r\n        }\r\n        var array = this.array;\r\n        // First point\r\n        array[i++] = x1;\r\n        array[i++] = y1;\r\n        array[i++] = n1;\r\n        array[i++] = n2;\r\n        array[i++] = color;\r\n        array[i++] = 0;\r\n        // First point flipped\r\n        array[i++] = x1;\r\n        array[i++] = y1;\r\n        array[i++] = -n1;\r\n        array[i++] = -n2;\r\n        array[i++] = color;\r\n        array[i++] = 0;\r\n        // Second point\r\n        array[i++] = x2;\r\n        array[i++] = y2;\r\n        array[i++] = n1;\r\n        array[i++] = n2;\r\n        array[i++] = color;\r\n        array[i++] = radius;\r\n        // Second point flipped\r\n        array[i++] = x2;\r\n        array[i++] = y2;\r\n        array[i++] = -n1;\r\n        array[i++] = -n2;\r\n        array[i++] = color;\r\n        array[i] = -radius;\r\n    };\r\n    return EdgeClampedProgram;\r\n}(edge_rectangle_1.default));\r\nexports.default = EdgeClampedProgram;\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Sigma.js WebGL Renderer Edge Arrow Program\r\n * ===========================================\r\n *\r\n * Compound program rendering edges as an arrow from the source to the target.\r\n * @module\r\n */\r\nvar edge_1 = require(\"./common/edge\");\r\nvar edge_arrowHead_1 = __importDefault(require(\"./edge.arrowHead\"));\r\nvar edge_clamped_1 = __importDefault(require(\"./edge.clamped\"));\r\nvar EdgeArrowProgram = (0, edge_1.createEdgeCompoundProgram)([edge_clamped_1.default, edge_arrowHead_1.default]);\r\nexports.default = EdgeArrowProgram;\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resolveSettings = exports.validateSettings = exports.DEFAULT_EDGE_PROGRAM_CLASSES = exports.DEFAULT_NODE_PROGRAM_CLASSES = exports.DEFAULT_SETTINGS = void 0;\r\nvar utils_1 = require(\"./utils\");\r\nvar label_1 = __importDefault(require(\"./rendering/canvas/label\"));\r\nvar hover_1 = __importDefault(require(\"./rendering/canvas/hover\"));\r\nvar edge_label_1 = __importDefault(require(\"./rendering/canvas/edge-label\"));\r\nvar node_point_1 = __importDefault(require(\"./rendering/webgl/programs/node.point\"));\r\nvar edge_rectangle_1 = __importDefault(require(\"./rendering/webgl/programs/edge.rectangle\"));\r\nvar edge_arrow_1 = __importDefault(require(\"./rendering/webgl/programs/edge.arrow\"));\r\nexports.DEFAULT_SETTINGS = {\r\n    // Performance\r\n    hideEdgesOnMove: false,\r\n    hideLabelsOnMove: false,\r\n    renderLabels: true,\r\n    renderEdgeLabels: false,\r\n    enableEdgeClickEvents: false,\r\n    enableEdgeWheelEvents: false,\r\n    enableEdgeHoverEvents: false,\r\n    // Component rendering\r\n    defaultNodeColor: \"#999\",\r\n    defaultNodeType: \"circle\",\r\n    defaultEdgeColor: \"#ccc\",\r\n    defaultEdgeType: \"line\",\r\n    labelFont: \"Arial\",\r\n    labelSize: 14,\r\n    labelWeight: \"normal\",\r\n    labelColor: { color: \"#000\" },\r\n    edgeLabelFont: \"Arial\",\r\n    edgeLabelSize: 14,\r\n    edgeLabelWeight: \"normal\",\r\n    edgeLabelColor: { attribute: \"color\" },\r\n    stagePadding: 30,\r\n    zoomToSizeRatioFunction: Math.sqrt,\r\n    itemSizesReference: \"screen\",\r\n    // Labels\r\n    labelDensity: 1,\r\n    labelGridCellSize: 100,\r\n    labelRenderedSizeThreshold: 6,\r\n    // Reducers\r\n    nodeReducer: null,\r\n    edgeReducer: null,\r\n    // Features\r\n    zIndex: false,\r\n    minCameraRatio: null,\r\n    maxCameraRatio: null,\r\n    // Renderers\r\n    labelRenderer: label_1.default,\r\n    hoverRenderer: hover_1.default,\r\n    edgeLabelRenderer: edge_label_1.default,\r\n    // Lifecycle\r\n    allowInvalidContainer: false,\r\n    // Program classes\r\n    nodeProgramClasses: {},\r\n    nodeHoverProgramClasses: {},\r\n    edgeProgramClasses: {},\r\n};\r\nexports.DEFAULT_NODE_PROGRAM_CLASSES = {\r\n    circle: node_point_1.default,\r\n};\r\nexports.DEFAULT_EDGE_PROGRAM_CLASSES = {\r\n    arrow: edge_arrow_1.default,\r\n    line: edge_rectangle_1.default,\r\n};\r\nfunction validateSettings(settings) {\r\n    if (typeof settings.labelDensity !== \"number\" || settings.labelDensity < 0) {\r\n        throw new Error(\"Settings: invalid `labelDensity`. Expecting a positive number.\");\r\n    }\r\n    var minCameraRatio = settings.minCameraRatio, maxCameraRatio = settings.maxCameraRatio;\r\n    if (typeof minCameraRatio === \"number\" && typeof maxCameraRatio === \"number\" && maxCameraRatio < minCameraRatio) {\r\n        throw new Error(\"Settings: invalid camera ratio boundaries. Expecting `maxCameraRatio` to be greater than `minCameraRatio`.\");\r\n    }\r\n}\r\nexports.validateSettings = validateSettings;\r\nfunction resolveSettings(settings) {\r\n    var resolvedSettings = (0, utils_1.assign)({}, exports.DEFAULT_SETTINGS, settings);\r\n    resolvedSettings.nodeProgramClasses = (0, utils_1.assign)({}, exports.DEFAULT_NODE_PROGRAM_CLASSES, resolvedSettings.nodeProgramClasses);\r\n    resolvedSettings.edgeProgramClasses = (0, utils_1.assign)({}, exports.DEFAULT_EDGE_PROGRAM_CLASSES, resolvedSettings.edgeProgramClasses);\r\n    return resolvedSettings;\r\n}\r\nexports.resolveSettings = resolveSettings;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar captor_1 = __importStar(require(\"./captor\"));\r\nvar DRAG_TIMEOUT = 200;\r\nvar TOUCH_INERTIA_RATIO = 3;\r\nvar TOUCH_INERTIA_DURATION = 200;\r\n/**\r\n * Touch captor class.\r\n *\r\n * @constructor\r\n */\r\nvar TouchCaptor = /** @class */ (function (_super) {\r\n    __extends(TouchCaptor, _super);\r\n    function TouchCaptor(container, renderer) {\r\n        var _this = _super.call(this, container, renderer) || this;\r\n        _this.enabled = true;\r\n        _this.isMoving = false;\r\n        _this.hasMoved = false;\r\n        _this.touchMode = 0; // number of touches down\r\n        _this.startTouchesPositions = [];\r\n        // Binding methods:\r\n        _this.handleStart = _this.handleStart.bind(_this);\r\n        _this.handleLeave = _this.handleLeave.bind(_this);\r\n        _this.handleMove = _this.handleMove.bind(_this);\r\n        // Binding events\r\n        container.addEventListener(\"touchstart\", _this.handleStart, false);\r\n        container.addEventListener(\"touchend\", _this.handleLeave, false);\r\n        container.addEventListener(\"touchcancel\", _this.handleLeave, false);\r\n        container.addEventListener(\"touchmove\", _this.handleMove, false);\r\n        return _this;\r\n    }\r\n    TouchCaptor.prototype.kill = function () {\r\n        var container = this.container;\r\n        container.removeEventListener(\"touchstart\", this.handleStart);\r\n        container.removeEventListener(\"touchend\", this.handleLeave);\r\n        container.removeEventListener(\"touchcancel\", this.handleLeave);\r\n        container.removeEventListener(\"touchmove\", this.handleMove);\r\n    };\r\n    TouchCaptor.prototype.getDimensions = function () {\r\n        return {\r\n            width: this.container.offsetWidth,\r\n            height: this.container.offsetHeight,\r\n        };\r\n    };\r\n    TouchCaptor.prototype.dispatchRelatedMouseEvent = function (type, e, touch, emitter) {\r\n        var mousePosition = touch || e.touches[0];\r\n        var mouseEvent = new MouseEvent(type, {\r\n            clientX: mousePosition.clientX,\r\n            clientY: mousePosition.clientY,\r\n            altKey: e.altKey,\r\n            ctrlKey: e.ctrlKey,\r\n        });\r\n        mouseEvent.isFakeSigmaMouseEvent = true;\r\n        (emitter || this.container).dispatchEvent(mouseEvent);\r\n    };\r\n    TouchCaptor.prototype.handleStart = function (e) {\r\n        var _this = this;\r\n        if (!this.enabled)\r\n            return;\r\n        // Prevent default to avoid default browser behaviors...\r\n        e.preventDefault();\r\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\r\n        if (e.touches.length === 1)\r\n            this.dispatchRelatedMouseEvent(\"mousedown\", e);\r\n        var touches = (0, captor_1.getTouchesArray)(e.touches);\r\n        this.touchMode = touches.length;\r\n        this.startCameraState = this.renderer.getCamera().getState();\r\n        this.startTouchesPositions = touches.map(function (touch) { return (0, captor_1.getPosition)(touch, _this.container); });\r\n        this.lastTouches = touches;\r\n        this.lastTouchesPositions = this.startTouchesPositions;\r\n        // When there are two touches down, let's record distance and angle as well:\r\n        if (this.touchMode === 2) {\r\n            var _a = __read(this.startTouchesPositions, 2), _b = _a[0], x0 = _b.x, y0 = _b.y, _c = _a[1], x1 = _c.x, y1 = _c.y;\r\n            this.startTouchesAngle = Math.atan2(y1 - y0, x1 - x0);\r\n            this.startTouchesDistance = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\r\n        }\r\n        this.emit(\"touchdown\", (0, captor_1.getTouchCoords)(e, this.container));\r\n    };\r\n    TouchCaptor.prototype.handleLeave = function (e) {\r\n        if (!this.enabled)\r\n            return;\r\n        // Prevent default to avoid default browser behaviors...\r\n        e.preventDefault();\r\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\r\n        if (e.touches.length === 0 && this.lastTouches && this.lastTouches.length) {\r\n            this.dispatchRelatedMouseEvent(\"mouseup\", e, this.lastTouches[0], document);\r\n            // ... and only click if no move was made\r\n            if (!this.hasMoved) {\r\n                this.dispatchRelatedMouseEvent(\"click\", e, this.lastTouches[0]);\r\n            }\r\n        }\r\n        if (this.movingTimeout) {\r\n            this.isMoving = false;\r\n            clearTimeout(this.movingTimeout);\r\n        }\r\n        switch (this.touchMode) {\r\n            case 2:\r\n                if (e.touches.length === 1) {\r\n                    this.handleStart(e);\r\n                    e.preventDefault();\r\n                    break;\r\n                }\r\n            /* falls through */\r\n            case 1:\r\n                // TODO\r\n                // Dispatch event\r\n                if (this.isMoving) {\r\n                    var camera = this.renderer.getCamera();\r\n                    var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };\r\n                    camera.animate({\r\n                        x: cameraState.x + TOUCH_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\r\n                        y: cameraState.y + TOUCH_INERTIA_RATIO * (cameraState.y - previousCameraState.y),\r\n                    }, {\r\n                        duration: TOUCH_INERTIA_DURATION,\r\n                        easing: \"quadraticOut\",\r\n                    });\r\n                }\r\n                this.hasMoved = false;\r\n                this.isMoving = false;\r\n                this.touchMode = 0;\r\n                break;\r\n        }\r\n        this.emit(\"touchup\", (0, captor_1.getTouchCoords)(e, this.container));\r\n    };\r\n    TouchCaptor.prototype.handleMove = function (e) {\r\n        var _a;\r\n        var _this = this;\r\n        if (!this.enabled)\r\n            return;\r\n        // Prevent default to avoid default browser behaviors...\r\n        e.preventDefault();\r\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\r\n        if (e.touches.length === 1)\r\n            this.dispatchRelatedMouseEvent(\"mousemove\", e);\r\n        var touches = (0, captor_1.getTouchesArray)(e.touches);\r\n        var touchesPositions = touches.map(function (touch) { return (0, captor_1.getPosition)(touch, _this.container); });\r\n        this.lastTouches = touches;\r\n        this.lastTouchesPositions = touchesPositions;\r\n        // If a move was initiated at some point and we get back to startpoint,\r\n        // we should still consider that we did move (which also happens after a\r\n        // multiple touch when only one touch remains in which case handleStart\r\n        // is recalled within handleLeave).\r\n        // Now, some mobile browsers report zero-distance moves so we also check that\r\n        // one of the touches did actually move from the origin position.\r\n        this.hasMoved || (this.hasMoved = touchesPositions.some(function (position, idx) {\r\n            var startPosition = _this.startTouchesPositions[idx];\r\n            return position.x !== startPosition.x || position.y !== startPosition.y;\r\n        }));\r\n        // If there was no move, do not trigger touch moves behavior\r\n        if (!this.hasMoved) {\r\n            return;\r\n        }\r\n        this.isMoving = true;\r\n        if (this.movingTimeout)\r\n            clearTimeout(this.movingTimeout);\r\n        this.movingTimeout = window.setTimeout(function () {\r\n            _this.isMoving = false;\r\n        }, DRAG_TIMEOUT);\r\n        var camera = this.renderer.getCamera();\r\n        var startCameraState = this.startCameraState;\r\n        switch (this.touchMode) {\r\n            case 1: {\r\n                var _b = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0]), xStart = _b.x, yStart = _b.y;\r\n                var _c = this.renderer.viewportToFramedGraph(touchesPositions[0]), x = _c.x, y = _c.y;\r\n                camera.setState({\r\n                    x: startCameraState.x + xStart - x,\r\n                    y: startCameraState.y + yStart - y,\r\n                });\r\n                break;\r\n            }\r\n            case 2: {\r\n                /**\r\n                 * Here is the thinking here:\r\n                 *\r\n                 * 1. We can find the new angle and ratio, by comparing the vector from \"touch one\" to \"touch two\" at the start\r\n                 *    of the d'n'd and now\r\n                 *\r\n                 * 2. We can use `Camera#viewportToGraph` inside formula to retrieve the new camera position, using the graph\r\n                 *    position of a touch at the beginning of the d'n'd (using `startCamera.viewportToGraph`) and the viewport\r\n                 *    position of this same touch now\r\n                 */\r\n                var newCameraState = {};\r\n                var _d = touchesPositions[0], x0 = _d.x, y0 = _d.y;\r\n                var _e = touchesPositions[1], x1 = _e.x, y1 = _e.y;\r\n                var angleDiff = Math.atan2(y1 - y0, x1 - x0) - this.startTouchesAngle;\r\n                var ratioDiff = Math.hypot(y1 - y0, x1 - x0) / this.startTouchesDistance;\r\n                // 1.\r\n                var newRatio = camera.getBoundedRatio(startCameraState.ratio / ratioDiff);\r\n                newCameraState.ratio = newRatio;\r\n                newCameraState.angle = startCameraState.angle + angleDiff;\r\n                // 2.\r\n                var dimensions = this.getDimensions();\r\n                var touchGraphPosition = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0], { cameraState: startCameraState });\r\n                var smallestDimension = Math.min(dimensions.width, dimensions.height);\r\n                var dx = smallestDimension / dimensions.width;\r\n                var dy = smallestDimension / dimensions.height;\r\n                var ratio = newRatio / smallestDimension;\r\n                // Align with center of the graph:\r\n                var x = x0 - smallestDimension / 2 / dx;\r\n                var y = y0 - smallestDimension / 2 / dy;\r\n                // Rotate:\r\n                _a = __read([\r\n                    x * Math.cos(-newCameraState.angle) - y * Math.sin(-newCameraState.angle),\r\n                    y * Math.cos(-newCameraState.angle) + x * Math.sin(-newCameraState.angle),\r\n                ], 2), x = _a[0], y = _a[1];\r\n                newCameraState.x = touchGraphPosition.x - x * ratio;\r\n                newCameraState.y = touchGraphPosition.y + y * ratio;\r\n                camera.setState(newCameraState);\r\n                break;\r\n            }\r\n        }\r\n        this.emit(\"touchmove\", (0, captor_1.getTouchCoords)(e, this.container));\r\n    };\r\n    return TouchCaptor;\r\n}(captor_1.default));\r\nexports.default = TouchCaptor;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.doEdgeCollideWithPoint = exports.isPixelColored = void 0;\r\n/**\r\n * This helper returns true is the pixel at (x,y) in the given WebGL context is\r\n * colored, and false else.\r\n */\r\nfunction isPixelColored(gl, x, y) {\r\n    var pixels = new Uint8Array(4);\r\n    gl.readPixels(x, gl.drawingBufferHeight - y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    return pixels[3] > 0;\r\n}\r\nexports.isPixelColored = isPixelColored;\r\n/**\r\n * This helper checks whether or not a point (x, y) collides with an\r\n * edge, connecting a source (xS, yS) to a target (xT, yT) with a thickness in\r\n * pixels.\r\n */\r\nfunction doEdgeCollideWithPoint(x, y, xS, yS, xT, yT, thickness) {\r\n    // Check first if point is out of the rectangle which opposite corners are the\r\n    // source and the target, rectangle we expand by `thickness` in every\r\n    // directions:\r\n    if (x < xS - thickness && x < xT - thickness)\r\n        return false;\r\n    if (y < yS - thickness && y < yT - thickness)\r\n        return false;\r\n    if (x > xS + thickness && x > xT + thickness)\r\n        return false;\r\n    if (y > yS + thickness && y > yT + thickness)\r\n        return false;\r\n    // Check actual collision now: Since we now the point is in this big rectangle\r\n    // we \"just\" need to check that the distance between the point and the line\r\n    // connecting the source and the target is less than `thickness`:\r\n    // https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\r\n    var distance = Math.abs((xT - xS) * (yS - y) - (xS - x) * (yT - yS)) / Math.sqrt(Math.pow(xT - xS, 2) + Math.pow(yT - yS, 2));\r\n    return distance < thickness / 2;\r\n}\r\nexports.doEdgeCollideWithPoint = doEdgeCollideWithPoint;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar extend_1 = __importDefault(require(\"@yomguithereal/helpers/extend\"));\r\nvar camera_1 = __importDefault(require(\"./core/camera\"));\r\nvar mouse_1 = __importDefault(require(\"./core/captors/mouse\"));\r\nvar quadtree_1 = __importDefault(require(\"./core/quadtree\"));\r\nvar types_1 = require(\"./types\");\r\nvar utils_1 = require(\"./utils\");\r\nvar labels_1 = require(\"./core/labels\");\r\nvar settings_1 = require(\"./settings\");\r\nvar touch_1 = __importDefault(require(\"./core/captors/touch\"));\r\nvar matrices_1 = require(\"./utils/matrices\");\r\nvar edge_collisions_1 = require(\"./utils/edge-collisions\");\r\n/**\r\n * Constants.\r\n */\r\nvar X_LABEL_MARGIN = 150;\r\nvar Y_LABEL_MARGIN = 50;\r\n/**\r\n * Important functions.\r\n */\r\nfunction applyNodeDefaults(settings, key, data) {\r\n    if (!data.hasOwnProperty(\"x\") || !data.hasOwnProperty(\"y\"))\r\n        throw new Error(\"Sigma: could not find a valid position (x, y) for node \\\"\".concat(key, \"\\\". All your nodes must have a number \\\"x\\\" and \\\"y\\\". Maybe your forgot to apply a layout or your \\\"nodeReducer\\\" is not returning the correct data?\"));\r\n    if (!data.color)\r\n        data.color = settings.defaultNodeColor;\r\n    if (!data.label && data.label !== \"\")\r\n        data.label = null;\r\n    if (data.label !== undefined && data.label !== null)\r\n        data.label = \"\" + data.label;\r\n    else\r\n        data.label = null;\r\n    if (!data.size)\r\n        data.size = 2;\r\n    if (!data.hasOwnProperty(\"hidden\"))\r\n        data.hidden = false;\r\n    if (!data.hasOwnProperty(\"highlighted\"))\r\n        data.highlighted = false;\r\n    if (!data.hasOwnProperty(\"forceLabel\"))\r\n        data.forceLabel = false;\r\n    if (!data.type || data.type === \"\")\r\n        data.type = settings.defaultNodeType;\r\n    if (!data.zIndex)\r\n        data.zIndex = 0;\r\n    return data;\r\n}\r\nfunction applyEdgeDefaults(settings, key, data) {\r\n    if (!data.color)\r\n        data.color = settings.defaultEdgeColor;\r\n    if (!data.label)\r\n        data.label = \"\";\r\n    if (!data.size)\r\n        data.size = 0.5;\r\n    if (!data.hasOwnProperty(\"hidden\"))\r\n        data.hidden = false;\r\n    if (!data.hasOwnProperty(\"forceLabel\"))\r\n        data.forceLabel = false;\r\n    if (!data.type || data.type === \"\")\r\n        data.type = settings.defaultEdgeType;\r\n    if (!data.zIndex)\r\n        data.zIndex = 0;\r\n    return data;\r\n}\r\n/**\r\n * Main class.\r\n *\r\n * @constructor\r\n * @param {Graph}       graph     - Graph to render.\r\n * @param {HTMLElement} container - DOM container in which to render.\r\n * @param {object}      settings  - Optional settings.\r\n */\r\nvar Sigma = /** @class */ (function (_super) {\r\n    __extends(Sigma, _super);\r\n    function Sigma(graph, container, settings) {\r\n        if (settings === void 0) { settings = {}; }\r\n        var _this = _super.call(this) || this;\r\n        _this.elements = {};\r\n        _this.canvasContexts = {};\r\n        _this.webGLContexts = {};\r\n        _this.activeListeners = {};\r\n        _this.quadtree = new quadtree_1.default();\r\n        _this.labelGrid = new labels_1.LabelGrid();\r\n        _this.nodeDataCache = {};\r\n        _this.edgeDataCache = {};\r\n        _this.nodesWithForcedLabels = [];\r\n        _this.edgesWithForcedLabels = [];\r\n        _this.nodeExtent = { x: [0, 1], y: [0, 1] };\r\n        _this.matrix = (0, matrices_1.identity)();\r\n        _this.invMatrix = (0, matrices_1.identity)();\r\n        _this.correctionRatio = 1;\r\n        _this.customBBox = null;\r\n        _this.normalizationFunction = (0, utils_1.createNormalizationFunction)({\r\n            x: [0, 1],\r\n            y: [0, 1],\r\n        });\r\n        // Cache:\r\n        _this.graphToViewportRatio = 1;\r\n        // Starting dimensions and pixel ratio\r\n        _this.width = 0;\r\n        _this.height = 0;\r\n        _this.pixelRatio = (0, utils_1.getPixelRatio)();\r\n        // State\r\n        _this.displayedNodeLabels = new Set();\r\n        _this.displayedEdgeLabels = new Set();\r\n        _this.highlightedNodes = new Set();\r\n        _this.hoveredNode = null;\r\n        _this.hoveredEdge = null;\r\n        _this.renderFrame = null;\r\n        _this.renderHighlightedNodesFrame = null;\r\n        _this.needToProcess = false;\r\n        _this.checkEdgesEventsFrame = null;\r\n        // Programs\r\n        _this.nodePrograms = {};\r\n        _this.nodeHoverPrograms = {};\r\n        _this.edgePrograms = {};\r\n        // Resolving settings\r\n        _this.settings = (0, settings_1.resolveSettings)(settings);\r\n        // Validating\r\n        (0, settings_1.validateSettings)(_this.settings);\r\n        (0, utils_1.validateGraph)(graph);\r\n        if (!(container instanceof HTMLElement))\r\n            throw new Error(\"Sigma: container should be an html element.\");\r\n        // Properties\r\n        _this.graph = graph;\r\n        _this.container = container;\r\n        // Initializing contexts\r\n        _this.createWebGLContext(\"edges\", { preserveDrawingBuffer: true });\r\n        _this.createCanvasContext(\"edgeLabels\");\r\n        _this.createWebGLContext(\"nodes\");\r\n        _this.createCanvasContext(\"labels\");\r\n        _this.createCanvasContext(\"hovers\");\r\n        _this.createWebGLContext(\"hoverNodes\");\r\n        _this.createCanvasContext(\"mouse\");\r\n        // Blending\r\n        for (var key in _this.webGLContexts) {\r\n            var gl = _this.webGLContexts[key];\r\n            gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n            gl.enable(gl.BLEND);\r\n        }\r\n        // Loading programs\r\n        for (var type in _this.settings.nodeProgramClasses) {\r\n            var NodeProgramClass = _this.settings.nodeProgramClasses[type];\r\n            _this.nodePrograms[type] = new NodeProgramClass(_this.webGLContexts.nodes, _this);\r\n            var NodeHoverProgram = NodeProgramClass;\r\n            if (type in _this.settings.nodeHoverProgramClasses) {\r\n                NodeHoverProgram = _this.settings.nodeHoverProgramClasses[type];\r\n            }\r\n            _this.nodeHoverPrograms[type] = new NodeHoverProgram(_this.webGLContexts.hoverNodes, _this);\r\n        }\r\n        for (var type in _this.settings.edgeProgramClasses) {\r\n            var EdgeProgramClass = _this.settings.edgeProgramClasses[type];\r\n            _this.edgePrograms[type] = new EdgeProgramClass(_this.webGLContexts.edges, _this);\r\n        }\r\n        // Initial resize\r\n        _this.resize();\r\n        // Initializing the camera\r\n        _this.camera = new camera_1.default();\r\n        // Binding camera events\r\n        _this.bindCameraHandlers();\r\n        // Initializing captors\r\n        _this.mouseCaptor = new mouse_1.default(_this.elements.mouse, _this);\r\n        _this.touchCaptor = new touch_1.default(_this.elements.mouse, _this);\r\n        // Binding event handlers\r\n        _this.bindEventHandlers();\r\n        // Binding graph handlers\r\n        _this.bindGraphHandlers();\r\n        // Trigger eventual settings-related things\r\n        _this.handleSettingsUpdate();\r\n        // Processing data for the first time & render\r\n        _this.refresh();\r\n        return _this;\r\n    }\r\n    /**---------------------------------------------------------------------------\r\n     * Internal methods.\r\n     **---------------------------------------------------------------------------\r\n     */\r\n    /**\r\n     * Internal function used to create a canvas element.\r\n     * @param  {string} id - Context's id.\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.createCanvas = function (id) {\r\n        var canvas = (0, utils_1.createElement)(\"canvas\", {\r\n            position: \"absolute\",\r\n        }, {\r\n            class: \"sigma-\".concat(id),\r\n        });\r\n        this.elements[id] = canvas;\r\n        this.container.appendChild(canvas);\r\n        return canvas;\r\n    };\r\n    /**\r\n     * Internal function used to create a canvas context and add the relevant\r\n     * DOM elements.\r\n     *\r\n     * @param  {string} id - Context's id.\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.createCanvasContext = function (id) {\r\n        var canvas = this.createCanvas(id);\r\n        var contextOptions = {\r\n            preserveDrawingBuffer: false,\r\n            antialias: false,\r\n        };\r\n        this.canvasContexts[id] = canvas.getContext(\"2d\", contextOptions);\r\n        return this;\r\n    };\r\n    /**\r\n     * Internal function used to create a canvas context and add the relevant\r\n     * DOM elements.\r\n     *\r\n     * @param  {string}  id      - Context's id.\r\n     * @param  {object?} options - #getContext params to override (optional)\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.createWebGLContext = function (id, options) {\r\n        var canvas = this.createCanvas(id);\r\n        var contextOptions = __assign({ preserveDrawingBuffer: false, antialias: false }, (options || {}));\r\n        var context;\r\n        // First we try webgl2 for an easy performance boost\r\n        context = canvas.getContext(\"webgl2\", contextOptions);\r\n        // Else we fall back to webgl\r\n        if (!context)\r\n            context = canvas.getContext(\"webgl\", contextOptions);\r\n        // Edge, I am looking right at you...\r\n        if (!context)\r\n            context = canvas.getContext(\"experimental-webgl\", contextOptions);\r\n        this.webGLContexts[id] = context;\r\n        return this;\r\n    };\r\n    /**\r\n     * Method binding camera handlers.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.bindCameraHandlers = function () {\r\n        var _this = this;\r\n        this.activeListeners.camera = function () {\r\n            _this.scheduleRender();\r\n        };\r\n        this.camera.on(\"updated\", this.activeListeners.camera);\r\n        return this;\r\n    };\r\n    /**\r\n     * Method unbinding camera handlers.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.unbindCameraHandlers = function () {\r\n        this.camera.removeListener(\"updated\", this.activeListeners.camera);\r\n        return this;\r\n    };\r\n    /**\r\n     * Method that checks whether or not a node collides with a given position.\r\n     */\r\n    Sigma.prototype.mouseIsOnNode = function (_a, _b, size) {\r\n        var x = _a.x, y = _a.y;\r\n        var nodeX = _b.x, nodeY = _b.y;\r\n        return (x > nodeX - size &&\r\n            x < nodeX + size &&\r\n            y > nodeY - size &&\r\n            y < nodeY + size &&\r\n            Math.sqrt(Math.pow(x - nodeX, 2) + Math.pow(y - nodeY, 2)) < size);\r\n    };\r\n    /**\r\n     * Method that returns all nodes in quad at a given position.\r\n     */\r\n    Sigma.prototype.getQuadNodes = function (position) {\r\n        var mouseGraphPosition = this.viewportToFramedGraph(position);\r\n        return this.quadtree.point(mouseGraphPosition.x, 1 - mouseGraphPosition.y);\r\n    };\r\n    /**\r\n     * Method that returns the closest node to a given position.\r\n     */\r\n    Sigma.prototype.getNodeAtPosition = function (position) {\r\n        var x = position.x, y = position.y;\r\n        var quadNodes = this.getQuadNodes(position);\r\n        // We will hover the node whose center is closest to mouse\r\n        var minDistance = Infinity, nodeAtPosition = null;\r\n        for (var i = 0, l = quadNodes.length; i < l; i++) {\r\n            var node = quadNodes[i];\r\n            var data = this.nodeDataCache[node];\r\n            var nodePosition = this.framedGraphToViewport(data);\r\n            var size = this.scaleSize(data.size);\r\n            if (!data.hidden && this.mouseIsOnNode(position, nodePosition, size)) {\r\n                var distance = Math.sqrt(Math.pow(x - nodePosition.x, 2) + Math.pow(y - nodePosition.y, 2));\r\n                // TODO: sort by min size also for cases where center is the same\r\n                if (distance < minDistance) {\r\n                    minDistance = distance;\r\n                    nodeAtPosition = node;\r\n                }\r\n            }\r\n        }\r\n        return nodeAtPosition;\r\n    };\r\n    /**\r\n     * Method binding event handlers.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.bindEventHandlers = function () {\r\n        var _this = this;\r\n        // Handling window resize\r\n        this.activeListeners.handleResize = function () {\r\n            _this.scheduleRender();\r\n        };\r\n        window.addEventListener(\"resize\", this.activeListeners.handleResize);\r\n        // Handling mouse move\r\n        this.activeListeners.handleMove = function (e) {\r\n            var baseEvent = {\r\n                event: e,\r\n                preventSigmaDefault: function () {\r\n                    e.preventSigmaDefault();\r\n                },\r\n            };\r\n            var nodeToHover = _this.getNodeAtPosition(e);\r\n            if (nodeToHover && _this.hoveredNode !== nodeToHover && !_this.nodeDataCache[nodeToHover].hidden) {\r\n                // Handling passing from one node to the other directly\r\n                if (_this.hoveredNode)\r\n                    _this.emit(\"leaveNode\", __assign(__assign({}, baseEvent), { node: _this.hoveredNode }));\r\n                _this.hoveredNode = nodeToHover;\r\n                _this.emit(\"enterNode\", __assign(__assign({}, baseEvent), { node: nodeToHover }));\r\n                _this.scheduleHighlightedNodesRender();\r\n                return;\r\n            }\r\n            // Checking if the hovered node is still hovered\r\n            if (_this.hoveredNode) {\r\n                var data = _this.nodeDataCache[_this.hoveredNode];\r\n                var pos = _this.framedGraphToViewport(data);\r\n                var size = _this.scaleSize(data.size);\r\n                if (!_this.mouseIsOnNode(e, pos, size)) {\r\n                    var node = _this.hoveredNode;\r\n                    _this.hoveredNode = null;\r\n                    _this.emit(\"leaveNode\", __assign(__assign({}, baseEvent), { node: node }));\r\n                    _this.scheduleHighlightedNodesRender();\r\n                    return;\r\n                }\r\n            }\r\n            if (_this.settings.enableEdgeHoverEvents === true) {\r\n                _this.checkEdgeHoverEvents(baseEvent);\r\n            }\r\n            else if (_this.settings.enableEdgeHoverEvents === \"debounce\") {\r\n                if (!_this.checkEdgesEventsFrame)\r\n                    _this.checkEdgesEventsFrame = (0, utils_1.requestFrame)(function () {\r\n                        _this.checkEdgeHoverEvents(baseEvent);\r\n                        _this.checkEdgesEventsFrame = null;\r\n                    });\r\n            }\r\n        };\r\n        // Handling click\r\n        var createMouseListener = function (eventType) {\r\n            return function (e) {\r\n                var baseEvent = {\r\n                    event: e,\r\n                    preventSigmaDefault: function () {\r\n                        e.preventSigmaDefault();\r\n                    },\r\n                };\r\n                var isFakeSigmaMouseEvent = e.original.isFakeSigmaMouseEvent;\r\n                var nodeAtPosition = isFakeSigmaMouseEvent ? _this.getNodeAtPosition(e) : _this.hoveredNode;\r\n                if (nodeAtPosition)\r\n                    return _this.emit(\"\".concat(eventType, \"Node\"), __assign(__assign({}, baseEvent), { node: nodeAtPosition }));\r\n                if (eventType === \"wheel\" ? _this.settings.enableEdgeWheelEvents : _this.settings.enableEdgeClickEvents) {\r\n                    var edge = _this.getEdgeAtPoint(e.x, e.y);\r\n                    if (edge)\r\n                        return _this.emit(\"\".concat(eventType, \"Edge\"), __assign(__assign({}, baseEvent), { edge: edge }));\r\n                }\r\n                return _this.emit(\"\".concat(eventType, \"Stage\"), baseEvent);\r\n            };\r\n        };\r\n        this.activeListeners.handleClick = createMouseListener(\"click\");\r\n        this.activeListeners.handleRightClick = createMouseListener(\"rightClick\");\r\n        this.activeListeners.handleDoubleClick = createMouseListener(\"doubleClick\");\r\n        this.activeListeners.handleWheel = createMouseListener(\"wheel\");\r\n        this.activeListeners.handleDown = createMouseListener(\"down\");\r\n        this.mouseCaptor.on(\"mousemove\", this.activeListeners.handleMove);\r\n        this.mouseCaptor.on(\"click\", this.activeListeners.handleClick);\r\n        this.mouseCaptor.on(\"rightClick\", this.activeListeners.handleRightClick);\r\n        this.mouseCaptor.on(\"doubleClick\", this.activeListeners.handleDoubleClick);\r\n        this.mouseCaptor.on(\"wheel\", this.activeListeners.handleWheel);\r\n        this.mouseCaptor.on(\"mousedown\", this.activeListeners.handleDown);\r\n        // TODO\r\n        // Deal with Touch captor events\r\n        return this;\r\n    };\r\n    /**\r\n     * Method binding graph handlers\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.bindGraphHandlers = function () {\r\n        var _this = this;\r\n        var graph = this.graph;\r\n        this.activeListeners.graphUpdate = function () {\r\n            _this.scheduleRefresh();\r\n        };\r\n        this.activeListeners.dropNodeGraphUpdate = function (e) {\r\n            delete _this.nodeDataCache[e.key];\r\n            if (_this.hoveredNode === e.key)\r\n                _this.hoveredNode = null;\r\n            _this.activeListeners.graphUpdate();\r\n        };\r\n        this.activeListeners.dropEdgeGraphUpdate = function (e) {\r\n            delete _this.edgeDataCache[e.key];\r\n            if (_this.hoveredEdge === e.key)\r\n                _this.hoveredEdge = null;\r\n            _this.activeListeners.graphUpdate();\r\n        };\r\n        this.activeListeners.clearEdgesGraphUpdate = function () {\r\n            _this.edgeDataCache = {};\r\n            _this.hoveredEdge = null;\r\n            _this.activeListeners.graphUpdate();\r\n        };\r\n        this.activeListeners.clearGraphUpdate = function () {\r\n            _this.nodeDataCache = {};\r\n            _this.hoveredNode = null;\r\n            _this.activeListeners.clearEdgesGraphUpdate();\r\n        };\r\n        graph.on(\"nodeAdded\", this.activeListeners.graphUpdate);\r\n        graph.on(\"nodeDropped\", this.activeListeners.dropNodeGraphUpdate);\r\n        graph.on(\"nodeAttributesUpdated\", this.activeListeners.graphUpdate);\r\n        graph.on(\"eachNodeAttributesUpdated\", this.activeListeners.graphUpdate);\r\n        graph.on(\"edgeAdded\", this.activeListeners.graphUpdate);\r\n        graph.on(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\r\n        graph.on(\"edgeAttributesUpdated\", this.activeListeners.graphUpdate);\r\n        graph.on(\"eachEdgeAttributesUpdated\", this.activeListeners.graphUpdate);\r\n        graph.on(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\r\n        graph.on(\"cleared\", this.activeListeners.clearGraphUpdate);\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to unbind handlers from the graph.\r\n     *\r\n     * @return {undefined}\r\n     */\r\n    Sigma.prototype.unbindGraphHandlers = function () {\r\n        var graph = this.graph;\r\n        graph.removeListener(\"nodeAdded\", this.activeListeners.graphUpdate);\r\n        graph.removeListener(\"nodeDropped\", this.activeListeners.dropNodeGraphUpdate);\r\n        graph.removeListener(\"nodeAttributesUpdated\", this.activeListeners.graphUpdate);\r\n        graph.removeListener(\"eachNodeAttributesUpdated\", this.activeListeners.graphUpdate);\r\n        graph.removeListener(\"edgeAdded\", this.activeListeners.graphUpdate);\r\n        graph.removeListener(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\r\n        graph.removeListener(\"edgeAttributesUpdated\", this.activeListeners.graphUpdate);\r\n        graph.removeListener(\"eachEdgeAttributesUpdated\", this.activeListeners.graphUpdate);\r\n        graph.removeListener(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\r\n        graph.removeListener(\"cleared\", this.activeListeners.clearGraphUpdate);\r\n    };\r\n    /**\r\n     * Method dealing with \"leaveEdge\" and \"enterEdge\" events.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.checkEdgeHoverEvents = function (payload) {\r\n        var edgeToHover = this.hoveredNode ? null : this.getEdgeAtPoint(payload.event.x, payload.event.y);\r\n        if (edgeToHover !== this.hoveredEdge) {\r\n            if (this.hoveredEdge)\r\n                this.emit(\"leaveEdge\", __assign(__assign({}, payload), { edge: this.hoveredEdge }));\r\n            if (edgeToHover)\r\n                this.emit(\"enterEdge\", __assign(__assign({}, payload), { edge: edgeToHover }));\r\n            this.hoveredEdge = edgeToHover;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Method looking for an edge colliding with a given point at (x, y). Returns\r\n     * the key of the edge if any, or null else.\r\n     */\r\n    Sigma.prototype.getEdgeAtPoint = function (x, y) {\r\n        var e_1, _a;\r\n        var _this = this;\r\n        var _b = this, edgeDataCache = _b.edgeDataCache, nodeDataCache = _b.nodeDataCache;\r\n        // Check first that pixel is colored:\r\n        // Note that mouse positions must be corrected by pixel ratio to correctly\r\n        // index the drawing buffer.\r\n        if (!(0, edge_collisions_1.isPixelColored)(this.webGLContexts.edges, x * this.pixelRatio, y * this.pixelRatio))\r\n            return null;\r\n        // Check for each edge if it collides with the point:\r\n        var _c = this.viewportToGraph({ x: x, y: y }), graphX = _c.x, graphY = _c.y;\r\n        // To translate edge thicknesses to the graph system, we observe by how much\r\n        // the length of a non-null edge is transformed to between the graph system\r\n        // and the viewport system:\r\n        var transformationRatio = 0;\r\n        this.graph.someEdge(function (key, _, sourceId, targetId, _a, _b) {\r\n            var xs = _a.x, ys = _a.y;\r\n            var xt = _b.x, yt = _b.y;\r\n            if (edgeDataCache[key].hidden || nodeDataCache[sourceId].hidden || nodeDataCache[targetId].hidden)\r\n                return false;\r\n            if (xs !== xt || ys !== yt) {\r\n                var graphLength = Math.sqrt(Math.pow(xt - xs, 2) + Math.pow(yt - ys, 2));\r\n                var _c = _this.graphToViewport({ x: xs, y: ys }), vp_xs = _c.x, vp_ys = _c.y;\r\n                var _d = _this.graphToViewport({ x: xt, y: yt }), vp_xt = _d.x, vp_yt = _d.y;\r\n                var viewportLength = Math.sqrt(Math.pow(vp_xt - vp_xs, 2) + Math.pow(vp_yt - vp_ys, 2));\r\n                transformationRatio = graphLength / viewportLength;\r\n                return true;\r\n            }\r\n        });\r\n        // If no non-null edge has been found, return null:\r\n        if (!transformationRatio)\r\n            return null;\r\n        // Now we can look for matching edges:\r\n        var edges = this.graph.filterEdges(function (key, edgeAttributes, sourceId, targetId, sourcePosition, targetPosition) {\r\n            if (edgeDataCache[key].hidden || nodeDataCache[sourceId].hidden || nodeDataCache[targetId].hidden)\r\n                return false;\r\n            if ((0, edge_collisions_1.doEdgeCollideWithPoint)(graphX, graphY, sourcePosition.x, sourcePosition.y, targetPosition.x, targetPosition.y, \r\n            // Adapt the edge size to the zoom ratio:\r\n            _this.scaleSize(edgeDataCache[key].size * transformationRatio))) {\r\n                return true;\r\n            }\r\n        });\r\n        if (edges.length === 0)\r\n            return null; // no edges found\r\n        // if none of the edges have a zIndex, selected the most recently created one to match the rendering order\r\n        var selectedEdge = edges[edges.length - 1];\r\n        // otherwise select edge with highest zIndex\r\n        var highestZIndex = -Infinity;\r\n        try {\r\n            for (var edges_1 = __values(edges), edges_1_1 = edges_1.next(); !edges_1_1.done; edges_1_1 = edges_1.next()) {\r\n                var edge = edges_1_1.value;\r\n                var zIndex = this.graph.getEdgeAttribute(edge, \"zIndex\");\r\n                if (zIndex >= highestZIndex) {\r\n                    selectedEdge = edge;\r\n                    highestZIndex = zIndex;\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (edges_1_1 && !edges_1_1.done && (_a = edges_1.return)) _a.call(edges_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return selectedEdge;\r\n    };\r\n    /**\r\n     * Method used to process the whole graph's data.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.process = function () {\r\n        var _this = this;\r\n        var graph = this.graph;\r\n        var settings = this.settings;\r\n        var dimensions = this.getDimensions();\r\n        var nodeZExtent = [Infinity, -Infinity];\r\n        var edgeZExtent = [Infinity, -Infinity];\r\n        // Clearing the quad\r\n        this.quadtree.clear();\r\n        // Resetting the label grid\r\n        // TODO: it's probably better to do this explicitly or on resizes for layout and anims\r\n        this.labelGrid.resizeAndClear(dimensions, settings.labelGridCellSize);\r\n        // Clear the highlightedNodes\r\n        this.highlightedNodes = new Set();\r\n        // Computing extents\r\n        this.nodeExtent = (0, utils_1.graphExtent)(graph);\r\n        // Resetting `forceLabel` indices\r\n        this.nodesWithForcedLabels = [];\r\n        this.edgesWithForcedLabels = [];\r\n        // NOTE: it is important to compute this matrix after computing the node's extent\r\n        // because #.getGraphDimensions relies on it\r\n        var nullCamera = new camera_1.default();\r\n        var nullCameraMatrix = (0, utils_1.matrixFromCamera)(nullCamera.getState(), this.getDimensions(), this.getGraphDimensions(), this.getSetting(\"stagePadding\") || 0);\r\n        // Rescaling function\r\n        this.normalizationFunction = (0, utils_1.createNormalizationFunction)(this.customBBox || this.nodeExtent);\r\n        var nodesPerPrograms = {};\r\n        var nodes = graph.nodes();\r\n        for (var i = 0, l = nodes.length; i < l; i++) {\r\n            var node = nodes[i];\r\n            // Node display data resolution:\r\n            //   1. First we get the node's attributes\r\n            //   2. We optionally reduce them using the function provided by the user\r\n            //      Note that this function must return a total object and won't be merged\r\n            //   3. We apply our defaults, while running some vital checks\r\n            //   4. We apply the normalization function\r\n            // We shallow copy node data to avoid dangerous behaviors from reducers\r\n            var attr = Object.assign({}, graph.getNodeAttributes(node));\r\n            if (settings.nodeReducer)\r\n                attr = settings.nodeReducer(node, attr);\r\n            var data = applyNodeDefaults(this.settings, node, attr);\r\n            nodesPerPrograms[data.type] = (nodesPerPrograms[data.type] || 0) + 1;\r\n            this.nodeDataCache[node] = data;\r\n            this.normalizationFunction.applyTo(data);\r\n            if (data.forceLabel)\r\n                this.nodesWithForcedLabels.push(node);\r\n            if (this.settings.zIndex) {\r\n                if (data.zIndex < nodeZExtent[0])\r\n                    nodeZExtent[0] = data.zIndex;\r\n                if (data.zIndex > nodeZExtent[1])\r\n                    nodeZExtent[1] = data.zIndex;\r\n            }\r\n        }\r\n        for (var type in this.nodePrograms) {\r\n            if (!this.nodePrograms.hasOwnProperty(type)) {\r\n                throw new Error(\"Sigma: could not find a suitable program for node type \\\"\".concat(type, \"\\\"!\"));\r\n            }\r\n            this.nodePrograms[type].reallocate(nodesPerPrograms[type] || 0);\r\n            // We reset that count here, so that we can reuse it while calling the Program#process methods:\r\n            nodesPerPrograms[type] = 0;\r\n        }\r\n        // Handling node z-index\r\n        // TODO: z-index needs us to compute display data before hand\r\n        if (this.settings.zIndex && nodeZExtent[0] !== nodeZExtent[1])\r\n            nodes = (0, utils_1.zIndexOrdering)(nodeZExtent, function (node) { return _this.nodeDataCache[node].zIndex; }, nodes);\r\n        var normalizationRatio = this.normalizationFunction.ratio;\r\n        for (var i = 0, l = nodes.length; i < l; i++) {\r\n            var node = nodes[i];\r\n            var data = this.nodeDataCache[node];\r\n            this.quadtree.add(node, data.x, 1 - data.y, this.scaleSize(data.size, 1) / normalizationRatio);\r\n            if (typeof data.label === \"string\" && !data.hidden)\r\n                this.labelGrid.add(node, data.size, this.framedGraphToViewport(data, { matrix: nullCameraMatrix }));\r\n            var nodeProgram = this.nodePrograms[data.type];\r\n            if (!nodeProgram)\r\n                throw new Error(\"Sigma: could not find a suitable program for node type \\\"\".concat(data.type, \"\\\"!\"));\r\n            nodeProgram.process(nodesPerPrograms[data.type]++, data);\r\n            // Save the node in the highlighted set if needed\r\n            if (data.highlighted && !data.hidden)\r\n                this.highlightedNodes.add(node);\r\n        }\r\n        this.labelGrid.organize();\r\n        var edgesPerPrograms = {};\r\n        var edges = graph.edges();\r\n        for (var i = 0, l = edges.length; i < l; i++) {\r\n            var edge = edges[i];\r\n            // Edge display data resolution:\r\n            //   1. First we get the edge's attributes\r\n            //   2. We optionally reduce them using the function provided by the user\r\n            //      Note that this function must return a total object and won't be merged\r\n            //   3. We apply our defaults, while running some vital checks\r\n            // We shallow copy edge data to avoid dangerous behaviors from reducers\r\n            var attr = Object.assign({}, graph.getEdgeAttributes(edge));\r\n            if (settings.edgeReducer)\r\n                attr = settings.edgeReducer(edge, attr);\r\n            var data = applyEdgeDefaults(this.settings, edge, attr);\r\n            edgesPerPrograms[data.type] = (edgesPerPrograms[data.type] || 0) + 1;\r\n            this.edgeDataCache[edge] = data;\r\n            if (data.forceLabel && !data.hidden)\r\n                this.edgesWithForcedLabels.push(edge);\r\n            if (this.settings.zIndex) {\r\n                if (data.zIndex < edgeZExtent[0])\r\n                    edgeZExtent[0] = data.zIndex;\r\n                if (data.zIndex > edgeZExtent[1])\r\n                    edgeZExtent[1] = data.zIndex;\r\n            }\r\n        }\r\n        for (var type in this.edgePrograms) {\r\n            if (!this.edgePrograms.hasOwnProperty(type)) {\r\n                throw new Error(\"Sigma: could not find a suitable program for edge type \\\"\".concat(type, \"\\\"!\"));\r\n            }\r\n            this.edgePrograms[type].reallocate(edgesPerPrograms[type] || 0);\r\n            // We reset that count here, so that we can reuse it while calling the Program#process methods:\r\n            edgesPerPrograms[type] = 0;\r\n        }\r\n        // Handling edge z-index\r\n        if (this.settings.zIndex && edgeZExtent[0] !== edgeZExtent[1])\r\n            edges = (0, utils_1.zIndexOrdering)(edgeZExtent, function (edge) { return _this.edgeDataCache[edge].zIndex; }, edges);\r\n        for (var i = 0, l = edges.length; i < l; i++) {\r\n            var edge = edges[i];\r\n            var data = this.edgeDataCache[edge];\r\n            var extremities = graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]];\r\n            this.edgePrograms[data.type].process(edgesPerPrograms[data.type]++, sourceData, targetData, data);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Method that backports potential settings updates where it's needed.\r\n     * @private\r\n     */\r\n    Sigma.prototype.handleSettingsUpdate = function () {\r\n        this.camera.minRatio = this.settings.minCameraRatio;\r\n        this.camera.maxRatio = this.settings.maxCameraRatio;\r\n        this.camera.setState(this.camera.validateState(this.camera.getState()));\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to render labels.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.renderLabels = function () {\r\n        if (!this.settings.renderLabels)\r\n            return this;\r\n        var cameraState = this.camera.getState();\r\n        // Selecting labels to draw\r\n        var labelsToDisplay = this.labelGrid.getLabelsToDisplay(cameraState.ratio, this.settings.labelDensity);\r\n        (0, extend_1.default)(labelsToDisplay, this.nodesWithForcedLabels);\r\n        this.displayedNodeLabels = new Set();\r\n        // Drawing labels\r\n        var context = this.canvasContexts.labels;\r\n        for (var i = 0, l = labelsToDisplay.length; i < l; i++) {\r\n            var node = labelsToDisplay[i];\r\n            var data = this.nodeDataCache[node];\r\n            // If the node was already drawn (like if it is eligible AND has\r\n            // `forceLabel`), we don't want to draw it again\r\n            // NOTE: we can do better probably\r\n            if (this.displayedNodeLabels.has(node))\r\n                continue;\r\n            // If the node is hidden, we don't need to display its label obviously\r\n            if (data.hidden)\r\n                continue;\r\n            var _a = this.framedGraphToViewport(data), x = _a.x, y = _a.y;\r\n            // NOTE: we can cache the labels we need to render until the camera's ratio changes\r\n            var size = this.scaleSize(data.size);\r\n            // Is node big enough?\r\n            if (!data.forceLabel && size < this.settings.labelRenderedSizeThreshold)\r\n                continue;\r\n            // Is node actually on screen (with some margin)\r\n            // NOTE: we used to rely on the quadtree for this, but the coordinates\r\n            // conversion make it unreliable and at that point we already converted\r\n            // to viewport coordinates and since the label grid already culls the\r\n            // number of potential labels to display this looks like a good\r\n            // performance compromise.\r\n            // NOTE: labelGrid.getLabelsToDisplay could probably optimize by not\r\n            // considering cells obviously outside of the range of the current\r\n            // view rectangle.\r\n            if (x < -X_LABEL_MARGIN ||\r\n                x > this.width + X_LABEL_MARGIN ||\r\n                y < -Y_LABEL_MARGIN ||\r\n                y > this.height + Y_LABEL_MARGIN)\r\n                continue;\r\n            // Because displayed edge labels depend directly on actually rendered node\r\n            // labels, we need to only add to this.displayedNodeLabels nodes whose label\r\n            // is rendered.\r\n            // This makes this.displayedNodeLabels depend on viewport, which might become\r\n            // an issue once we start memoizing getLabelsToDisplay.\r\n            this.displayedNodeLabels.add(node);\r\n            this.settings.labelRenderer(context, __assign(__assign({ key: node }, data), { size: size, x: x, y: y }), this.settings);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to render edge labels, based on which node labels were\r\n     * rendered.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.renderEdgeLabels = function () {\r\n        if (!this.settings.renderEdgeLabels)\r\n            return this;\r\n        var context = this.canvasContexts.edgeLabels;\r\n        // Clearing\r\n        context.clearRect(0, 0, this.width, this.height);\r\n        var edgeLabelsToDisplay = (0, labels_1.edgeLabelsToDisplayFromNodes)({\r\n            graph: this.graph,\r\n            hoveredNode: this.hoveredNode,\r\n            displayedNodeLabels: this.displayedNodeLabels,\r\n            highlightedNodes: this.highlightedNodes,\r\n        }).concat(this.edgesWithForcedLabels);\r\n        var displayedLabels = new Set();\r\n        for (var i = 0, l = edgeLabelsToDisplay.length; i < l; i++) {\r\n            var edge = edgeLabelsToDisplay[i], extremities = this.graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]], edgeData = this.edgeDataCache[edge];\r\n            // If the edge was already drawn (like if it is eligible AND has\r\n            // `forceLabel`), we don't want to draw it again\r\n            if (displayedLabels.has(edge))\r\n                continue;\r\n            // If the edge is hidden we don't need to display its label\r\n            // NOTE: the test on sourceData & targetData is probably paranoid at this point?\r\n            if (edgeData.hidden || sourceData.hidden || targetData.hidden) {\r\n                continue;\r\n            }\r\n            this.settings.edgeLabelRenderer(context, __assign(__assign({ key: edge }, edgeData), { size: this.scaleSize(edgeData.size) }), __assign(__assign(__assign({ key: extremities[0] }, sourceData), this.framedGraphToViewport(sourceData)), { size: this.scaleSize(sourceData.size) }), __assign(__assign(__assign({ key: extremities[1] }, targetData), this.framedGraphToViewport(targetData)), { size: this.scaleSize(targetData.size) }), this.settings);\r\n            displayedLabels.add(edge);\r\n        }\r\n        this.displayedEdgeLabels = displayedLabels;\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to render the highlighted nodes.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.renderHighlightedNodes = function () {\r\n        var _this = this;\r\n        var context = this.canvasContexts.hovers;\r\n        // Clearing\r\n        context.clearRect(0, 0, this.width, this.height);\r\n        // Rendering\r\n        var render = function (node) {\r\n            var data = _this.nodeDataCache[node];\r\n            var _a = _this.framedGraphToViewport(data), x = _a.x, y = _a.y;\r\n            var size = _this.scaleSize(data.size);\r\n            _this.settings.hoverRenderer(context, __assign(__assign({ key: node }, data), { size: size, x: x, y: y }), _this.settings);\r\n        };\r\n        var nodesToRender = [];\r\n        if (this.hoveredNode && !this.nodeDataCache[this.hoveredNode].hidden) {\r\n            nodesToRender.push(this.hoveredNode);\r\n        }\r\n        this.highlightedNodes.forEach(function (node) {\r\n            // The hovered node has already been highlighted\r\n            if (node !== _this.hoveredNode)\r\n                nodesToRender.push(node);\r\n        });\r\n        // Draw labels:\r\n        nodesToRender.forEach(function (node) { return render(node); });\r\n        // Draw WebGL nodes on top of the labels:\r\n        var nodesPerPrograms = {};\r\n        // 1. Count nodes per type:\r\n        nodesToRender.forEach(function (node) {\r\n            var type = _this.nodeDataCache[node].type;\r\n            nodesPerPrograms[type] = (nodesPerPrograms[type] || 0) + 1;\r\n        });\r\n        // 2. Allocate for each type for the proper number of nodes\r\n        for (var type in this.nodeHoverPrograms) {\r\n            this.nodeHoverPrograms[type].reallocate(nodesPerPrograms[type] || 0);\r\n            // Also reset count, to use when rendering:\r\n            nodesPerPrograms[type] = 0;\r\n        }\r\n        // 3. Process all nodes to render:\r\n        nodesToRender.forEach(function (node) {\r\n            var data = _this.nodeDataCache[node];\r\n            _this.nodeHoverPrograms[data.type].process(nodesPerPrograms[data.type]++, data);\r\n        });\r\n        // 4. Clear hovered nodes layer:\r\n        this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);\r\n        // 5. Render:\r\n        for (var type in this.nodeHoverPrograms) {\r\n            var program = this.nodeHoverPrograms[type];\r\n            program.render({\r\n                matrix: this.matrix,\r\n                width: this.width,\r\n                height: this.height,\r\n                pixelRatio: this.pixelRatio,\r\n                zoomRatio: this.camera.ratio,\r\n                sizeRatio: 1 / this.scaleSize(),\r\n                correctionRatio: this.correctionRatio,\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Method used to schedule a hover render.\r\n     *\r\n     */\r\n    Sigma.prototype.scheduleHighlightedNodesRender = function () {\r\n        var _this = this;\r\n        if (this.renderHighlightedNodesFrame || this.renderFrame)\r\n            return;\r\n        this.renderHighlightedNodesFrame = (0, utils_1.requestFrame)(function () {\r\n            // Resetting state\r\n            _this.renderHighlightedNodesFrame = null;\r\n            // Rendering\r\n            _this.renderHighlightedNodes();\r\n            _this.renderEdgeLabels();\r\n        });\r\n    };\r\n    /**\r\n     * Method used to render.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.render = function () {\r\n        var _this = this;\r\n        this.emit(\"beforeRender\");\r\n        var exitRender = function () {\r\n            _this.emit(\"afterRender\");\r\n            return _this;\r\n        };\r\n        // If a render was scheduled, we cancel it\r\n        if (this.renderFrame) {\r\n            (0, utils_1.cancelFrame)(this.renderFrame);\r\n            this.renderFrame = null;\r\n        }\r\n        // First we need to resize\r\n        this.resize();\r\n        // Do we need to reprocess data?\r\n        if (this.needToProcess)\r\n            this.process();\r\n        this.needToProcess = false;\r\n        // Clearing the canvases\r\n        this.clear();\r\n        // If we have no nodes we can stop right there\r\n        if (!this.graph.order)\r\n            return exitRender();\r\n        // TODO: improve this heuristic or move to the captor itself?\r\n        // TODO: deal with the touch captor here as well\r\n        var mouseCaptor = this.mouseCaptor;\r\n        var moving = this.camera.isAnimated() ||\r\n            mouseCaptor.isMoving ||\r\n            mouseCaptor.draggedEvents ||\r\n            mouseCaptor.currentWheelDirection;\r\n        // Then we need to extract a matrix from the camera\r\n        var cameraState = this.camera.getState();\r\n        var viewportDimensions = this.getDimensions();\r\n        var graphDimensions = this.getGraphDimensions();\r\n        var padding = this.getSetting(\"stagePadding\") || 0;\r\n        this.matrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding);\r\n        this.invMatrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding, true);\r\n        this.correctionRatio = (0, utils_1.getMatrixImpact)(this.matrix, cameraState, viewportDimensions);\r\n        this.graphToViewportRatio = this.getGraphToViewportRatio();\r\n        // [jacomyal]\r\n        // This comment is related to the one above the `getMatrixImpact` definition:\r\n        // - `this.correctionRatio` is somehow not completely explained\r\n        // - `this.graphToViewportRatio` is the ratio of a distance in the viewport divided by the same distance in the\r\n        //   graph\r\n        // - `this.normalizationFunction.ratio` is basically `Math.max(graphDX, graphDY)`\r\n        // And now, I observe that if I multiply these three ratios, I have something constant, which value remains 2, even\r\n        // when I change the graph, the viewport or the camera. It might be useful later so I prefer to let this comment:\r\n        // console.log(this.graphToViewportRatio * this.correctionRatio * this.normalizationFunction.ratio * 2);\r\n        var params = {\r\n            matrix: this.matrix,\r\n            width: this.width,\r\n            height: this.height,\r\n            pixelRatio: this.pixelRatio,\r\n            zoomRatio: this.camera.ratio,\r\n            sizeRatio: 1 / this.scaleSize(),\r\n            correctionRatio: this.correctionRatio,\r\n        };\r\n        // Drawing nodes\r\n        for (var type in this.nodePrograms) {\r\n            var program = this.nodePrograms[type];\r\n            program.render(params);\r\n        }\r\n        // Drawing edges\r\n        if (!this.settings.hideEdgesOnMove || !moving) {\r\n            for (var type in this.edgePrograms) {\r\n                var program = this.edgePrograms[type];\r\n                program.render(params);\r\n            }\r\n        }\r\n        // Do not display labels on move per setting\r\n        if (this.settings.hideLabelsOnMove && moving)\r\n            return exitRender();\r\n        this.renderLabels();\r\n        this.renderEdgeLabels();\r\n        this.renderHighlightedNodes();\r\n        return exitRender();\r\n    };\r\n    /**---------------------------------------------------------------------------\r\n     * Public API.\r\n     **---------------------------------------------------------------------------\r\n     */\r\n    /**\r\n     * Method returning the renderer's camera.\r\n     *\r\n     * @return {Camera}\r\n     */\r\n    Sigma.prototype.getCamera = function () {\r\n        return this.camera;\r\n    };\r\n    /**\r\n     * Method setting the renderer's camera.\r\n     *\r\n     * @param  {Camera} camera - New camera.\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.setCamera = function (camera) {\r\n        this.unbindCameraHandlers();\r\n        this.camera = camera;\r\n        this.bindCameraHandlers();\r\n    };\r\n    /**\r\n     * Method returning the container DOM element.\r\n     *\r\n     * @return {HTMLElement}\r\n     */\r\n    Sigma.prototype.getContainer = function () {\r\n        return this.container;\r\n    };\r\n    /**\r\n     * Method returning the renderer's graph.\r\n     *\r\n     * @return {Graph}\r\n     */\r\n    Sigma.prototype.getGraph = function () {\r\n        return this.graph;\r\n    };\r\n    /**\r\n     * Method used to set the renderer's graph.\r\n     *\r\n     * @return {Graph}\r\n     */\r\n    Sigma.prototype.setGraph = function (graph) {\r\n        if (graph === this.graph)\r\n            return;\r\n        // Unbinding handlers on the current graph\r\n        this.unbindGraphHandlers();\r\n        // Clearing the graph data caches\r\n        this.nodeDataCache = {};\r\n        this.edgeDataCache = {};\r\n        // Cleaning renderer state tied to the current graph\r\n        this.displayedNodeLabels.clear();\r\n        this.displayedEdgeLabels.clear();\r\n        this.highlightedNodes.clear();\r\n        this.hoveredNode = null;\r\n        this.hoveredEdge = null;\r\n        this.nodesWithForcedLabels.length = 0;\r\n        this.edgesWithForcedLabels.length = 0;\r\n        if (this.checkEdgesEventsFrame !== null) {\r\n            (0, utils_1.cancelFrame)(this.checkEdgesEventsFrame);\r\n            this.checkEdgesEventsFrame = null;\r\n        }\r\n        // Installing new graph\r\n        this.graph = graph;\r\n        // Binding new handlers\r\n        this.bindGraphHandlers();\r\n        // Re-rendering now to avoid discrepancies from now to next frame\r\n        this.refresh();\r\n    };\r\n    /**\r\n     * Method returning the mouse captor.\r\n     *\r\n     * @return {MouseCaptor}\r\n     */\r\n    Sigma.prototype.getMouseCaptor = function () {\r\n        return this.mouseCaptor;\r\n    };\r\n    /**\r\n     * Method returning the touch captor.\r\n     *\r\n     * @return {TouchCaptor}\r\n     */\r\n    Sigma.prototype.getTouchCaptor = function () {\r\n        return this.touchCaptor;\r\n    };\r\n    /**\r\n     * Method returning the current renderer's dimensions.\r\n     *\r\n     * @return {Dimensions}\r\n     */\r\n    Sigma.prototype.getDimensions = function () {\r\n        return { width: this.width, height: this.height };\r\n    };\r\n    /**\r\n     * Method returning the current graph's dimensions.\r\n     *\r\n     * @return {Dimensions}\r\n     */\r\n    Sigma.prototype.getGraphDimensions = function () {\r\n        var extent = this.customBBox || this.nodeExtent;\r\n        return {\r\n            width: extent.x[1] - extent.x[0] || 1,\r\n            height: extent.y[1] - extent.y[0] || 1,\r\n        };\r\n    };\r\n    /**\r\n     * Method used to get all the sigma node attributes.\r\n     * It's usefull for example to get the position of a node\r\n     * and to get values that are set by the nodeReducer\r\n     *\r\n     * @param  {string} key - The node's key.\r\n     * @return {NodeDisplayData | undefined} A copy of the desired node's attribute or undefined if not found\r\n     */\r\n    Sigma.prototype.getNodeDisplayData = function (key) {\r\n        var node = this.nodeDataCache[key];\r\n        return node ? Object.assign({}, node) : undefined;\r\n    };\r\n    /**\r\n     * Method used to get all the sigma edge attributes.\r\n     * It's usefull for example to get values that are set by the edgeReducer.\r\n     *\r\n     * @param  {string} key - The edge's key.\r\n     * @return {EdgeDisplayData | undefined} A copy of the desired edge's attribute or undefined if not found\r\n     */\r\n    Sigma.prototype.getEdgeDisplayData = function (key) {\r\n        var edge = this.edgeDataCache[key];\r\n        return edge ? Object.assign({}, edge) : undefined;\r\n    };\r\n    /**\r\n     * Method used to get the set of currently displayed node labels.\r\n     *\r\n     * @return {Set<string>} A set of node keys whose label is displayed.\r\n     */\r\n    Sigma.prototype.getNodeDisplayedLabels = function () {\r\n        return new Set(this.displayedNodeLabels);\r\n    };\r\n    /**\r\n     * Method used to get the set of currently displayed edge labels.\r\n     *\r\n     * @return {Set<string>} A set of edge keys whose label is displayed.\r\n     */\r\n    Sigma.prototype.getEdgeDisplayedLabels = function () {\r\n        return new Set(this.displayedEdgeLabels);\r\n    };\r\n    /**\r\n     * Method returning a copy of the settings collection.\r\n     *\r\n     * @return {Settings} A copy of the settings collection.\r\n     */\r\n    Sigma.prototype.getSettings = function () {\r\n        return __assign({}, this.settings);\r\n    };\r\n    /**\r\n     * Method returning the current value for a given setting key.\r\n     *\r\n     * @param  {string} key - The setting key to get.\r\n     * @return {any} The value attached to this setting key or undefined if not found\r\n     */\r\n    Sigma.prototype.getSetting = function (key) {\r\n        return this.settings[key];\r\n    };\r\n    /**\r\n     * Method setting the value of a given setting key. Note that this will schedule\r\n     * a new render next frame.\r\n     *\r\n     * @param  {string} key - The setting key to set.\r\n     * @param  {any}    value - The value to set.\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.setSetting = function (key, value) {\r\n        this.settings[key] = value;\r\n        (0, settings_1.validateSettings)(this.settings);\r\n        this.handleSettingsUpdate();\r\n        this.scheduleRefresh();\r\n        return this;\r\n    };\r\n    /**\r\n     * Method updating the value of a given setting key using the provided function.\r\n     * Note that this will schedule a new render next frame.\r\n     *\r\n     * @param  {string}   key     - The setting key to set.\r\n     * @param  {function} updater - The update function.\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.updateSetting = function (key, updater) {\r\n        this.settings[key] = updater(this.settings[key]);\r\n        (0, settings_1.validateSettings)(this.settings);\r\n        this.handleSettingsUpdate();\r\n        this.scheduleRefresh();\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to resize the renderer.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.resize = function () {\r\n        var previousWidth = this.width, previousHeight = this.height;\r\n        this.width = this.container.offsetWidth;\r\n        this.height = this.container.offsetHeight;\r\n        this.pixelRatio = (0, utils_1.getPixelRatio)();\r\n        if (this.width === 0) {\r\n            if (this.settings.allowInvalidContainer)\r\n                this.width = 1;\r\n            else\r\n                throw new Error(\"Sigma: Container has no width. You can set the allowInvalidContainer setting to true to stop seeing this error.\");\r\n        }\r\n        if (this.height === 0) {\r\n            if (this.settings.allowInvalidContainer)\r\n                this.height = 1;\r\n            else\r\n                throw new Error(\"Sigma: Container has no height. You can set the allowInvalidContainer setting to true to stop seeing this error.\");\r\n        }\r\n        // If nothing has changed, we can stop right here\r\n        if (previousWidth === this.width && previousHeight === this.height)\r\n            return this;\r\n        this.emit(\"resize\");\r\n        // Sizing dom elements\r\n        for (var id in this.elements) {\r\n            var element = this.elements[id];\r\n            element.style.width = this.width + \"px\";\r\n            element.style.height = this.height + \"px\";\r\n        }\r\n        // Sizing canvas contexts\r\n        for (var id in this.canvasContexts) {\r\n            this.elements[id].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\r\n            this.elements[id].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\r\n            if (this.pixelRatio !== 1)\r\n                this.canvasContexts[id].scale(this.pixelRatio, this.pixelRatio);\r\n        }\r\n        // Sizing WebGL contexts\r\n        for (var id in this.webGLContexts) {\r\n            this.elements[id].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\r\n            this.elements[id].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\r\n            this.webGLContexts[id].viewport(0, 0, this.width * this.pixelRatio, this.height * this.pixelRatio);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to clear all the canvases.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.clear = function () {\r\n        this.webGLContexts.nodes.clear(this.webGLContexts.nodes.COLOR_BUFFER_BIT);\r\n        this.webGLContexts.edges.clear(this.webGLContexts.edges.COLOR_BUFFER_BIT);\r\n        this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);\r\n        this.canvasContexts.labels.clearRect(0, 0, this.width, this.height);\r\n        this.canvasContexts.hovers.clearRect(0, 0, this.width, this.height);\r\n        this.canvasContexts.edgeLabels.clearRect(0, 0, this.width, this.height);\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to refresh, i.e. force the renderer to fully reprocess graph\r\n     * data and render.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.refresh = function () {\r\n        this.needToProcess = true;\r\n        this.render();\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to schedule a render at the next available frame.\r\n     * This method can be safely called on a same frame because it basically\r\n     * debounce refresh to the next frame.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.scheduleRender = function () {\r\n        var _this = this;\r\n        if (!this.renderFrame) {\r\n            this.renderFrame = (0, utils_1.requestFrame)(function () {\r\n                _this.render();\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to schedule a refresh (i.e. fully reprocess graph data and render)\r\n     * at the next available frame.\r\n     * This method can be safely called on a same frame because it basically\r\n     * debounce refresh to the next frame.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.scheduleRefresh = function () {\r\n        this.needToProcess = true;\r\n        this.scheduleRender();\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to (un)zoom, while preserving the position of a viewport point.\r\n     * Used for instance to zoom \"on the mouse cursor\".\r\n     *\r\n     * @param viewportTarget\r\n     * @param newRatio\r\n     * @return {CameraState}\r\n     */\r\n    Sigma.prototype.getViewportZoomedState = function (viewportTarget, newRatio) {\r\n        var _a = this.camera.getState(), ratio = _a.ratio, angle = _a.angle, x = _a.x, y = _a.y;\r\n        // TODO: handle max zoom\r\n        var ratioDiff = newRatio / ratio;\r\n        var center = {\r\n            x: this.width / 2,\r\n            y: this.height / 2,\r\n        };\r\n        var graphMousePosition = this.viewportToFramedGraph(viewportTarget);\r\n        var graphCenterPosition = this.viewportToFramedGraph(center);\r\n        return {\r\n            angle: angle,\r\n            x: (graphMousePosition.x - graphCenterPosition.x) * (1 - ratioDiff) + x,\r\n            y: (graphMousePosition.y - graphCenterPosition.y) * (1 - ratioDiff) + y,\r\n            ratio: newRatio,\r\n        };\r\n    };\r\n    /**\r\n     * Method returning the abstract rectangle containing the graph according\r\n     * to the camera's state.\r\n     *\r\n     * @return {object} - The view's rectangle.\r\n     */\r\n    Sigma.prototype.viewRectangle = function () {\r\n        // TODO: reduce relative margin?\r\n        var marginX = (0 * this.width) / 8, marginY = (0 * this.height) / 8;\r\n        var p1 = this.viewportToFramedGraph({ x: 0 - marginX, y: 0 - marginY }), p2 = this.viewportToFramedGraph({ x: this.width + marginX, y: 0 - marginY }), h = this.viewportToFramedGraph({ x: 0, y: this.height + marginY });\r\n        return {\r\n            x1: p1.x,\r\n            y1: p1.y,\r\n            x2: p2.x,\r\n            y2: p2.y,\r\n            height: p2.y - h.y,\r\n        };\r\n    };\r\n    /**\r\n     * Method returning the coordinates of a point from the framed graph system to the viewport system. It allows\r\n     * overriding anything that is used to get the translation matrix, or even the matrix itself.\r\n     *\r\n     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\r\n     * of computations.\r\n     */\r\n    Sigma.prototype.framedGraphToViewport = function (coordinates, override) {\r\n        if (override === void 0) { override = {}; }\r\n        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !!override.graphDimensions;\r\n        var matrix = override.matrix\r\n            ? override.matrix\r\n            : recomputeMatrix\r\n                ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting(\"stagePadding\") || 0)\r\n                : this.matrix;\r\n        var viewportPos = (0, matrices_1.multiplyVec2)(matrix, coordinates);\r\n        return {\r\n            x: ((1 + viewportPos.x) * this.width) / 2,\r\n            y: ((1 - viewportPos.y) * this.height) / 2,\r\n        };\r\n    };\r\n    /**\r\n     * Method returning the coordinates of a point from the viewport system to the framed graph system. It allows\r\n     * overriding anything that is used to get the translation matrix, or even the matrix itself.\r\n     *\r\n     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\r\n     * of computations.\r\n     */\r\n    Sigma.prototype.viewportToFramedGraph = function (coordinates, override) {\r\n        if (override === void 0) { override = {}; }\r\n        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !override.graphDimensions;\r\n        var invMatrix = override.matrix\r\n            ? override.matrix\r\n            : recomputeMatrix\r\n                ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting(\"stagePadding\") || 0, true)\r\n                : this.invMatrix;\r\n        var res = (0, matrices_1.multiplyVec2)(invMatrix, {\r\n            x: (coordinates.x / this.width) * 2 - 1,\r\n            y: 1 - (coordinates.y / this.height) * 2,\r\n        });\r\n        if (isNaN(res.x))\r\n            res.x = 0;\r\n        if (isNaN(res.y))\r\n            res.y = 0;\r\n        return res;\r\n    };\r\n    /**\r\n     * Method used to translate a point's coordinates from the viewport system (pixel distance from the top-left of the\r\n     * stage) to the graph system (the reference system of data as they are in the given graph instance).\r\n     *\r\n     * This method accepts an optional camera which can be useful if you need to translate coordinates\r\n     * based on a different view than the one being currently being displayed on screen.\r\n     *\r\n     * @param {Coordinates}                  viewportPoint\r\n     * @param {CoordinateConversionOverride} override\r\n     */\r\n    Sigma.prototype.viewportToGraph = function (viewportPoint, override) {\r\n        if (override === void 0) { override = {}; }\r\n        return this.normalizationFunction.inverse(this.viewportToFramedGraph(viewportPoint, override));\r\n    };\r\n    /**\r\n     * Method used to translate a point's coordinates from the graph system (the reference system of data as they are in\r\n     * the given graph instance) to the viewport system (pixel distance from the top-left of the stage).\r\n     *\r\n     * This method accepts an optional camera which can be useful if you need to translate coordinates\r\n     * based on a different view than the one being currently being displayed on screen.\r\n     *\r\n     * @param {Coordinates}                  graphPoint\r\n     * @param {CoordinateConversionOverride} override\r\n     */\r\n    Sigma.prototype.graphToViewport = function (graphPoint, override) {\r\n        if (override === void 0) { override = {}; }\r\n        return this.framedGraphToViewport(this.normalizationFunction(graphPoint), override);\r\n    };\r\n    /**\r\n     * Method returning the distance multiplier between the graph system and the\r\n     * viewport system.\r\n     */\r\n    Sigma.prototype.getGraphToViewportRatio = function () {\r\n        var graphP1 = { x: 0, y: 0 };\r\n        var graphP2 = { x: 1, y: 1 };\r\n        var graphD = Math.sqrt(Math.pow(graphP1.x - graphP2.x, 2) + Math.pow(graphP1.y - graphP2.y, 2));\r\n        var viewportP1 = this.graphToViewport(graphP1);\r\n        var viewportP2 = this.graphToViewport(graphP2);\r\n        var viewportD = Math.sqrt(Math.pow(viewportP1.x - viewportP2.x, 2) + Math.pow(viewportP1.y - viewportP2.y, 2));\r\n        return viewportD / graphD;\r\n    };\r\n    /**\r\n     * Method returning the graph's bounding box.\r\n     *\r\n     * @return {{ x: Extent, y: Extent }}\r\n     */\r\n    Sigma.prototype.getBBox = function () {\r\n        return (0, utils_1.graphExtent)(this.graph);\r\n    };\r\n    /**\r\n     * Method returning the graph's custom bounding box, if any.\r\n     *\r\n     * @return {{ x: Extent, y: Extent } | null}\r\n     */\r\n    Sigma.prototype.getCustomBBox = function () {\r\n        return this.customBBox;\r\n    };\r\n    /**\r\n     * Method used to override the graph's bounding box with a custom one. Give `null` as the argument to stop overriding.\r\n     *\r\n     * @return {Sigma}\r\n     */\r\n    Sigma.prototype.setCustomBBox = function (customBBox) {\r\n        this.customBBox = customBBox;\r\n        this.scheduleRender();\r\n        return this;\r\n    };\r\n    /**\r\n     * Method used to shut the container & release event listeners.\r\n     *\r\n     * @return {undefined}\r\n     */\r\n    Sigma.prototype.kill = function () {\r\n        // Emitting \"kill\" events so that plugins and such can cleanup\r\n        this.emit(\"kill\");\r\n        // Releasing events\r\n        this.removeAllListeners();\r\n        // Releasing camera handlers\r\n        this.unbindCameraHandlers();\r\n        // Releasing DOM events & captors\r\n        window.removeEventListener(\"resize\", this.activeListeners.handleResize);\r\n        this.mouseCaptor.kill();\r\n        this.touchCaptor.kill();\r\n        // Releasing graph handlers\r\n        this.unbindGraphHandlers();\r\n        // Releasing cache & state\r\n        this.quadtree = new quadtree_1.default();\r\n        this.nodeDataCache = {};\r\n        this.edgeDataCache = {};\r\n        this.nodesWithForcedLabels = [];\r\n        this.edgesWithForcedLabels = [];\r\n        this.highlightedNodes.clear();\r\n        // Clearing frames\r\n        if (this.renderFrame) {\r\n            (0, utils_1.cancelFrame)(this.renderFrame);\r\n            this.renderFrame = null;\r\n        }\r\n        if (this.renderHighlightedNodesFrame) {\r\n            (0, utils_1.cancelFrame)(this.renderHighlightedNodesFrame);\r\n            this.renderHighlightedNodesFrame = null;\r\n        }\r\n        // Destroying canvases\r\n        var container = this.container;\r\n        while (container.firstChild)\r\n            container.removeChild(container.firstChild);\r\n    };\r\n    /**\r\n     * Method used to scale the given size according to the camera's ratio, i.e.\r\n     * zooming state.\r\n     *\r\n     * @param  {number?} size -        The size to scale (node size, edge thickness etc.).\r\n     * @param  {number?} cameraRatio - A camera ratio (defaults to the actual camera ratio).\r\n     * @return {number}              - The scaled size.\r\n     */\r\n    Sigma.prototype.scaleSize = function (size, cameraRatio) {\r\n        if (size === void 0) { size = 1; }\r\n        if (cameraRatio === void 0) { cameraRatio = this.camera.ratio; }\r\n        return ((size / this.settings.zoomToSizeRatioFunction(cameraRatio)) *\r\n            (this.getSetting(\"itemSizesReference\") === \"positions\" ? cameraRatio * this.graphToViewportRatio : 1));\r\n    };\r\n    /**\r\n     * Method that returns the collection of all used canvases.\r\n     * At the moment, the instantiated canvases are the following, and in the\r\n     * following order in the DOM:\r\n     * - `edges`\r\n     * - `nodes`\r\n     * - `edgeLabels`\r\n     * - `labels`\r\n     * - `hovers`\r\n     * - `hoverNodes`\r\n     * - `mouse`\r\n     *\r\n     * @return {PlainObject<HTMLCanvasElement>} - The collection of canvases.\r\n     */\r\n    Sigma.prototype.getCanvases = function () {\r\n        return __assign({}, this.elements);\r\n    };\r\n    return Sigma;\r\n}(types_1.TypedEventEmitter));\r\nexports.default = Sigma;\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Sigma = exports.MouseCaptor = exports.QuadTree = exports.Camera = void 0;\r\n/**\r\n * Sigma.js Library Endpoint\r\n * =========================\r\n *\r\n * The library endpoint.\r\n * @module\r\n */\r\nvar sigma_1 = __importDefault(require(\"./sigma\"));\r\nexports.Sigma = sigma_1.default;\r\nvar camera_1 = __importDefault(require(\"./core/camera\"));\r\nexports.Camera = camera_1.default;\r\nvar quadtree_1 = __importDefault(require(\"./core/quadtree\"));\r\nexports.QuadTree = quadtree_1.default;\r\nvar mouse_1 = __importDefault(require(\"./core/captors/mouse\"));\r\nexports.MouseCaptor = mouse_1.default;\r\nexports.default = sigma_1.default;\r\n"],
  "mappings": "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",
  "names": ["d", "b", "TypedEventEmitter", "d", "b", "Camera", "d", "b", "Captor", "d", "b", "MouseCaptor", "QuadTree", "LabelCandidate", "LabelGrid", "require_utils", "AbstractProgram", "Program", "d", "b", "AbstractNodeProgram", "NodeProgram", "t", "e", "o", "n", "o", "e", "d", "b", "NodePointProgram", "d", "b", "AbstractEdgeProgram", "EdgeProgram", "n", "o", "e", "n", "t", "e", "d", "b", "EdgeRectangleProgram", "a", "n", "e", "o", "r", "e", "d", "b", "EdgeArrowHeadProgram", "o", "n", "e", "d", "b", "EdgeClampedProgram", "d", "b", "TouchCaptor", "d", "b", "Sigma", "_a", "_b", "_c", "node", "edge", "type", "require_sigma"]
}
