{
  "version": 3,
  "sources": ["../../@yomguithereal/helpers/extend.js", "../../sigma/utils/matrices.js", "../../sigma/utils/data.js", "../../sigma/utils/index.js", "../../sigma/utils/easings.js", "../../sigma/utils/animate.js", "../../sigma/types.js", "../../sigma/core/camera.js", "../../sigma/core/captors/captor.js", "../../sigma/core/captors/mouse.js", "../../sigma/core/quadtree.js", "../../sigma/core/labels.js", "../../sigma/rendering/canvas/label.js", "../../sigma/rendering/canvas/hover.js", "../../sigma/rendering/canvas/edge-label.js", "../../sigma/rendering/webgl/shaders/utils.js", "../../sigma/rendering/webgl/programs/common/program.js", "../../sigma/rendering/webgl/programs/common/node.js", "../../sigma/rendering/webgl/shaders/node.point.vert.glsl.js", "../../sigma/rendering/webgl/shaders/node.point.frag.glsl.js", "../../sigma/rendering/webgl/programs/node.point.js", "../../sigma/rendering/webgl/programs/common/edge.js", "../../sigma/rendering/webgl/shaders/edge.rectangle.vert.glsl.js", "../../sigma/rendering/webgl/shaders/edge.rectangle.frag.glsl.js", "../../sigma/rendering/webgl/programs/edge.rectangle.js", "../../sigma/rendering/webgl/shaders/edge.arrowHead.vert.glsl.js", "../../sigma/rendering/webgl/shaders/edge.arrowHead.frag.glsl.js", "../../sigma/rendering/webgl/programs/edge.arrowHead.js", "../../sigma/rendering/webgl/shaders/edge.clamped.vert.glsl.js", "../../sigma/rendering/webgl/programs/edge.clamped.js", "../../sigma/rendering/webgl/programs/edge.arrow.js", "../../sigma/settings.js", "../../sigma/core/captors/touch.js", "../../sigma/utils/edge-collisions.js", "../../sigma/sigma.js", "../../sigma/index.js"],
  "sourcesContent": ["/**\n * Extend function\n * ================\n *\n * Function used to push a bunch of values into an array at once.\n *\n * Its strategy is to mutate target array's length then setting the new indices\n * to be the values to add.\n *\n * A benchmark proved that it is faster than the following strategies:\n *   1) `array.push.apply(array, values)`.\n *   2) A loop of pushes.\n *   3) `array = array.concat(values)`, obviously.\n *\n * Intuitively, this is correct because when adding a lot of elements, the\n * chosen strategies does not need to handle the `arguments` object to\n * execute #.apply's variadicity and because the array know its final length\n * at the beginning, avoiding potential multiple reallocations of the underlying\n * contiguous array. Some engines may be able to optimize the loop of push\n * operations but empirically they don't seem to do so.\n */\n\n/**\n * Extends the target array with the given values.\n *\n * @param  {array} array  - Target array.\n * @param  {array} values - Values to add.\n */\nmodule.exports = function extend(array, values) {\n  var l2 = values.length;\n\n  if (l2 === 0)\n    return;\n\n  var l1 = array.length;\n\n  array.length += l2;\n\n  for (var i = 0; i < l2; i++)\n    array[l1 + i] = values[i];\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.multiplyVec2 = exports.multiply = exports.translate = exports.rotate = exports.scale = exports.identity = void 0;\nfunction identity() {\n    return Float32Array.of(1, 0, 0, 0, 1, 0, 0, 0, 1);\n}\nexports.identity = identity;\n// TODO: optimize\nfunction scale(m, x, y) {\n    m[0] = x;\n    m[4] = typeof y === \"number\" ? y : x;\n    return m;\n}\nexports.scale = scale;\nfunction rotate(m, r) {\n    var s = Math.sin(r), c = Math.cos(r);\n    m[0] = c;\n    m[1] = s;\n    m[3] = -s;\n    m[4] = c;\n    return m;\n}\nexports.rotate = rotate;\nfunction translate(m, x, y) {\n    m[6] = x;\n    m[7] = y;\n    return m;\n}\nexports.translate = translate;\nfunction multiply(a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2];\n    var a10 = a[3], a11 = a[4], a12 = a[5];\n    var a20 = a[6], a21 = a[7], a22 = a[8];\n    var b00 = b[0], b01 = b[1], b02 = b[2];\n    var b10 = b[3], b11 = b[4], b12 = b[5];\n    var b20 = b[6], b21 = b[7], b22 = b[8];\n    a[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    a[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    a[2] = b00 * a02 + b01 * a12 + b02 * a22;\n    a[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    a[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    a[5] = b10 * a02 + b11 * a12 + b12 * a22;\n    a[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    a[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    a[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return a;\n}\nexports.multiply = multiply;\nfunction multiplyVec2(a, b, z) {\n    if (z === void 0) { z = 1; }\n    var a00 = a[0];\n    var a01 = a[1];\n    var a10 = a[3];\n    var a11 = a[4];\n    var a20 = a[6];\n    var a21 = a[7];\n    var b0 = b.x;\n    var b1 = b.y;\n    return { x: b0 * a00 + b1 * a10 + a20 * z, y: b0 * a01 + b1 * a11 + a21 * z };\n}\nexports.multiplyVec2 = multiplyVec2;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HTML_COLORS = void 0;\nexports.HTML_COLORS = {\n    black: \"#000000\",\n    silver: \"#C0C0C0\",\n    gray: \"#808080\",\n    grey: \"#808080\",\n    white: \"#FFFFFF\",\n    maroon: \"#800000\",\n    red: \"#FF0000\",\n    purple: \"#800080\",\n    fuchsia: \"#FF00FF\",\n    green: \"#008000\",\n    lime: \"#00FF00\",\n    olive: \"#808000\",\n    yellow: \"#FFFF00\",\n    navy: \"#000080\",\n    blue: \"#0000FF\",\n    teal: \"#008080\",\n    aqua: \"#00FFFF\",\n    darkblue: \"#00008B\",\n    mediumblue: \"#0000CD\",\n    darkgreen: \"#006400\",\n    darkcyan: \"#008B8B\",\n    deepskyblue: \"#00BFFF\",\n    darkturquoise: \"#00CED1\",\n    mediumspringgreen: \"#00FA9A\",\n    springgreen: \"#00FF7F\",\n    cyan: \"#00FFFF\",\n    midnightblue: \"#191970\",\n    dodgerblue: \"#1E90FF\",\n    lightseagreen: \"#20B2AA\",\n    forestgreen: \"#228B22\",\n    seagreen: \"#2E8B57\",\n    darkslategray: \"#2F4F4F\",\n    darkslategrey: \"#2F4F4F\",\n    limegreen: \"#32CD32\",\n    mediumseagreen: \"#3CB371\",\n    turquoise: \"#40E0D0\",\n    royalblue: \"#4169E1\",\n    steelblue: \"#4682B4\",\n    darkslateblue: \"#483D8B\",\n    mediumturquoise: \"#48D1CC\",\n    indigo: \"#4B0082\",\n    darkolivegreen: \"#556B2F\",\n    cadetblue: \"#5F9EA0\",\n    cornflowerblue: \"#6495ED\",\n    rebeccapurple: \"#663399\",\n    mediumaquamarine: \"#66CDAA\",\n    dimgray: \"#696969\",\n    dimgrey: \"#696969\",\n    slateblue: \"#6A5ACD\",\n    olivedrab: \"#6B8E23\",\n    slategray: \"#708090\",\n    slategrey: \"#708090\",\n    lightslategray: \"#778899\",\n    lightslategrey: \"#778899\",\n    mediumslateblue: \"#7B68EE\",\n    lawngreen: \"#7CFC00\",\n    chartreuse: \"#7FFF00\",\n    aquamarine: \"#7FFFD4\",\n    skyblue: \"#87CEEB\",\n    lightskyblue: \"#87CEFA\",\n    blueviolet: \"#8A2BE2\",\n    darkred: \"#8B0000\",\n    darkmagenta: \"#8B008B\",\n    saddlebrown: \"#8B4513\",\n    darkseagreen: \"#8FBC8F\",\n    lightgreen: \"#90EE90\",\n    mediumpurple: \"#9370DB\",\n    darkviolet: \"#9400D3\",\n    palegreen: \"#98FB98\",\n    darkorchid: \"#9932CC\",\n    yellowgreen: \"#9ACD32\",\n    sienna: \"#A0522D\",\n    brown: \"#A52A2A\",\n    darkgray: \"#A9A9A9\",\n    darkgrey: \"#A9A9A9\",\n    lightblue: \"#ADD8E6\",\n    greenyellow: \"#ADFF2F\",\n    paleturquoise: \"#AFEEEE\",\n    lightsteelblue: \"#B0C4DE\",\n    powderblue: \"#B0E0E6\",\n    firebrick: \"#B22222\",\n    darkgoldenrod: \"#B8860B\",\n    mediumorchid: \"#BA55D3\",\n    rosybrown: \"#BC8F8F\",\n    darkkhaki: \"#BDB76B\",\n    mediumvioletred: \"#C71585\",\n    indianred: \"#CD5C5C\",\n    peru: \"#CD853F\",\n    chocolate: \"#D2691E\",\n    tan: \"#D2B48C\",\n    lightgray: \"#D3D3D3\",\n    lightgrey: \"#D3D3D3\",\n    thistle: \"#D8BFD8\",\n    orchid: \"#DA70D6\",\n    goldenrod: \"#DAA520\",\n    palevioletred: \"#DB7093\",\n    crimson: \"#DC143C\",\n    gainsboro: \"#DCDCDC\",\n    plum: \"#DDA0DD\",\n    burlywood: \"#DEB887\",\n    lightcyan: \"#E0FFFF\",\n    lavender: \"#E6E6FA\",\n    darksalmon: \"#E9967A\",\n    violet: \"#EE82EE\",\n    palegoldenrod: \"#EEE8AA\",\n    lightcoral: \"#F08080\",\n    khaki: \"#F0E68C\",\n    aliceblue: \"#F0F8FF\",\n    honeydew: \"#F0FFF0\",\n    azure: \"#F0FFFF\",\n    sandybrown: \"#F4A460\",\n    wheat: \"#F5DEB3\",\n    beige: \"#F5F5DC\",\n    whitesmoke: \"#F5F5F5\",\n    mintcream: \"#F5FFFA\",\n    ghostwhite: \"#F8F8FF\",\n    salmon: \"#FA8072\",\n    antiquewhite: \"#FAEBD7\",\n    linen: \"#FAF0E6\",\n    lightgoldenrodyellow: \"#FAFAD2\",\n    oldlace: \"#FDF5E6\",\n    magenta: \"#FF00FF\",\n    deeppink: \"#FF1493\",\n    orangered: \"#FF4500\",\n    tomato: \"#FF6347\",\n    hotpink: \"#FF69B4\",\n    coral: \"#FF7F50\",\n    darkorange: \"#FF8C00\",\n    lightsalmon: \"#FFA07A\",\n    orange: \"#FFA500\",\n    lightpink: \"#FFB6C1\",\n    pink: \"#FFC0CB\",\n    gold: \"#FFD700\",\n    peachpuff: \"#FFDAB9\",\n    navajowhite: \"#FFDEAD\",\n    moccasin: \"#FFE4B5\",\n    bisque: \"#FFE4C4\",\n    mistyrose: \"#FFE4E1\",\n    blanchedalmond: \"#FFEBCD\",\n    papayawhip: \"#FFEFD5\",\n    lavenderblush: \"#FFF0F5\",\n    seashell: \"#FFF5EE\",\n    cornsilk: \"#FFF8DC\",\n    lemonchiffon: \"#FFFACD\",\n    floralwhite: \"#FFFAF0\",\n    snow: \"#FFFAFA\",\n    lightyellow: \"#FFFFE0\",\n    ivory: \"#FFFFF0\",\n};\n", "\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateGraph = exports.canUse32BitsIndices = exports.extractPixel = exports.getMatrixImpact = exports.matrixFromCamera = exports.getCorrectionRatio = exports.floatColor = exports.floatArrayColor = exports.parseColor = exports.zIndexOrdering = exports.createNormalizationFunction = exports.graphExtent = exports.getPixelRatio = exports.createElement = exports.cancelFrame = exports.requestFrame = exports.assignDeep = exports.assign = exports.isPlainObject = void 0;\nvar is_graph_1 = __importDefault(require(\"graphology-utils/is-graph\"));\nvar matrices_1 = require(\"./matrices\");\nvar data_1 = require(\"./data\");\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction isPlainObject(value) {\n    return typeof value === \"object\" && value !== null && value.constructor === Object;\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Helper to use Object.assign with more than two objects.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assign(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        Object.assign(target, o);\n    }\n    return target;\n}\nexports.assign = assign;\n/**\n * Very simple recursive Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignDeep(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        for (var k in o) {\n            if (isPlainObject(o[k])) {\n                target[k] = assignDeep(target[k], o[k]);\n            }\n            else {\n                target[k] = o[k];\n            }\n        }\n    }\n    return target;\n}\nexports.assignDeep = assignDeep;\n/**\n * Just some dirty trick to make requestAnimationFrame and cancelAnimationFrame \"work\" in Node.js, for unit tests:\n */\nexports.requestFrame = typeof requestAnimationFrame !== \"undefined\"\n    ? function (callback) { return requestAnimationFrame(callback); }\n    : function (callback) { return setTimeout(callback, 0); };\nexports.cancelFrame = typeof cancelAnimationFrame !== \"undefined\"\n    ? function (requestID) { return cancelAnimationFrame(requestID); }\n    : function (requestID) { return clearTimeout(requestID); };\n/**\n * Function used to create DOM elements easily.\n *\n * @param  {string} tag        - Tag name of the element to create.\n * @param  {object} style      - Styles map.\n * @param  {object} attributes - Attributes map.\n * @return {HTMLElement}\n */\nfunction createElement(tag, style, attributes) {\n    var element = document.createElement(tag);\n    if (style) {\n        for (var k in style) {\n            element.style[k] = style[k];\n        }\n    }\n    if (attributes) {\n        for (var k in attributes) {\n            element.setAttribute(k, attributes[k]);\n        }\n    }\n    return element;\n}\nexports.createElement = createElement;\n/**\n * Function returning the browser's pixel ratio.\n *\n * @return {number}\n */\nfunction getPixelRatio() {\n    if (typeof window.devicePixelRatio !== \"undefined\")\n        return window.devicePixelRatio;\n    return 1;\n}\nexports.getPixelRatio = getPixelRatio;\n/**\n * Function returning the graph's node extent in x & y.\n *\n * @param  {Graph}\n * @return {object}\n */\nfunction graphExtent(graph) {\n    if (!graph.order)\n        return { x: [0, 1], y: [0, 1] };\n    var xMin = Infinity;\n    var xMax = -Infinity;\n    var yMin = Infinity;\n    var yMax = -Infinity;\n    graph.forEachNode(function (_, attr) {\n        var x = attr.x, y = attr.y;\n        if (x < xMin)\n            xMin = x;\n        if (x > xMax)\n            xMax = x;\n        if (y < yMin)\n            yMin = y;\n        if (y > yMax)\n            yMax = y;\n    });\n    return { x: [xMin, xMax], y: [yMin, yMax] };\n}\nexports.graphExtent = graphExtent;\nfunction createNormalizationFunction(extent) {\n    var _a = __read(extent.x, 2), minX = _a[0], maxX = _a[1], _b = __read(extent.y, 2), minY = _b[0], maxY = _b[1];\n    var ratio = Math.max(maxX - minX, maxY - minY), dX = (maxX + minX) / 2, dY = (maxY + minY) / 2;\n    if (ratio === 0 || Math.abs(ratio) === Infinity || isNaN(ratio))\n        ratio = 1;\n    if (isNaN(dX))\n        dX = 0;\n    if (isNaN(dY))\n        dY = 0;\n    var fn = function (data) {\n        return {\n            x: 0.5 + (data.x - dX) / ratio,\n            y: 0.5 + (data.y - dY) / ratio,\n        };\n    };\n    // TODO: possibility to apply this in batch over array of indices\n    fn.applyTo = function (data) {\n        data.x = 0.5 + (data.x - dX) / ratio;\n        data.y = 0.5 + (data.y - dY) / ratio;\n    };\n    fn.inverse = function (data) {\n        return {\n            x: dX + ratio * (data.x - 0.5),\n            y: dY + ratio * (data.y - 0.5),\n        };\n    };\n    fn.ratio = ratio;\n    return fn;\n}\nexports.createNormalizationFunction = createNormalizationFunction;\n/**\n * Function ordering the given elements in reverse z-order so they drawn\n * the correct way.\n *\n * @param  {number}   extent   - [min, max] z values.\n * @param  {function} getter   - Z attribute getter function.\n * @param  {array}    elements - The array to sort.\n * @return {array} - The sorted array.\n */\nfunction zIndexOrdering(extent, getter, elements) {\n    // If k is > n, we'll use a standard sort\n    return elements.sort(function (a, b) {\n        var zA = getter(a) || 0, zB = getter(b) || 0;\n        if (zA < zB)\n            return -1;\n        if (zA > zB)\n            return 1;\n        return 0;\n    });\n    // TODO: counting sort optimization\n}\nexports.zIndexOrdering = zIndexOrdering;\n/**\n * WebGL utils\n * ===========\n */\n/**\n * Memoized function returning a float-encoded color from various string\n * formats describing colors.\n */\nvar INT8 = new Int8Array(4);\nvar INT32 = new Int32Array(INT8.buffer, 0, 1);\nvar FLOAT32 = new Float32Array(INT8.buffer, 0, 1);\nvar RGBA_TEST_REGEX = /^\\s*rgba?\\s*\\(/;\nvar RGBA_EXTRACT_REGEX = /^\\s*rgba?\\s*\\(\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*,\\s*([0-9]*)(?:\\s*,\\s*(.*)?)?\\)\\s*$/;\nfunction parseColor(val) {\n    var r = 0; // byte\n    var g = 0; // byte\n    var b = 0; // byte\n    var a = 1; // float\n    // Handling hexadecimal notation\n    if (val[0] === \"#\") {\n        if (val.length === 4) {\n            r = parseInt(val.charAt(1) + val.charAt(1), 16);\n            g = parseInt(val.charAt(2) + val.charAt(2), 16);\n            b = parseInt(val.charAt(3) + val.charAt(3), 16);\n        }\n        else {\n            r = parseInt(val.charAt(1) + val.charAt(2), 16);\n            g = parseInt(val.charAt(3) + val.charAt(4), 16);\n            b = parseInt(val.charAt(5) + val.charAt(6), 16);\n        }\n        if (val.length === 9) {\n            a = parseInt(val.charAt(7) + val.charAt(8), 16) / 255;\n        }\n    }\n    // Handling rgb notation\n    else if (RGBA_TEST_REGEX.test(val)) {\n        var match = val.match(RGBA_EXTRACT_REGEX);\n        if (match) {\n            r = +match[1];\n            g = +match[2];\n            b = +match[3];\n            if (match[4])\n                a = +match[4];\n        }\n    }\n    return { r: r, g: g, b: b, a: a };\n}\nexports.parseColor = parseColor;\nvar FLOAT_COLOR_CACHE = {};\nfor (var htmlColor in data_1.HTML_COLORS) {\n    FLOAT_COLOR_CACHE[htmlColor] = floatColor(data_1.HTML_COLORS[htmlColor]);\n    // Replicating cache for hex values for free\n    FLOAT_COLOR_CACHE[data_1.HTML_COLORS[htmlColor]] = FLOAT_COLOR_CACHE[htmlColor];\n}\nfunction floatArrayColor(val) {\n    val = data_1.HTML_COLORS[val] || val;\n    // NOTE: this variant is not cached because it is mostly used for uniforms\n    var _a = parseColor(val), r = _a.r, g = _a.g, b = _a.b, a = _a.a;\n    return new Float32Array([r / 255, g / 255, b / 255, a]);\n}\nexports.floatArrayColor = floatArrayColor;\nfunction floatColor(val) {\n    // If the color is already computed, we yield it\n    if (typeof FLOAT_COLOR_CACHE[val] !== \"undefined\")\n        return FLOAT_COLOR_CACHE[val];\n    var parsed = parseColor(val);\n    var r = parsed.r, g = parsed.g, b = parsed.b;\n    var a = parsed.a;\n    a = (a * 255) | 0;\n    INT32[0] = ((a << 24) | (b << 16) | (g << 8) | r) & 0xfeffffff;\n    var color = FLOAT32[0];\n    FLOAT_COLOR_CACHE[val] = color;\n    return color;\n}\nexports.floatColor = floatColor;\n/**\n * In sigma, the graph is normalized into a [0, 1], [0, 1] square, before being given to the various renderers. This\n * helps dealing with quadtree in particular.\n * But at some point, we need to rescale it so that it takes the best place in the screen, ie. we always want to see two\n * nodes \"touching\" opposite sides of the graph, with the camera being at its default state.\n *\n * This function determines this ratio.\n */\nfunction getCorrectionRatio(viewportDimensions, graphDimensions) {\n    var viewportRatio = viewportDimensions.height / viewportDimensions.width;\n    var graphRatio = graphDimensions.height / graphDimensions.width;\n    // If the stage and the graphs are in different directions (such as the graph being wider that tall while the stage\n    // is taller than wide), we can stop here to have indeed nodes touching opposite sides:\n    if ((viewportRatio < 1 && graphRatio > 1) || (viewportRatio > 1 && graphRatio < 1)) {\n        return 1;\n    }\n    // Else, we need to fit the graph inside the stage:\n    // 1. If the graph is \"squarer\" (ie. with a ratio closer to 1), we need to make the largest sides touch;\n    // 2. If the stage is \"squarer\", we need to make the smallest sides touch.\n    return Math.min(Math.max(graphRatio, 1 / graphRatio), Math.max(1 / viewportRatio, viewportRatio));\n}\nexports.getCorrectionRatio = getCorrectionRatio;\n/**\n * Function returning a matrix from the current state of the camera.\n */\n// TODO: it's possible to optimize this drastically!\nfunction matrixFromCamera(state, viewportDimensions, graphDimensions, padding, inverse) {\n    var angle = state.angle, ratio = state.ratio, x = state.x, y = state.y;\n    var width = viewportDimensions.width, height = viewportDimensions.height;\n    var matrix = (0, matrices_1.identity)();\n    var smallestDimension = Math.min(width, height) - 2 * padding;\n    var correctionRatio = getCorrectionRatio(viewportDimensions, graphDimensions);\n    if (!inverse) {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 2 * (smallestDimension / width) * correctionRatio, 2 * (smallestDimension / height) * correctionRatio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), -angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 1 / ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), -x, -y));\n    }\n    else {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), x, y));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), width / smallestDimension / 2 / correctionRatio, height / smallestDimension / 2 / correctionRatio));\n    }\n    return matrix;\n}\nexports.matrixFromCamera = matrixFromCamera;\n/**\n * All these transformations we apply on the matrix to get it rescale the graph\n * as we want make it very hard to get pixel-perfect distances in WebGL. This\n * function returns a factor that properly cancels the matrix effect on lengths.\n *\n * [jacomyal]\n * To be fully honest, I can't really explain happens here... I notice that the\n * following ratio works (ie. it correctly compensates the matrix impact on all\n * camera states I could try):\n * > `R = size(V) / size(M * V) / W`\n * as long as `M * V` is in the direction of W (ie. parallel to (Ox)). It works\n * as well with H and a vector that transforms into something parallel to (Oy).\n *\n * Also, note that we use `angle` and not `-angle` (that would seem logical,\n * since we want to anticipate the rotation), because of the fact that in WebGL,\n * the image is vertically swapped.\n */\nfunction getMatrixImpact(matrix, cameraState, viewportDimensions) {\n    var _a = (0, matrices_1.multiplyVec2)(matrix, { x: Math.cos(cameraState.angle), y: Math.sin(cameraState.angle) }, 0), x = _a.x, y = _a.y;\n    return 1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) / viewportDimensions.width;\n}\nexports.getMatrixImpact = getMatrixImpact;\n/**\n * Function extracting the color at the given pixel.\n */\nfunction extractPixel(gl, x, y, array) {\n    var data = array || new Uint8Array(4);\n    gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return data;\n}\nexports.extractPixel = extractPixel;\n/**\n * Function used to know whether given webgl context can use 32 bits indices.\n */\nfunction canUse32BitsIndices(gl) {\n    var webgl2 = typeof WebGL2RenderingContext !== \"undefined\" && gl instanceof WebGL2RenderingContext;\n    return webgl2 || !!gl.getExtension(\"OES_element_index_uint\");\n}\nexports.canUse32BitsIndices = canUse32BitsIndices;\n/**\n * Check if the graph variable is a valid graph, and if sigma can render it.\n */\nfunction validateGraph(graph) {\n    // check if it's a valid graphology instance\n    if (!(0, is_graph_1.default)(graph))\n        throw new Error(\"Sigma: invalid graph instance.\");\n    // check if nodes have x/y attributes\n    graph.forEachNode(function (key, attributes) {\n        if (!Number.isFinite(attributes.x) || !Number.isFinite(attributes.y)) {\n            throw new Error(\"Sigma: Coordinates of node \".concat(key, \" are invalid. A node must have a numeric 'x' and 'y' attribute.\"));\n        }\n    });\n}\nexports.validateGraph = validateGraph;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cubicInOut = exports.cubicOut = exports.cubicIn = exports.quadraticInOut = exports.quadraticOut = exports.quadraticIn = exports.linear = void 0;\n/**\n * Sigma.js Easings\n * =================\n *\n * Handy collection of easing functions.\n * @module\n */\nvar linear = function (k) { return k; };\nexports.linear = linear;\nvar quadraticIn = function (k) { return k * k; };\nexports.quadraticIn = quadraticIn;\nvar quadraticOut = function (k) { return k * (2 - k); };\nexports.quadraticOut = quadraticOut;\nvar quadraticInOut = function (k) {\n    if ((k *= 2) < 1)\n        return 0.5 * k * k;\n    return -0.5 * (--k * (k - 2) - 1);\n};\nexports.quadraticInOut = quadraticInOut;\nvar cubicIn = function (k) { return k * k * k; };\nexports.cubicIn = cubicIn;\nvar cubicOut = function (k) { return --k * k * k + 1; };\nexports.cubicOut = cubicOut;\nvar cubicInOut = function (k) {\n    if ((k *= 2) < 1)\n        return 0.5 * k * k * k;\n    return 0.5 * ((k -= 2) * k * k + 2);\n};\nexports.cubicInOut = cubicInOut;\nvar easings = {\n    linear: exports.linear,\n    quadraticIn: exports.quadraticIn,\n    quadraticOut: exports.quadraticOut,\n    quadraticInOut: exports.quadraticInOut,\n    cubicIn: exports.cubicIn,\n    cubicOut: exports.cubicOut,\n    cubicInOut: exports.cubicInOut,\n};\nexports.default = easings;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.animateNodes = exports.ANIMATE_DEFAULTS = void 0;\nvar index_1 = require(\"./index\");\nvar easings_1 = __importDefault(require(\"./easings\"));\nexports.ANIMATE_DEFAULTS = {\n    easing: \"quadraticInOut\",\n    duration: 150,\n};\n/**\n * Function used to animate the nodes.\n */\nfunction animateNodes(graph, targets, opts, callback) {\n    var options = Object.assign({}, exports.ANIMATE_DEFAULTS, opts);\n    var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n    var start = Date.now();\n    var startPositions = {};\n    for (var node in targets) {\n        var attrs = targets[node];\n        startPositions[node] = {};\n        for (var k in attrs)\n            startPositions[node][k] = graph.getNodeAttribute(node, k);\n    }\n    var frame = null;\n    var step = function () {\n        frame = null;\n        var p = (Date.now() - start) / options.duration;\n        if (p >= 1) {\n            // Animation is done\n            for (var node in targets) {\n                var attrs = targets[node];\n                // We use given values to avoid precision issues and for convenience\n                for (var k in attrs)\n                    graph.setNodeAttribute(node, k, attrs[k]);\n            }\n            if (typeof callback === \"function\")\n                callback();\n            return;\n        }\n        p = easing(p);\n        for (var node in targets) {\n            var attrs = targets[node];\n            var s = startPositions[node];\n            for (var k in attrs)\n                graph.setNodeAttribute(node, k, attrs[k] * p + s[k] * (1 - p));\n        }\n        frame = (0, index_1.requestFrame)(step);\n    };\n    step();\n    return function () {\n        if (frame)\n            (0, index_1.cancelFrame)(frame);\n    };\n}\nexports.animateNodes = animateNodes;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypedEventEmitter = void 0;\n/**\n * Sigma.js Types\n * ===============\n *\n * Various type declarations used throughout the library.\n * @module\n */\nvar events_1 = require(\"events\");\nvar TypedEventEmitter = /** @class */ (function (_super) {\n    __extends(TypedEventEmitter, _super);\n    function TypedEventEmitter() {\n        var _this = _super.call(this) || this;\n        _this.rawEmitter = _this;\n        return _this;\n    }\n    return TypedEventEmitter;\n}(events_1.EventEmitter));\nexports.TypedEventEmitter = TypedEventEmitter;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js Camera Class\n * ======================\n *\n * Class designed to store camera information & used to update it.\n * @module\n */\nvar animate_1 = require(\"../utils/animate\");\nvar easings_1 = __importDefault(require(\"../utils/easings\"));\nvar utils_1 = require(\"../utils\");\nvar types_1 = require(\"../types\");\n/**\n * Defaults.\n */\nvar DEFAULT_ZOOMING_RATIO = 1.5;\n/**\n * Camera class\n *\n * @constructor\n */\nvar Camera = /** @class */ (function (_super) {\n    __extends(Camera, _super);\n    function Camera() {\n        var _this = _super.call(this) || this;\n        _this.x = 0.5;\n        _this.y = 0.5;\n        _this.angle = 0;\n        _this.ratio = 1;\n        _this.minRatio = null;\n        _this.maxRatio = null;\n        _this.nextFrame = null;\n        _this.previousState = null;\n        _this.enabled = true;\n        // State\n        _this.previousState = _this.getState();\n        return _this;\n    }\n    /**\n     * Static method used to create a Camera object with a given state.\n     *\n     * @param state\n     * @return {Camera}\n     */\n    Camera.from = function (state) {\n        var camera = new Camera();\n        return camera.setState(state);\n    };\n    /**\n     * Method used to enable the camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.enable = function () {\n        this.enabled = true;\n        return this;\n    };\n    /**\n     * Method used to disable the camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.disable = function () {\n        this.enabled = false;\n        return this;\n    };\n    /**\n     * Method used to retrieve the camera's current state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.getState = function () {\n        return {\n            x: this.x,\n            y: this.y,\n            angle: this.angle,\n            ratio: this.ratio,\n        };\n    };\n    /**\n     * Method used to check whether the camera has the given state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.hasState = function (state) {\n        return this.x === state.x && this.y === state.y && this.ratio === state.ratio && this.angle === state.angle;\n    };\n    /**\n     * Method used to retrieve the camera's previous state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.getPreviousState = function () {\n        var state = this.previousState;\n        if (!state)\n            return null;\n        return {\n            x: state.x,\n            y: state.y,\n            angle: state.angle,\n            ratio: state.ratio,\n        };\n    };\n    /**\n     * Method used to check minRatio and maxRatio values.\n     *\n     * @param ratio\n     * @return {number}\n     */\n    Camera.prototype.getBoundedRatio = function (ratio) {\n        var r = ratio;\n        if (typeof this.minRatio === \"number\")\n            r = Math.max(r, this.minRatio);\n        if (typeof this.maxRatio === \"number\")\n            r = Math.min(r, this.maxRatio);\n        return r;\n    };\n    /**\n     * Method used to check various things to return a legit state candidate.\n     *\n     * @param state\n     * @return {object}\n     */\n    Camera.prototype.validateState = function (state) {\n        var validatedState = {};\n        if (typeof state.x === \"number\")\n            validatedState.x = state.x;\n        if (typeof state.y === \"number\")\n            validatedState.y = state.y;\n        if (typeof state.angle === \"number\")\n            validatedState.angle = state.angle;\n        if (typeof state.ratio === \"number\")\n            validatedState.ratio = this.getBoundedRatio(state.ratio);\n        return validatedState;\n    };\n    /**\n     * Method used to check whether the camera is currently being animated.\n     *\n     * @return {boolean}\n     */\n    Camera.prototype.isAnimated = function () {\n        return !!this.nextFrame;\n    };\n    /**\n     * Method used to set the camera's state.\n     *\n     * @param  {object} state - New state.\n     * @return {Camera}\n     */\n    Camera.prototype.setState = function (state) {\n        if (!this.enabled)\n            return this;\n        // TODO: update by function\n        // Keeping track of last state\n        this.previousState = this.getState();\n        var validState = this.validateState(state);\n        if (typeof validState.x === \"number\")\n            this.x = validState.x;\n        if (typeof validState.y === \"number\")\n            this.y = validState.y;\n        if (typeof validState.angle === \"number\")\n            this.angle = validState.angle;\n        if (typeof validState.ratio === \"number\")\n            this.ratio = validState.ratio;\n        // Emitting\n        if (!this.hasState(this.previousState))\n            this.emit(\"updated\", this.getState());\n        return this;\n    };\n    /**\n     * Method used to update the camera's state using a function.\n     *\n     * @param  {function} updater - Updated function taking current state and\n     *                              returning next state.\n     * @return {Camera}\n     */\n    Camera.prototype.updateState = function (updater) {\n        this.setState(updater(this.getState()));\n        return this;\n    };\n    /**\n     * Method used to animate the camera.\n     *\n     * @param  {object}                    state      - State to reach eventually.\n     * @param  {object}                    opts       - Options:\n     * @param  {number}                      duration - Duration of the animation.\n     * @param  {string | number => number}   easing   - Easing function or name of an existing one\n     * @param  {function}                  callback   - Callback\n     */\n    Camera.prototype.animate = function (state, opts, callback) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        var options = Object.assign({}, animate_1.ANIMATE_DEFAULTS, opts);\n        var validState = this.validateState(state);\n        var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n        // State\n        var start = Date.now(), initialState = this.getState();\n        // Function performing the animation\n        var fn = function () {\n            var t = (Date.now() - start) / options.duration;\n            // The animation is over:\n            if (t >= 1) {\n                _this.nextFrame = null;\n                _this.setState(validState);\n                if (_this.animationCallback) {\n                    _this.animationCallback.call(null);\n                    _this.animationCallback = undefined;\n                }\n                return;\n            }\n            var coefficient = easing(t);\n            var newState = {};\n            if (typeof validState.x === \"number\")\n                newState.x = initialState.x + (validState.x - initialState.x) * coefficient;\n            if (typeof validState.y === \"number\")\n                newState.y = initialState.y + (validState.y - initialState.y) * coefficient;\n            if (typeof validState.angle === \"number\")\n                newState.angle = initialState.angle + (validState.angle - initialState.angle) * coefficient;\n            if (typeof validState.ratio === \"number\")\n                newState.ratio = initialState.ratio + (validState.ratio - initialState.ratio) * coefficient;\n            _this.setState(newState);\n            _this.nextFrame = (0, utils_1.requestFrame)(fn);\n        };\n        if (this.nextFrame) {\n            (0, utils_1.cancelFrame)(this.nextFrame);\n            if (this.animationCallback)\n                this.animationCallback.call(null);\n            this.nextFrame = (0, utils_1.requestFrame)(fn);\n        }\n        else {\n            fn();\n        }\n        this.animationCallback = callback;\n    };\n    /**\n     * Method used to zoom the camera.\n     *\n     * @param  {number|object} factorOrOptions - Factor or options.\n     * @return {function}\n     */\n    Camera.prototype.animatedZoom = function (factorOrOptions) {\n        if (!factorOrOptions) {\n            this.animate({ ratio: this.ratio / DEFAULT_ZOOMING_RATIO });\n        }\n        else {\n            if (typeof factorOrOptions === \"number\")\n                return this.animate({ ratio: this.ratio / factorOrOptions });\n            else\n                this.animate({\n                    ratio: this.ratio / (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\n                }, factorOrOptions);\n        }\n    };\n    /**\n     * Method used to unzoom the camera.\n     *\n     * @param  {number|object} factorOrOptions - Factor or options.\n     */\n    Camera.prototype.animatedUnzoom = function (factorOrOptions) {\n        if (!factorOrOptions) {\n            this.animate({ ratio: this.ratio * DEFAULT_ZOOMING_RATIO });\n        }\n        else {\n            if (typeof factorOrOptions === \"number\")\n                return this.animate({ ratio: this.ratio * factorOrOptions });\n            else\n                this.animate({\n                    ratio: this.ratio * (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\n                }, factorOrOptions);\n        }\n    };\n    /**\n     * Method used to reset the camera.\n     *\n     * @param  {object} options - Options.\n     */\n    Camera.prototype.animatedReset = function (options) {\n        this.animate({\n            x: 0.5,\n            y: 0.5,\n            ratio: 1,\n            angle: 0,\n        }, options);\n    };\n    /**\n     * Returns a new Camera instance, with the same state as the current camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.copy = function () {\n        return Camera.from(this.getState());\n    };\n    return Camera;\n}(types_1.TypedEventEmitter));\nexports.default = Camera;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWheelDelta = exports.getTouchCoords = exports.getTouchesArray = exports.getWheelCoords = exports.getMouseCoords = exports.getPosition = void 0;\n/**\n * Sigma.js Captor Class\n * ======================\n * @module\n */\nvar types_1 = require(\"../../types\");\n/**\n * Captor utils functions\n * ======================\n */\n/**\n * Extract the local X and Y coordinates from a mouse event or touch object. If\n * a DOM element is given, it uses this element's offset to compute the position\n * (this allows using events that are not bound to the container itself and\n * still have a proper position).\n *\n * @param  {event}       e - A mouse event or touch object.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {number}      The local Y value of the mouse.\n */\nfunction getPosition(e, dom) {\n    var bbox = dom.getBoundingClientRect();\n    return {\n        x: e.clientX - bbox.left,\n        y: e.clientY - bbox.top,\n    };\n}\nexports.getPosition = getPosition;\n/**\n * Convert mouse coords to sigma coords.\n *\n * @param  {event}       e   - A mouse event or touch object.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getMouseCoords(e, dom) {\n    var res = __assign(__assign({}, getPosition(e, dom)), { sigmaDefaultPrevented: false, preventSigmaDefault: function () {\n            res.sigmaDefaultPrevented = true;\n        }, original: e });\n    return res;\n}\nexports.getMouseCoords = getMouseCoords;\n/**\n * Convert mouse wheel event coords to sigma coords.\n *\n * @param  {event}       e   - A wheel mouse event.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getWheelCoords(e, dom) {\n    return __assign(__assign({}, getMouseCoords(e, dom)), { delta: getWheelDelta(e) });\n}\nexports.getWheelCoords = getWheelCoords;\nvar MAX_TOUCHES = 2;\nfunction getTouchesArray(touches) {\n    var arr = [];\n    for (var i = 0, l = Math.min(touches.length, MAX_TOUCHES); i < l; i++)\n        arr.push(touches[i]);\n    return arr;\n}\nexports.getTouchesArray = getTouchesArray;\n/**\n * Convert touch coords to sigma coords.\n *\n * @param  {event}       e   - A touch event.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getTouchCoords(e, dom) {\n    return {\n        touches: getTouchesArray(e.touches).map(function (touch) { return getPosition(touch, dom); }),\n        original: e,\n    };\n}\nexports.getTouchCoords = getTouchCoords;\n/**\n * Extract the wheel delta from a mouse event or touch object.\n *\n * @param  {event}  e - A mouse event or touch object.\n * @return {number}     The wheel delta of the mouse.\n */\nfunction getWheelDelta(e) {\n    // TODO: check those ratios again to ensure a clean Chrome/Firefox compat\n    if (typeof e.deltaY !== \"undefined\")\n        return (e.deltaY * -3) / 360;\n    if (typeof e.detail !== \"undefined\")\n        return e.detail / -9;\n    throw new Error(\"Captor: could not extract delta from event.\");\n}\nexports.getWheelDelta = getWheelDelta;\n/**\n * Abstract class representing a captor like the user's mouse or touch controls.\n */\nvar Captor = /** @class */ (function (_super) {\n    __extends(Captor, _super);\n    function Captor(container, renderer) {\n        var _this = _super.call(this) || this;\n        // Properties\n        _this.container = container;\n        _this.renderer = renderer;\n        return _this;\n    }\n    return Captor;\n}(types_1.TypedEventEmitter));\nexports.default = Captor;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar captor_1 = __importStar(require(\"./captor\"));\n/**\n * Constants.\n */\nvar DRAG_TIMEOUT = 100;\nvar DRAGGED_EVENTS_TOLERANCE = 3;\nvar MOUSE_INERTIA_DURATION = 200;\nvar MOUSE_INERTIA_RATIO = 3;\nvar MOUSE_ZOOM_DURATION = 250;\nvar ZOOMING_RATIO = 1.7;\nvar DOUBLE_CLICK_TIMEOUT = 300;\nvar DOUBLE_CLICK_ZOOMING_RATIO = 2.2;\nvar DOUBLE_CLICK_ZOOMING_DURATION = 200;\n/**\n * Mouse captor class.\n *\n * @constructor\n */\nvar MouseCaptor = /** @class */ (function (_super) {\n    __extends(MouseCaptor, _super);\n    function MouseCaptor(container, renderer) {\n        var _this = _super.call(this, container, renderer) || this;\n        // State\n        _this.enabled = true;\n        _this.draggedEvents = 0;\n        _this.downStartTime = null;\n        _this.lastMouseX = null;\n        _this.lastMouseY = null;\n        _this.isMouseDown = false;\n        _this.isMoving = false;\n        _this.movingTimeout = null;\n        _this.startCameraState = null;\n        _this.clicks = 0;\n        _this.doubleClickTimeout = null;\n        _this.currentWheelDirection = 0;\n        // Binding methods\n        _this.handleClick = _this.handleClick.bind(_this);\n        _this.handleRightClick = _this.handleRightClick.bind(_this);\n        _this.handleDown = _this.handleDown.bind(_this);\n        _this.handleUp = _this.handleUp.bind(_this);\n        _this.handleMove = _this.handleMove.bind(_this);\n        _this.handleWheel = _this.handleWheel.bind(_this);\n        _this.handleOut = _this.handleOut.bind(_this);\n        // Binding events\n        container.addEventListener(\"click\", _this.handleClick, false);\n        container.addEventListener(\"contextmenu\", _this.handleRightClick, false);\n        container.addEventListener(\"mousedown\", _this.handleDown, false);\n        container.addEventListener(\"wheel\", _this.handleWheel, false);\n        container.addEventListener(\"mouseout\", _this.handleOut, false);\n        document.addEventListener(\"mousemove\", _this.handleMove, false);\n        document.addEventListener(\"mouseup\", _this.handleUp, false);\n        return _this;\n    }\n    MouseCaptor.prototype.kill = function () {\n        var container = this.container;\n        container.removeEventListener(\"click\", this.handleClick);\n        container.removeEventListener(\"contextmenu\", this.handleRightClick);\n        container.removeEventListener(\"mousedown\", this.handleDown);\n        container.removeEventListener(\"wheel\", this.handleWheel);\n        container.removeEventListener(\"mouseout\", this.handleOut);\n        document.removeEventListener(\"mousemove\", this.handleMove);\n        document.removeEventListener(\"mouseup\", this.handleUp);\n    };\n    MouseCaptor.prototype.handleClick = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        this.clicks++;\n        if (this.clicks === 2) {\n            this.clicks = 0;\n            if (typeof this.doubleClickTimeout === \"number\") {\n                clearTimeout(this.doubleClickTimeout);\n                this.doubleClickTimeout = null;\n            }\n            return this.handleDoubleClick(e);\n        }\n        setTimeout(function () {\n            _this.clicks = 0;\n            _this.doubleClickTimeout = null;\n        }, DOUBLE_CLICK_TIMEOUT);\n        // NOTE: this is here to prevent click events on drag\n        if (this.draggedEvents < DRAGGED_EVENTS_TOLERANCE)\n            this.emit(\"click\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleRightClick = function (e) {\n        if (!this.enabled)\n            return;\n        this.emit(\"rightClick\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleDoubleClick = function (e) {\n        if (!this.enabled)\n            return;\n        e.preventDefault();\n        e.stopPropagation();\n        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);\n        this.emit(\"doubleClick\", mouseCoords);\n        if (mouseCoords.sigmaDefaultPrevented)\n            return;\n        // default behavior\n        var camera = this.renderer.getCamera();\n        var newRatio = camera.getBoundedRatio(camera.getState().ratio / DOUBLE_CLICK_ZOOMING_RATIO);\n        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {\n            easing: \"quadraticInOut\",\n            duration: DOUBLE_CLICK_ZOOMING_DURATION,\n        });\n    };\n    MouseCaptor.prototype.handleDown = function (e) {\n        if (!this.enabled)\n            return;\n        // We only start dragging on left button\n        if (e.button === 0) {\n            this.startCameraState = this.renderer.getCamera().getState();\n            var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;\n            this.lastMouseX = x;\n            this.lastMouseY = y;\n            this.draggedEvents = 0;\n            this.downStartTime = Date.now();\n            this.isMouseDown = true;\n        }\n        this.emit(\"mousedown\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleUp = function (e) {\n        var _this = this;\n        if (!this.enabled || !this.isMouseDown)\n            return;\n        var camera = this.renderer.getCamera();\n        this.isMouseDown = false;\n        if (typeof this.movingTimeout === \"number\") {\n            clearTimeout(this.movingTimeout);\n            this.movingTimeout = null;\n        }\n        var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;\n        var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };\n        if (this.isMoving) {\n            camera.animate({\n                x: cameraState.x + MOUSE_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\n                y: cameraState.y + MOUSE_INERTIA_RATIO * (cameraState.y - previousCameraState.y),\n            }, {\n                duration: MOUSE_INERTIA_DURATION,\n                easing: \"quadraticOut\",\n            });\n        }\n        else if (this.lastMouseX !== x || this.lastMouseY !== y) {\n            camera.setState({\n                x: cameraState.x,\n                y: cameraState.y,\n            });\n        }\n        this.isMoving = false;\n        setTimeout(function () {\n            _this.draggedEvents = 0;\n            // NOTE: this refresh is here to make sure `hideEdgesOnMove` can work\n            // when someone releases camera pan drag after having stopped moving.\n            // See commit: https://github.com/jacomyal/sigma.js/commit/cfd9197f70319109db6b675dd7c82be493ca95a2\n            // See also issue: https://github.com/jacomyal/sigma.js/issues/1290\n            // It could be possible to render instead of scheduling a refresh but for\n            // now it seems good enough.\n            _this.renderer.refresh();\n        }, 0);\n        this.emit(\"mouseup\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleMove = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);\n        // Always trigger a \"mousemovebody\" event, so that it is possible to develop\n        // a drag-and-drop effect that works even when the mouse is out of the\n        // container:\n        this.emit(\"mousemovebody\", mouseCoords);\n        // Only trigger the \"mousemove\" event when the mouse is actually hovering\n        // the container, to avoid weirdly hovering nodes and/or edges when the\n        // mouse is not hover the container:\n        if (e.target === this.container) {\n            this.emit(\"mousemove\", mouseCoords);\n        }\n        if (mouseCoords.sigmaDefaultPrevented)\n            return;\n        // Handle the case when \"isMouseDown\" all the time, to allow dragging the\n        // stage while the mouse is not hover the container:\n        if (this.isMouseDown) {\n            this.isMoving = true;\n            this.draggedEvents++;\n            if (typeof this.movingTimeout === \"number\") {\n                clearTimeout(this.movingTimeout);\n            }\n            this.movingTimeout = window.setTimeout(function () {\n                _this.movingTimeout = null;\n                _this.isMoving = false;\n            }, DRAG_TIMEOUT);\n            var camera = this.renderer.getCamera();\n            var _a = (0, captor_1.getPosition)(e, this.container), eX = _a.x, eY = _a.y;\n            var lastMouse = this.renderer.viewportToFramedGraph({\n                x: this.lastMouseX,\n                y: this.lastMouseY,\n            });\n            var mouse = this.renderer.viewportToFramedGraph({ x: eX, y: eY });\n            var offsetX = lastMouse.x - mouse.x, offsetY = lastMouse.y - mouse.y;\n            var cameraState = camera.getState();\n            var x = cameraState.x + offsetX, y = cameraState.y + offsetY;\n            camera.setState({ x: x, y: y });\n            this.lastMouseX = eX;\n            this.lastMouseY = eY;\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    };\n    MouseCaptor.prototype.handleWheel = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        e.preventDefault();\n        e.stopPropagation();\n        var delta = (0, captor_1.getWheelDelta)(e);\n        if (!delta)\n            return;\n        var wheelCoords = (0, captor_1.getWheelCoords)(e, this.container);\n        this.emit(\"wheel\", wheelCoords);\n        if (wheelCoords.sigmaDefaultPrevented)\n            return;\n        // Default behavior\n        var ratioDiff = delta > 0 ? 1 / ZOOMING_RATIO : ZOOMING_RATIO;\n        var camera = this.renderer.getCamera();\n        var newRatio = camera.getBoundedRatio(camera.getState().ratio * ratioDiff);\n        var wheelDirection = delta > 0 ? 1 : -1;\n        var now = Date.now();\n        // Cancel events that are too close too each other and in the same direction:\n        if (this.currentWheelDirection === wheelDirection &&\n            this.lastWheelTriggerTime &&\n            now - this.lastWheelTriggerTime < MOUSE_ZOOM_DURATION / 5) {\n            return;\n        }\n        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {\n            easing: \"quadraticOut\",\n            duration: MOUSE_ZOOM_DURATION,\n        }, function () {\n            _this.currentWheelDirection = 0;\n        });\n        this.currentWheelDirection = wheelDirection;\n        this.lastWheelTriggerTime = now;\n    };\n    MouseCaptor.prototype.handleOut = function () {\n        // TODO: dispatch event\n    };\n    return MouseCaptor;\n}(captor_1.default));\nexports.default = MouseCaptor;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rectangleCollidesWithQuad = exports.squareCollidesWithQuad = exports.getCircumscribedAlignedRectangle = exports.isRectangleAligned = void 0;\n/**\n * Sigma.js Quad Tree Class\n * =========================\n *\n * Class implementing the quad tree data structure used to solve hovers and\n * determine which elements are currently in the scope of the camera so that\n * we don't waste time rendering things the user cannot see anyway.\n * @module\n */\n/* eslint no-nested-ternary: 0 */\n/* eslint no-constant-condition: 0 */\nvar extend_1 = __importDefault(require(\"@yomguithereal/helpers/extend\"));\n/**\n * Notes:\n *\n *   - a square can be represented as topleft + width, saying for the quad blocks,\n *     to reduce overall memory usage (which is already pretty low).\n *   - this implementation of a quadtree is often called a MX-CIF quadtree.\n *   - we could explore spatial hashing (hilbert quadtrees, notably).\n */\n/**\n * Constants.\n *\n * Note that since we are representing a static 4-ary tree, the indices of the\n * quadrants are the following:\n *   - TOP_LEFT:     4i + b\n *   - TOP_RIGHT:    4i + 2b\n *   - BOTTOM_LEFT:  4i + 3b\n *   - BOTTOM_RIGHT: 4i + 4b\n */\nvar BLOCKS = 4;\nvar MAX_LEVEL = 5;\n// Outside block is max block index + 1, i.e.:\n// BLOCKS * ((4 * (4 ** MAX_LEVEL) - 1) / 3)\nvar OUTSIDE_BLOCK = 5460;\nvar X_OFFSET = 0;\nvar Y_OFFSET = 1;\nvar WIDTH_OFFSET = 2;\nvar HEIGHT_OFFSET = 3;\nvar TOP_LEFT = 1;\nvar TOP_RIGHT = 2;\nvar BOTTOM_LEFT = 3;\nvar BOTTOM_RIGHT = 4;\nvar hasWarnedTooMuchOutside = false;\n/**\n * Geometry helpers.\n */\n/**\n * Function returning whether the given rectangle is axis-aligned.\n *\n * @param  {Rectangle} rect\n * @return {boolean}\n */\nfunction isRectangleAligned(rect) {\n    return rect.x1 === rect.x2 || rect.y1 === rect.y2;\n}\nexports.isRectangleAligned = isRectangleAligned;\n/**\n * Function returning the smallest rectangle that contains the given rectangle, and that is aligned with the axis.\n *\n * @param {Rectangle} rect\n * @return {Rectangle}\n */\nfunction getCircumscribedAlignedRectangle(rect) {\n    var width = Math.sqrt(Math.pow(rect.x2 - rect.x1, 2) + Math.pow(rect.y2 - rect.y1, 2));\n    var heightVector = {\n        x: ((rect.y1 - rect.y2) * rect.height) / width,\n        y: ((rect.x2 - rect.x1) * rect.height) / width,\n    };\n    // Compute all corners:\n    var tl = { x: rect.x1, y: rect.y1 };\n    var tr = { x: rect.x2, y: rect.y2 };\n    var bl = {\n        x: rect.x1 + heightVector.x,\n        y: rect.y1 + heightVector.y,\n    };\n    var br = {\n        x: rect.x2 + heightVector.x,\n        y: rect.y2 + heightVector.y,\n    };\n    var xL = Math.min(tl.x, tr.x, bl.x, br.x);\n    var xR = Math.max(tl.x, tr.x, bl.x, br.x);\n    var yT = Math.min(tl.y, tr.y, bl.y, br.y);\n    var yB = Math.max(tl.y, tr.y, bl.y, br.y);\n    return {\n        x1: xL,\n        y1: yT,\n        x2: xR,\n        y2: yT,\n        height: yB - yT,\n    };\n}\nexports.getCircumscribedAlignedRectangle = getCircumscribedAlignedRectangle;\n/**\n *\n * @param x1\n * @param y1\n * @param w\n * @param qx\n * @param qy\n * @param qw\n * @param qh\n */\nfunction squareCollidesWithQuad(x1, y1, w, qx, qy, qw, qh) {\n    return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + w > qy;\n}\nexports.squareCollidesWithQuad = squareCollidesWithQuad;\nfunction rectangleCollidesWithQuad(x1, y1, w, h, qx, qy, qw, qh) {\n    return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + h > qy;\n}\nexports.rectangleCollidesWithQuad = rectangleCollidesWithQuad;\nfunction pointIsInQuad(x, y, qx, qy, qw, qh) {\n    var xmp = qx + qw / 2, ymp = qy + qh / 2, top = y < ymp, left = x < xmp;\n    return top ? (left ? TOP_LEFT : TOP_RIGHT) : left ? BOTTOM_LEFT : BOTTOM_RIGHT;\n}\n/**\n * Helper functions that are not bound to the class so an external user\n * cannot mess with them.\n */\nfunction buildQuadrants(maxLevel, data) {\n    // [block, level]\n    var stack = [0, 0];\n    while (stack.length) {\n        var level = stack.pop(), block = stack.pop();\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\n        var x = data[block + X_OFFSET], y = data[block + Y_OFFSET], width = data[block + WIDTH_OFFSET], height = data[block + HEIGHT_OFFSET], hw = width / 2, hh = height / 2;\n        data[topLeftBlock + X_OFFSET] = x;\n        data[topLeftBlock + Y_OFFSET] = y;\n        data[topLeftBlock + WIDTH_OFFSET] = hw;\n        data[topLeftBlock + HEIGHT_OFFSET] = hh;\n        data[topRightBlock + X_OFFSET] = x + hw;\n        data[topRightBlock + Y_OFFSET] = y;\n        data[topRightBlock + WIDTH_OFFSET] = hw;\n        data[topRightBlock + HEIGHT_OFFSET] = hh;\n        data[bottomLeftBlock + X_OFFSET] = x;\n        data[bottomLeftBlock + Y_OFFSET] = y + hh;\n        data[bottomLeftBlock + WIDTH_OFFSET] = hw;\n        data[bottomLeftBlock + HEIGHT_OFFSET] = hh;\n        data[bottomRightBlock + X_OFFSET] = x + hw;\n        data[bottomRightBlock + Y_OFFSET] = y + hh;\n        data[bottomRightBlock + WIDTH_OFFSET] = hw;\n        data[bottomRightBlock + HEIGHT_OFFSET] = hh;\n        if (level < maxLevel - 1) {\n            stack.push(bottomRightBlock, level + 1);\n            stack.push(bottomLeftBlock, level + 1);\n            stack.push(topRightBlock, level + 1);\n            stack.push(topLeftBlock, level + 1);\n        }\n    }\n}\nfunction insertNode(maxLevel, data, containers, key, x, y, size) {\n    var x1 = x - size, y1 = y - size, w = size * 2;\n    var level = 0, block = 0;\n    while (true) {\n        // If we reached max level\n        if (level >= maxLevel) {\n            containers[block] = containers[block] || [];\n            containers[block].push(key);\n            return;\n        }\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\n        var collidingWithTopLeft = squareCollidesWithQuad(x1, y1, w, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithTopRight = squareCollidesWithQuad(x1, y1, w, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomLeft = squareCollidesWithQuad(x1, y1, w, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomRight = squareCollidesWithQuad(x1, y1, w, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);\n        var collisions = [\n            collidingWithTopLeft,\n            collidingWithTopRight,\n            collidingWithBottomLeft,\n            collidingWithBottomRight,\n        ].reduce(function (acc, current) {\n            if (current)\n                return acc + 1;\n            else\n                return acc;\n        }, 0);\n        // If we have no collision at root level, inject node in the outside block\n        if (collisions === 0 && level === 0) {\n            containers[OUTSIDE_BLOCK].push(key);\n            if (!hasWarnedTooMuchOutside && containers[OUTSIDE_BLOCK].length >= 5) {\n                hasWarnedTooMuchOutside = true;\n                console.warn(\"sigma/quadtree.insertNode: At least 5 nodes are outside the global quadtree zone. \" +\n                    \"You might have a problem with the normalization function or the custom bounding box.\");\n            }\n            return;\n        }\n        // If we don't have at least a collision but deeper, there is an issue\n        if (collisions === 0)\n            throw new Error(\"sigma/quadtree.insertNode: no collision (level: \".concat(level, \", key: \").concat(key, \", x: \").concat(x, \", y: \").concat(y, \", size: \").concat(size, \").\"));\n        // If we have 3 collisions, we have a geometry problem obviously\n        if (collisions === 3)\n            throw new Error(\"sigma/quadtree.insertNode: 3 impossible collisions (level: \".concat(level, \", key: \").concat(key, \", x: \").concat(x, \", y: \").concat(y, \", size: \").concat(size, \").\"));\n        // If we have more that one collision, we stop here and store the node\n        // in the relevant containers\n        if (collisions > 1) {\n            containers[block] = containers[block] || [];\n            containers[block].push(key);\n            return;\n        }\n        else {\n            level++;\n        }\n        // Else we recurse into the correct quads\n        if (collidingWithTopLeft)\n            block = topLeftBlock;\n        if (collidingWithTopRight)\n            block = topRightBlock;\n        if (collidingWithBottomLeft)\n            block = bottomLeftBlock;\n        if (collidingWithBottomRight)\n            block = bottomRightBlock;\n    }\n}\nfunction getNodesInAxisAlignedRectangleArea(maxLevel, data, containers, x1, y1, w, h) {\n    // [block, level]\n    var stack = [0, 0];\n    var collectedNodes = [];\n    var container;\n    while (stack.length) {\n        var level = stack.pop(), block = stack.pop();\n        // Collecting nodes\n        container = containers[block];\n        if (container)\n            (0, extend_1.default)(collectedNodes, container);\n        // If we reached max level\n        if (level >= maxLevel)\n            continue;\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\n        var collidingWithTopLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithTopRight = rectangleCollidesWithQuad(x1, y1, w, h, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomRight = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);\n        if (collidingWithTopLeft)\n            stack.push(topLeftBlock, level + 1);\n        if (collidingWithTopRight)\n            stack.push(topRightBlock, level + 1);\n        if (collidingWithBottomLeft)\n            stack.push(bottomLeftBlock, level + 1);\n        if (collidingWithBottomRight)\n            stack.push(bottomRightBlock, level + 1);\n    }\n    return collectedNodes;\n}\n/**\n * QuadTree class.\n *\n * @constructor\n * @param {object} boundaries - The graph boundaries.\n */\nvar QuadTree = /** @class */ (function () {\n    function QuadTree(params) {\n        var _a;\n        if (params === void 0) { params = {}; }\n        this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);\n        this.cache = null;\n        this.lastRectangle = null;\n        // Allocating the underlying byte array\n        var L = Math.pow(4, MAX_LEVEL);\n        this.data = new Float32Array(BLOCKS * ((4 * L - 1) / 3));\n        if (params.boundaries)\n            this.resize(params.boundaries);\n        else\n            this.resize({\n                x: 0,\n                y: 0,\n                width: 1,\n                height: 1,\n            });\n    }\n    QuadTree.prototype.add = function (key, x, y, size) {\n        insertNode(MAX_LEVEL, this.data, this.containers, key, x, y, size);\n        return this;\n    };\n    QuadTree.prototype.resize = function (boundaries) {\n        this.clear();\n        // Building the quadrants\n        this.data[X_OFFSET] = boundaries.x;\n        this.data[Y_OFFSET] = boundaries.y;\n        this.data[WIDTH_OFFSET] = boundaries.width;\n        this.data[HEIGHT_OFFSET] = boundaries.height;\n        buildQuadrants(MAX_LEVEL, this.data);\n    };\n    QuadTree.prototype.clear = function () {\n        var _a;\n        this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);\n        return this;\n    };\n    QuadTree.prototype.point = function (x, y) {\n        var nodes = this.containers[OUTSIDE_BLOCK].slice();\n        var block = 0, level = 0;\n        do {\n            if (this.containers[block])\n                (0, extend_1.default)(nodes, this.containers[block]);\n            var quad = pointIsInQuad(x, y, this.data[block + X_OFFSET], this.data[block + Y_OFFSET], this.data[block + WIDTH_OFFSET], this.data[block + HEIGHT_OFFSET]);\n            block = 4 * block + quad * BLOCKS;\n            level++;\n        } while (level <= MAX_LEVEL);\n        return nodes;\n    };\n    QuadTree.prototype.rectangle = function (x1, y1, x2, y2, height) {\n        var lr = this.lastRectangle;\n        if (lr && x1 === lr.x1 && x2 === lr.x2 && y1 === lr.y1 && y2 === lr.y2 && height === lr.height) {\n            return this.cache;\n        }\n        this.lastRectangle = {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            height: height,\n        };\n        // If the rectangle is shifted, we use the smallest aligned rectangle that contains the shifted one:\n        if (!isRectangleAligned(this.lastRectangle))\n            this.lastRectangle = getCircumscribedAlignedRectangle(this.lastRectangle);\n        this.cache = getNodesInAxisAlignedRectangleArea(MAX_LEVEL, this.data, this.containers, x1, y1, Math.abs(x1 - x2) || Math.abs(y1 - y2), height);\n        // Add all the nodes in the outside block, since they might be relevant, and since they should be very few:\n        (0, extend_1.default)(this.cache, this.containers[OUTSIDE_BLOCK]);\n        return this.cache;\n    };\n    return QuadTree;\n}());\nexports.default = QuadTree;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.edgeLabelsToDisplayFromNodes = exports.LabelGrid = void 0;\n/**\n * Class representing a single candidate for the label grid selection.\n *\n * It also describes a deterministic way to compare two candidates to assess\n * which one is better.\n */\nvar LabelCandidate = /** @class */ (function () {\n    function LabelCandidate(key, size) {\n        this.key = key;\n        this.size = size;\n    }\n    LabelCandidate.compare = function (first, second) {\n        // First we compare by size\n        if (first.size > second.size)\n            return -1;\n        if (first.size < second.size)\n            return 1;\n        // Then since no two nodes can have the same key, we use it to\n        // deterministically tie-break by key\n        if (first.key > second.key)\n            return 1;\n        // NOTE: this comparator cannot return 0\n        return -1;\n    };\n    return LabelCandidate;\n}());\n/**\n * Class representing a 2D spatial grid divided into constant-size cells.\n */\nvar LabelGrid = /** @class */ (function () {\n    function LabelGrid() {\n        this.width = 0;\n        this.height = 0;\n        this.cellSize = 0;\n        this.columns = 0;\n        this.rows = 0;\n        this.cells = {};\n    }\n    LabelGrid.prototype.resizeAndClear = function (dimensions, cellSize) {\n        this.width = dimensions.width;\n        this.height = dimensions.height;\n        this.cellSize = cellSize;\n        this.columns = Math.ceil(dimensions.width / cellSize);\n        this.rows = Math.ceil(dimensions.height / cellSize);\n        this.cells = {};\n    };\n    LabelGrid.prototype.getIndex = function (pos) {\n        var xIndex = Math.floor(pos.x / this.cellSize);\n        var yIndex = Math.floor(pos.y / this.cellSize);\n        return yIndex * this.columns + xIndex;\n    };\n    LabelGrid.prototype.add = function (key, size, pos) {\n        var candidate = new LabelCandidate(key, size);\n        var index = this.getIndex(pos);\n        var cell = this.cells[index];\n        if (!cell) {\n            cell = [];\n            this.cells[index] = cell;\n        }\n        cell.push(candidate);\n    };\n    LabelGrid.prototype.organize = function () {\n        for (var k in this.cells) {\n            var cell = this.cells[k];\n            cell.sort(LabelCandidate.compare);\n        }\n    };\n    LabelGrid.prototype.getLabelsToDisplay = function (ratio, density) {\n        // TODO: work on visible nodes to optimize? ^ -> threshold outside so that memoization works?\n        // TODO: adjust threshold lower, but increase cells a bit?\n        // TODO: hunt for geom issue in disguise\n        // TODO: memoize while ratio does not move. method to force recompute\n        var cellArea = this.cellSize * this.cellSize;\n        var scaledCellArea = cellArea / ratio / ratio;\n        var scaledDensity = (scaledCellArea * density) / cellArea;\n        var labelsToDisplayPerCell = Math.ceil(scaledDensity);\n        var labels = [];\n        for (var k in this.cells) {\n            var cell = this.cells[k];\n            for (var i = 0; i < Math.min(labelsToDisplayPerCell, cell.length); i++) {\n                labels.push(cell[i].key);\n            }\n        }\n        return labels;\n    };\n    return LabelGrid;\n}());\nexports.LabelGrid = LabelGrid;\n/**\n * Label heuristic selecting edge labels to display, based on displayed node\n * labels\n *\n * @param  {object} params                 - Parameters:\n * @param  {Set}      displayedNodeLabels  - Currently displayed node labels.\n * @param  {Set}      highlightedNodes     - Highlighted nodes.\n * @param  {Graph}    graph                - The rendered graph.\n * @param  {string}   hoveredNode          - Hovered node (optional)\n * @return {Array}                         - The selected labels.\n */\nfunction edgeLabelsToDisplayFromNodes(params) {\n    var graph = params.graph, hoveredNode = params.hoveredNode, highlightedNodes = params.highlightedNodes, displayedNodeLabels = params.displayedNodeLabels;\n    var worthyEdges = [];\n    // TODO: the code below can be optimized using #.forEach and batching the code per adj\n    // We should display an edge's label if:\n    //   - Any of its extremities is highlighted or hovered\n    //   - Both of its extremities has its label shown\n    graph.forEachEdge(function (edge, _, source, target) {\n        if (source === hoveredNode ||\n            target === hoveredNode ||\n            highlightedNodes.has(source) ||\n            highlightedNodes.has(target) ||\n            (displayedNodeLabels.has(source) && displayedNodeLabels.has(target))) {\n            worthyEdges.push(edge);\n        }\n    });\n    return worthyEdges;\n}\nexports.edgeLabelsToDisplayFromNodes = edgeLabelsToDisplayFromNodes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction drawLabel(context, data, settings) {\n    if (!data.label)\n        return;\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight, color = settings.labelColor.attribute\n        ? data[settings.labelColor.attribute] || settings.labelColor.color || \"#000\"\n        : settings.labelColor.color;\n    context.fillStyle = color;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    context.fillText(data.label, data.x + data.size + 3, data.y + size / 3);\n}\nexports.default = drawLabel;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar label_1 = __importDefault(require(\"./label\"));\n/**\n * Draw an hovered node.\n * - if there is no label => display a shadow on the node\n * - if the label box is bigger than node size => display a label box that contains the node with a shadow\n * - else node with shadow and the label box\n */\nfunction drawHover(context, data, settings) {\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    // Then we draw the label background\n    context.fillStyle = \"#FFF\";\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 8;\n    context.shadowColor = \"#000\";\n    var PADDING = 2;\n    if (typeof data.label === \"string\") {\n        var textWidth = context.measureText(data.label).width, boxWidth = Math.round(textWidth + 5), boxHeight = Math.round(size + 2 * PADDING), radius = Math.max(data.size, size / 2) + PADDING;\n        var angleRadian = Math.asin(boxHeight / 2 / radius);\n        var xDeltaCoord = Math.sqrt(Math.abs(Math.pow(radius, 2) - Math.pow(boxHeight / 2, 2)));\n        context.beginPath();\n        context.moveTo(data.x + xDeltaCoord, data.y + boxHeight / 2);\n        context.lineTo(data.x + radius + boxWidth, data.y + boxHeight / 2);\n        context.lineTo(data.x + radius + boxWidth, data.y - boxHeight / 2);\n        context.lineTo(data.x + xDeltaCoord, data.y - boxHeight / 2);\n        context.arc(data.x, data.y, radius, angleRadian, -angleRadian);\n        context.closePath();\n        context.fill();\n    }\n    else {\n        context.beginPath();\n        context.arc(data.x, data.y, data.size + PADDING, 0, Math.PI * 2);\n        context.closePath();\n        context.fill();\n    }\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 0;\n    // And finally we draw the label\n    (0, label_1.default)(context, data, settings);\n}\nexports.default = drawHover;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction drawEdgeLabel(context, edgeData, sourceData, targetData, settings) {\n    var size = settings.edgeLabelSize, font = settings.edgeLabelFont, weight = settings.edgeLabelWeight, color = settings.edgeLabelColor.attribute\n        ? edgeData[settings.edgeLabelColor.attribute] || settings.edgeLabelColor.color || \"#000\"\n        : settings.edgeLabelColor.color;\n    var label = edgeData.label;\n    if (!label)\n        return;\n    context.fillStyle = color;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    // Computing positions without considering nodes sizes:\n    var sSize = sourceData.size;\n    var tSize = targetData.size;\n    var sx = sourceData.x;\n    var sy = sourceData.y;\n    var tx = targetData.x;\n    var ty = targetData.y;\n    var cx = (sx + tx) / 2;\n    var cy = (sy + ty) / 2;\n    var dx = tx - sx;\n    var dy = ty - sy;\n    var d = Math.sqrt(dx * dx + dy * dy);\n    if (d < sSize + tSize)\n        return;\n    // Adding nodes sizes:\n    sx += (dx * sSize) / d;\n    sy += (dy * sSize) / d;\n    tx -= (dx * tSize) / d;\n    ty -= (dy * tSize) / d;\n    cx = (sx + tx) / 2;\n    cy = (sy + ty) / 2;\n    dx = tx - sx;\n    dy = ty - sy;\n    d = Math.sqrt(dx * dx + dy * dy);\n    // Handling ellipsis\n    var textLength = context.measureText(label).width;\n    if (textLength > d) {\n        var ellipsis = \"…\";\n        label = label + ellipsis;\n        textLength = context.measureText(label).width;\n        while (textLength > d && label.length > 1) {\n            label = label.slice(0, -2) + ellipsis;\n            textLength = context.measureText(label).width;\n        }\n        if (label.length < 4)\n            return;\n    }\n    var angle;\n    if (dx > 0) {\n        if (dy > 0)\n            angle = Math.acos(dx / d);\n        else\n            angle = Math.asin(dy / d);\n    }\n    else {\n        if (dy > 0)\n            angle = Math.acos(dx / d) + Math.PI;\n        else\n            angle = Math.asin(dx / d) + Math.PI / 2;\n    }\n    context.save();\n    context.translate(cx, cy);\n    context.rotate(angle);\n    context.fillText(label, -textLength / 2, edgeData.size / 2 + size);\n    context.restore();\n}\nexports.default = drawEdgeLabel;\n", "\"use strict\";\n/**\n * Sigma.js Shader Utils\n * ======================\n *\n * Code used to load sigma's shaders.\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadProgram = exports.loadFragmentShader = exports.loadVertexShader = void 0;\n/**\n * Function used to load a shader.\n */\nfunction loadShader(type, gl, source) {\n    var glType = type === \"VERTEX\" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;\n    // Creating the shader\n    var shader = gl.createShader(glType);\n    if (shader === null) {\n        throw new Error(\"loadShader: error while creating the shader\");\n    }\n    // Loading source\n    gl.shaderSource(shader, source);\n    // Compiling the shader\n    gl.compileShader(shader);\n    // Retrieving compilation status\n    var successfullyCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    // Throwing if something went awry\n    if (!successfullyCompiled) {\n        var infoLog = gl.getShaderInfoLog(shader);\n        gl.deleteShader(shader);\n        throw new Error(\"loadShader: error while compiling the shader:\\n\".concat(infoLog, \"\\n\").concat(source));\n    }\n    return shader;\n}\nfunction loadVertexShader(gl, source) {\n    return loadShader(\"VERTEX\", gl, source);\n}\nexports.loadVertexShader = loadVertexShader;\nfunction loadFragmentShader(gl, source) {\n    return loadShader(\"FRAGMENT\", gl, source);\n}\nexports.loadFragmentShader = loadFragmentShader;\n/**\n * Function used to load a program.\n */\nfunction loadProgram(gl, shaders) {\n    var program = gl.createProgram();\n    if (program === null) {\n        throw new Error(\"loadProgram: error while creating the program.\");\n    }\n    var i, l;\n    // Attaching the shaders\n    for (i = 0, l = shaders.length; i < l; i++)\n        gl.attachShader(program, shaders[i]);\n    gl.linkProgram(program);\n    // Checking status\n    var successfullyLinked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!successfullyLinked) {\n        gl.deleteProgram(program);\n        throw new Error(\"loadProgram: error while linking the program.\");\n    }\n    return program;\n}\nexports.loadProgram = loadProgram;\n", "\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Program = exports.AbstractProgram = void 0;\nvar utils_1 = require(\"../../../../utils\");\nvar utils_2 = require(\"../../shaders/utils\");\nvar SIZE_FACTOR_PER_ATTRIBUTE_TYPE = (_a = {},\n    _a[WebGL2RenderingContext.BOOL] = 1,\n    _a[WebGL2RenderingContext.BYTE] = 1,\n    _a[WebGL2RenderingContext.UNSIGNED_BYTE] = 1,\n    _a[WebGL2RenderingContext.SHORT] = 2,\n    _a[WebGL2RenderingContext.UNSIGNED_SHORT] = 2,\n    _a[WebGL2RenderingContext.INT] = 4,\n    _a[WebGL2RenderingContext.UNSIGNED_INT] = 4,\n    _a[WebGL2RenderingContext.FLOAT] = 4,\n    _a);\nvar AbstractProgram = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    function AbstractProgram(_gl, _renderer) {\n    }\n    return AbstractProgram;\n}());\nexports.AbstractProgram = AbstractProgram;\nvar Program = /** @class */ (function () {\n    function Program(gl, renderer) {\n        var _this = this;\n        this.array = new Float32Array();\n        this.indicesArray = null;\n        this.uniformLocations = {};\n        this.attributeLocations = {};\n        this.capacity = 0;\n        this.verticesCount = 0;\n        // Reading program definition\n        var definition = this.getDefinition();\n        this.VERTICES = definition.VERTICES;\n        this.ARRAY_ITEMS_PER_VERTEX = definition.ARRAY_ITEMS_PER_VERTEX;\n        this.VERTEX_SHADER_SOURCE = definition.VERTEX_SHADER_SOURCE;\n        this.FRAGMENT_SHADER_SOURCE = definition.FRAGMENT_SHADER_SOURCE;\n        this.UNIFORMS = definition.UNIFORMS;\n        this.ATTRIBUTES = definition.ATTRIBUTES;\n        // Computing stride\n        this.STRIDE = this.VERTICES * this.ARRAY_ITEMS_PER_VERTEX;\n        // Members\n        this.gl = gl;\n        this.renderer = renderer;\n        // Webgl buffers\n        var buffer = gl.createBuffer();\n        if (buffer === null)\n            throw new Error(\"Program: error while creating the webgl buffer.\");\n        this.buffer = buffer;\n        var indicesBuffer = gl.createBuffer();\n        if (indicesBuffer === null)\n            throw new Error(\"Program: error while creating the webgl indices buffer.\");\n        this.indicesBuffer = indicesBuffer;\n        // Shaders and program\n        this.vertexShader = (0, utils_2.loadVertexShader)(this.gl, this.VERTEX_SHADER_SOURCE);\n        this.fragmentShader = (0, utils_2.loadFragmentShader)(this.gl, this.FRAGMENT_SHADER_SOURCE);\n        this.program = (0, utils_2.loadProgram)(this.gl, [this.vertexShader, this.fragmentShader]);\n        // Indices\n        this.canUse32BitsIndices = (0, utils_1.canUse32BitsIndices)(this.gl);\n        this.indicesType = this.canUse32BitsIndices ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n        this.IndicesArray = this.canUse32BitsIndices ? Uint32Array : Uint16Array;\n        // Initializing locations\n        this.UNIFORMS.forEach(function (uniformName) {\n            var location = _this.gl.getUniformLocation(_this.program, uniformName);\n            if (location === null)\n                throw new Error(\"Program: error while getting location for uniform \\\"\".concat(uniformName, \"\\\".\"));\n            _this.uniformLocations[uniformName] = location;\n        });\n        this.ATTRIBUTES.forEach(function (attr) {\n            var location = _this.gl.getAttribLocation(_this.program, attr.name);\n            if (location === -1)\n                throw new Error(\"Program: error while getting location for attribute \\\"\".concat(attr.name, \"\\\".\"));\n            _this.attributeLocations[attr.name] = location;\n        });\n    }\n    Program.prototype.bind = function () {\n        var _this = this;\n        var gl = this.gl;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        if (this.indicesArray) {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n        }\n        for (var attributeName in this.attributeLocations) {\n            gl.enableVertexAttribArray(this.attributeLocations[attributeName]);\n        }\n        var offset = 0;\n        this.ATTRIBUTES.forEach(function (attr) {\n            var location = _this.attributeLocations[attr.name];\n            gl.vertexAttribPointer(location, attr.size, attr.type, attr.normalized || false, _this.ARRAY_ITEMS_PER_VERTEX * Float32Array.BYTES_PER_ELEMENT, offset);\n            var sizeFactor = SIZE_FACTOR_PER_ATTRIBUTE_TYPE[attr.type];\n            if (typeof sizeFactor !== \"number\")\n                throw new Error(\"Program.bind: yet unsupported attribute type \\\"\".concat(attr.type, \"\\\"!\"));\n            offset += attr.size * sizeFactor;\n        });\n    };\n    Program.prototype.bufferData = function () {\n        var gl = this.gl;\n        this.gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n        if (this.indicesArray) {\n            this.gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indicesArray, gl.STATIC_DRAW);\n        }\n    };\n    // NOTE: implementing `reallocateIndices` is optional\n    Program.prototype.reallocateIndices = function () {\n        return;\n    };\n    Program.prototype.reallocate = function (capacity) {\n        // If desired capacity has not changed we do nothing\n        // NOTE: it's possible here to implement more subtle reallocation schemes\n        // when the number of rendered items increase or decrease\n        if (capacity === this.capacity)\n            return;\n        this.capacity = capacity;\n        this.verticesCount = this.VERTICES * capacity;\n        this.array = new Float32Array(this.verticesCount * this.ARRAY_ITEMS_PER_VERTEX);\n        if (typeof this.reallocateIndices === \"function\")\n            this.reallocateIndices();\n    };\n    Program.prototype.hasNothingToRender = function () {\n        return this.verticesCount === 0;\n    };\n    Program.prototype.render = function (params) {\n        if (this.hasNothingToRender())\n            return;\n        this.bind();\n        this.bufferData();\n        this.gl.useProgram(this.program);\n        this.draw(params);\n    };\n    return Program;\n}());\nexports.Program = Program;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNodeCompoundProgram = exports.NodeProgram = exports.AbstractNodeProgram = void 0;\nvar program_1 = require(\"./program\");\nvar AbstractNodeProgram = /** @class */ (function (_super) {\n    __extends(AbstractNodeProgram, _super);\n    function AbstractNodeProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AbstractNodeProgram;\n}(program_1.AbstractProgram));\nexports.AbstractNodeProgram = AbstractNodeProgram;\nvar NodeProgram = /** @class */ (function (_super) {\n    __extends(NodeProgram, _super);\n    function NodeProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NodeProgram.prototype.process = function (offset, data) {\n        var i = offset * this.STRIDE;\n        // NOTE: dealing with hidden items automatically\n        if (data.hidden) {\n            for (var l = i + this.STRIDE; i < l; i++) {\n                this.array[i] = 0;\n            }\n            return;\n        }\n        return this.processVisibleItem(i, data);\n    };\n    return NodeProgram;\n}(program_1.Program));\nexports.NodeProgram = NodeProgram;\n/**\n * Helper function combining two or more programs into a single compound one.\n * Note that this is more a quick & easy way to combine program than a really\n * performant option. More performant programs can be written entirely.\n *\n * @param  {array}    programClasses - Program classes to combine.\n * @return {function}\n */\nfunction createNodeCompoundProgram(programClasses) {\n    return /** @class */ (function () {\n        function NodeCompoundProgram(gl, renderer) {\n            this.programs = programClasses.map(function (Program) {\n                return new Program(gl, renderer);\n            });\n        }\n        NodeCompoundProgram.prototype.reallocate = function (capacity) {\n            this.programs.forEach(function (program) { return program.reallocate(capacity); });\n        };\n        NodeCompoundProgram.prototype.process = function (offset, data) {\n            this.programs.forEach(function (program) { return program.process(offset, data); });\n        };\n        NodeCompoundProgram.prototype.render = function (params) {\n            this.programs.forEach(function (program) { return program.render(params); });\n        };\n        return NodeCompoundProgram;\n    }());\n}\nexports.createNodeCompoundProgram = createNodeCompoundProgram;\n", "(()=>{\"use strict\";var o={d:(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o:(o,t)=>Object.prototype.hasOwnProperty.call(o,t),r:o=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(o,\"__esModule\",{value:!0})}},t={};o.r(t),o.d(t,{default:()=>e});const e=\"attribute vec2 a_position;\\nattribute float a_size;\\nattribute vec4 a_color;\\n\\nuniform float u_sizeRatio;\\nuniform float u_pixelRatio;\\nuniform mat3 u_matrix;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  gl_Position = vec4(\\n    (u_matrix * vec3(a_position, 1)).xy,\\n    0,\\n    1\\n  );\\n\\n  // Multiply the point size twice:\\n  //  - x SCALING_RATIO to correct the canvas scaling\\n  //  - x 2 to correct the formulae\\n  gl_PointSize = a_size / u_sizeRatio * u_pixelRatio * 2.0;\\n\\n  v_border = (0.5 / a_size) * u_sizeRatio;\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=t})();", "(()=>{\"use strict\";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>o});const o=\"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float radius = 0.5;\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  vec2 m = gl_PointCoord - vec2(0.5, 0.5);\\n  float dist = radius - length(m);\\n\\n  float t = 0.0;\\n  if (dist > v_border)\\n    t = 1.0;\\n  else if (dist > 0.0)\\n    t = dist / v_border;\\n\\n  gl_FragColor = mix(transparent, v_color, t);\\n}\\n\";module.exports=n})();", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils\");\nvar node_1 = require(\"./common/node\");\nvar node_point_vert_glsl_1 = __importDefault(require(\"../shaders/node.point.vert.glsl.js\"));\nvar node_point_frag_glsl_1 = __importDefault(require(\"../shaders/node.point.frag.glsl.js\"));\nvar UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;\nvar UNIFORMS = [\"u_sizeRatio\", \"u_pixelRatio\", \"u_matrix\"];\nvar NodePointProgram = /** @class */ (function (_super) {\n    __extends(NodePointProgram, _super);\n    function NodePointProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NodePointProgram.prototype.getDefinition = function () {\n        return {\n            VERTICES: 1,\n            ARRAY_ITEMS_PER_VERTEX: 4,\n            VERTEX_SHADER_SOURCE: node_point_vert_glsl_1.default,\n            FRAGMENT_SHADER_SOURCE: node_point_frag_glsl_1.default,\n            UNIFORMS: UNIFORMS,\n            ATTRIBUTES: [\n                { name: \"a_position\", size: 2, type: FLOAT },\n                { name: \"a_size\", size: 1, type: FLOAT },\n                { name: \"a_color\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n            ],\n        };\n    };\n    NodePointProgram.prototype.processVisibleItem = function (i, data) {\n        var array = this.array;\n        array[i++] = data.x;\n        array[i++] = data.y;\n        array[i++] = data.size;\n        array[i] = (0, utils_1.floatColor)(data.color);\n    };\n    NodePointProgram.prototype.draw = function (params) {\n        var gl = this.gl;\n        var _a = this.uniformLocations, u_sizeRatio = _a.u_sizeRatio, u_pixelRatio = _a.u_pixelRatio, u_matrix = _a.u_matrix;\n        gl.uniform1f(u_sizeRatio, params.sizeRatio);\n        gl.uniform1f(u_pixelRatio, params.pixelRatio);\n        gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n        gl.drawArrays(gl.POINTS, 0, this.verticesCount);\n    };\n    return NodePointProgram;\n}(node_1.NodeProgram));\nexports.default = NodePointProgram;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createEdgeCompoundProgram = exports.EdgeProgram = exports.AbstractEdgeProgram = void 0;\nvar program_1 = require(\"./program\");\nvar AbstractEdgeProgram = /** @class */ (function (_super) {\n    __extends(AbstractEdgeProgram, _super);\n    function AbstractEdgeProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AbstractEdgeProgram;\n}(program_1.AbstractProgram));\nexports.AbstractEdgeProgram = AbstractEdgeProgram;\nvar EdgeProgram = /** @class */ (function (_super) {\n    __extends(EdgeProgram, _super);\n    function EdgeProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EdgeProgram.prototype.process = function (offset, sourceData, targetData, data) {\n        var i = offset * this.STRIDE;\n        // NOTE: dealing with hidden items automatically\n        if (data.hidden || sourceData.hidden || targetData.hidden) {\n            for (var l = i + this.STRIDE; i < l; i++) {\n                this.array[i] = 0;\n            }\n            return;\n        }\n        return this.processVisibleItem(i, sourceData, targetData, data);\n    };\n    return EdgeProgram;\n}(program_1.Program));\nexports.EdgeProgram = EdgeProgram;\n/**\n * Helper function combining two or more programs into a single compound one.\n * Note that this is more a quick & easy way to combine program than a really\n * performant option. More performant programs can be written entirely.\n *\n * @param  {array}    programClasses - Program classes to combine.\n * @return {function}\n */\nfunction createEdgeCompoundProgram(programClasses) {\n    return /** @class */ (function () {\n        function EdgeCompoundProgram(gl, renderer) {\n            this.programs = programClasses.map(function (Program) {\n                return new Program(gl, renderer);\n            });\n        }\n        EdgeCompoundProgram.prototype.reallocate = function (capacity) {\n            this.programs.forEach(function (program) { return program.reallocate(capacity); });\n        };\n        EdgeCompoundProgram.prototype.process = function (offset, sourceData, targetData, data) {\n            this.programs.forEach(function (program) { return program.process(offset, sourceData, targetData, data); });\n        };\n        EdgeCompoundProgram.prototype.render = function (params) {\n            this.programs.forEach(function (program) { return program.render(params); });\n        };\n        return EdgeCompoundProgram;\n    }());\n}\nexports.createEdgeCompoundProgram = createEdgeCompoundProgram;\n", "(()=>{\"use strict\";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>o});const o='attribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute vec2 a_position;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sizeRatio;\\nuniform float u_zoomRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // We require edges to be at least `minThickness` pixels thick *on screen*\\n  // (so we need to compensate the size ratio):\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n\\n  // Then, we need to retrieve the normalized thickness of the edge in the WebGL\\n  // referential (in a ([0, 1], [0, 1]) space), using our \"magic\" correction\\n  // ratio:\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * webGLThickness, 1)).xy, 0, 1);\\n\\n  // For the fragment shader though, we need a thickness that takes the \"magic\"\\n  // correction ratio into account (as in webGLThickness), but so that the\\n  // antialiasing effect does not depend on the zoom level. So here\\'s yet\\n  // another thickness version:\\n  v_thickness = webGLThickness / u_zoomRatio;\\n\\n  v_normal = unitNormal;\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n';module.exports=n})();", "(()=>{\"use strict\";var e={d:(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>t});const t=\"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float feather = 0.001;\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  float dist = length(v_normal) * v_thickness;\\n\\n  float t = smoothstep(\\n    v_thickness - feather,\\n    v_thickness,\\n    dist\\n  );\\n\\n  gl_FragColor = mix(v_color, transparent, t);\\n}\\n\";module.exports=n})();", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils\");\nvar edge_1 = require(\"./common/edge\");\nvar edge_rectangle_vert_glsl_1 = __importDefault(require(\"../shaders/edge.rectangle.vert.glsl.js\"));\nvar edge_rectangle_frag_glsl_1 = __importDefault(require(\"../shaders/edge.rectangle.frag.glsl.js\"));\nvar UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;\nvar UNIFORMS = [\"u_matrix\", \"u_zoomRatio\", \"u_sizeRatio\", \"u_correctionRatio\"];\nvar EdgeRectangleProgram = /** @class */ (function (_super) {\n    __extends(EdgeRectangleProgram, _super);\n    function EdgeRectangleProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EdgeRectangleProgram.prototype.getDefinition = function () {\n        return {\n            VERTICES: 4,\n            ARRAY_ITEMS_PER_VERTEX: 5,\n            VERTEX_SHADER_SOURCE: edge_rectangle_vert_glsl_1.default,\n            FRAGMENT_SHADER_SOURCE: edge_rectangle_frag_glsl_1.default,\n            UNIFORMS: UNIFORMS,\n            ATTRIBUTES: [\n                { name: \"a_position\", size: 2, type: FLOAT },\n                { name: \"a_normal\", size: 2, type: FLOAT },\n                { name: \"a_color\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n            ],\n        };\n    };\n    EdgeRectangleProgram.prototype.reallocateIndices = function () {\n        var l = this.verticesCount;\n        var size = l + l / 2;\n        var indices = new this.IndicesArray(size);\n        for (var i = 0, c = 0; i < l; i += 4) {\n            indices[c++] = i;\n            indices[c++] = i + 1;\n            indices[c++] = i + 2;\n            indices[c++] = i + 2;\n            indices[c++] = i + 1;\n            indices[c++] = i + 3;\n        }\n        this.indicesArray = indices;\n    };\n    EdgeRectangleProgram.prototype.processVisibleItem = function (i, sourceData, targetData, data) {\n        var thickness = data.size || 1;\n        var x1 = sourceData.x;\n        var y1 = sourceData.y;\n        var x2 = targetData.x;\n        var y2 = targetData.y;\n        var color = (0, utils_1.floatColor)(data.color);\n        // Computing normals\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        var len = dx * dx + dy * dy;\n        var n1 = 0;\n        var n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len * thickness;\n            n2 = dx * len * thickness;\n        }\n        var array = this.array;\n        // First point\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = color;\n        // First point flipped\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = color;\n        // Second point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = color;\n        // Second point flipped\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i] = color;\n    };\n    EdgeRectangleProgram.prototype.draw = function (params) {\n        var gl = this.gl;\n        var _a = this.uniformLocations, u_matrix = _a.u_matrix, u_zoomRatio = _a.u_zoomRatio, u_correctionRatio = _a.u_correctionRatio, u_sizeRatio = _a.u_sizeRatio;\n        gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n        gl.uniform1f(u_zoomRatio, params.zoomRatio);\n        gl.uniform1f(u_sizeRatio, params.sizeRatio);\n        gl.uniform1f(u_correctionRatio, params.correctionRatio);\n        if (!this.indicesArray)\n            throw new Error(\"EdgeRectangleProgram: indicesArray should be allocated when drawing!\");\n        gl.drawElements(gl.TRIANGLES, this.indicesArray.length, this.indicesType, 0);\n    };\n    return EdgeRectangleProgram;\n}(edge_1.EdgeProgram));\nexports.default = EdgeRectangleProgram;\n", "(()=>{\"use strict\";var e={d:(a,n)=>{for(var t in n)e.o(n,t)&&!e.o(a,t)&&Object.defineProperty(a,t,{enumerable:!0,get:n[t]})},o:(e,a)=>Object.prototype.hasOwnProperty.call(e,a),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},a={};e.r(a),e.d(a,{default:()=>n});const n=\"attribute vec2 a_position;\\nattribute vec2 a_normal;\\nattribute float a_radius;\\nattribute vec4 a_color;\\nattribute vec3 a_barycentric;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sizeRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadWidthLengthRatio = 0.66;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl and\\n  // edge.clamped.vert.glsl. Please read it to get better comments on what's\\n  // happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n  float webGLNodeRadius = a_radius * 2.0 * u_correctionRatio / u_sizeRatio;\\n  float webGLArrowHeadLength = webGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n  float webGLArrowHeadHalfWidth = webGLArrowHeadLength * arrowHeadWidthLengthRatio / 2.0;\\n\\n  float da = a_barycentric.x;\\n  float db = a_barycentric.y;\\n  float dc = a_barycentric.z;\\n\\n  vec2 delta = vec2(\\n      da * (webGLNodeRadius * unitNormal.y)\\n    + db * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y + webGLArrowHeadHalfWidth * unitNormal.x)\\n    + dc * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y - webGLArrowHeadHalfWidth * unitNormal.x),\\n\\n      da * (-webGLNodeRadius * unitNormal.x)\\n    + db * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x + webGLArrowHeadHalfWidth * unitNormal.y)\\n    + dc * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x - webGLArrowHeadHalfWidth * unitNormal.y)\\n  );\\n\\n  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;\\n\\n  gl_Position = vec4(position, 0, 1);\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=a})();", "(()=>{\"use strict\";var e={d:(o,r)=>{for(var t in r)e.o(r,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:r[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>r});const r=\"precision mediump float;\\n\\nvarying vec4 v_color;\\n\\nvoid main(void) {\\n  gl_FragColor = v_color;\\n}\\n\";module.exports=o})();", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils\");\nvar edge_1 = require(\"./common/edge\");\nvar edge_arrowHead_vert_glsl_1 = __importDefault(require(\"../shaders/edge.arrowHead.vert.glsl.js\"));\nvar edge_arrowHead_frag_glsl_1 = __importDefault(require(\"../shaders/edge.arrowHead.frag.glsl.js\"));\nvar UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;\nvar UNIFORMS = [\"u_matrix\", \"u_sizeRatio\", \"u_correctionRatio\"];\nvar EdgeArrowHeadProgram = /** @class */ (function (_super) {\n    __extends(EdgeArrowHeadProgram, _super);\n    function EdgeArrowHeadProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EdgeArrowHeadProgram.prototype.getDefinition = function () {\n        return {\n            VERTICES: 3,\n            ARRAY_ITEMS_PER_VERTEX: 9,\n            VERTEX_SHADER_SOURCE: edge_arrowHead_vert_glsl_1.default,\n            FRAGMENT_SHADER_SOURCE: edge_arrowHead_frag_glsl_1.default,\n            UNIFORMS: UNIFORMS,\n            ATTRIBUTES: [\n                { name: \"a_position\", size: 2, type: FLOAT },\n                { name: \"a_normal\", size: 2, type: FLOAT },\n                { name: \"a_radius\", size: 1, type: FLOAT },\n                { name: \"a_color\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n                { name: \"a_barycentric\", size: 3, type: FLOAT },\n            ],\n        };\n    };\n    EdgeArrowHeadProgram.prototype.processVisibleItem = function (i, sourceData, targetData, data) {\n        var thickness = data.size || 1;\n        var radius = targetData.size || 1;\n        var x1 = sourceData.x;\n        var y1 = sourceData.y;\n        var x2 = targetData.x;\n        var y2 = targetData.y;\n        var color = (0, utils_1.floatColor)(data.color);\n        // Computing normals\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        var len = dx * dx + dy * dy;\n        var n1 = 0;\n        var n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len * thickness;\n            n2 = dx * len * thickness;\n        }\n        var array = this.array;\n        // First point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = radius;\n        array[i++] = color;\n        array[i++] = 1;\n        array[i++] = 0;\n        array[i++] = 0;\n        // Second point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = radius;\n        array[i++] = color;\n        array[i++] = 0;\n        array[i++] = 1;\n        array[i++] = 0;\n        // Third point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = radius;\n        array[i++] = color;\n        array[i++] = 0;\n        array[i++] = 0;\n        array[i] = 1;\n    };\n    EdgeArrowHeadProgram.prototype.draw = function (params) {\n        var gl = this.gl;\n        var _a = this.uniformLocations, u_matrix = _a.u_matrix, u_sizeRatio = _a.u_sizeRatio, u_correctionRatio = _a.u_correctionRatio;\n        gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n        gl.uniform1f(u_sizeRatio, params.sizeRatio);\n        gl.uniform1f(u_correctionRatio, params.correctionRatio);\n        gl.drawArrays(gl.TRIANGLES, 0, this.verticesCount);\n    };\n    return EdgeArrowHeadProgram;\n}(edge_1.EdgeProgram));\nexports.default = EdgeArrowHeadProgram;\n", "(()=>{\"use strict\";var e={d:(o,n)=>{for(var t in n)e.o(n,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:n[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>n});const n=\"attribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute vec2 a_position;\\nattribute float a_radius;\\n\\nuniform mat3 u_matrix;\\nuniform float u_zoomRatio;\\nuniform float u_sizeRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl. Please read it to\\n  // get better comments on what's happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n\\n  // Here, we move the point to leave space for the arrow head:\\n  float direction = sign(a_radius);\\n  float webGLNodeRadius = direction * a_radius * 2.0 * u_correctionRatio / u_sizeRatio;\\n  float webGLArrowHeadLength = webGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n\\n  vec2 compensationVector = vec2(-direction * unitNormal.y, direction * unitNormal.x) * (webGLNodeRadius + webGLArrowHeadLength);\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * webGLThickness + compensationVector, 1)).xy, 0, 1);\\n\\n  v_thickness = webGLThickness / u_zoomRatio;\\n\\n  v_normal = unitNormal;\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=o})();", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js WebGL Renderer Edge Program\n * =====================================\n *\n * Program rendering edges as thick lines but with a twist: the end of edge\n * does not sit in the middle of target node but instead stays by some margin.\n *\n * This is useful when combined with arrows to draw directed edges.\n * @module\n */\nvar edge_rectangle_1 = __importDefault(require(\"./edge.rectangle\"));\nvar edge_clamped_vert_glsl_1 = __importDefault(require(\"../shaders/edge.clamped.vert.glsl.js\"));\nvar utils_1 = require(\"../../../utils\");\nvar UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;\nvar EdgeClampedProgram = /** @class */ (function (_super) {\n    __extends(EdgeClampedProgram, _super);\n    function EdgeClampedProgram() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EdgeClampedProgram.prototype.getDefinition = function () {\n        return __assign(__assign({}, _super.prototype.getDefinition.call(this)), { ARRAY_ITEMS_PER_VERTEX: 6, VERTEX_SHADER_SOURCE: edge_clamped_vert_glsl_1.default, ATTRIBUTES: [\n                { name: \"a_position\", size: 2, type: FLOAT },\n                { name: \"a_normal\", size: 2, type: FLOAT },\n                { name: \"a_color\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n                { name: \"a_radius\", size: 1, type: FLOAT },\n            ] });\n    };\n    EdgeClampedProgram.prototype.processVisibleItem = function (i, sourceData, targetData, data) {\n        var thickness = data.size || 1;\n        var x1 = sourceData.x;\n        var y1 = sourceData.y;\n        var x2 = targetData.x;\n        var y2 = targetData.y;\n        var color = (0, utils_1.floatColor)(data.color);\n        // Computing normals\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        var radius = targetData.size || 1;\n        var len = dx * dx + dy * dy;\n        var n1 = 0;\n        var n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len * thickness;\n            n2 = dx * len * thickness;\n        }\n        var array = this.array;\n        // First point\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = color;\n        array[i++] = 0;\n        // First point flipped\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = color;\n        array[i++] = 0;\n        // Second point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = color;\n        array[i++] = radius;\n        // Second point flipped\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = color;\n        array[i] = -radius;\n    };\n    return EdgeClampedProgram;\n}(edge_rectangle_1.default));\nexports.default = EdgeClampedProgram;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js WebGL Renderer Edge Arrow Program\n * ===========================================\n *\n * Compound program rendering edges as an arrow from the source to the target.\n * @module\n */\nvar edge_1 = require(\"./common/edge\");\nvar edge_arrowHead_1 = __importDefault(require(\"./edge.arrowHead\"));\nvar edge_clamped_1 = __importDefault(require(\"./edge.clamped\"));\nvar EdgeArrowProgram = (0, edge_1.createEdgeCompoundProgram)([edge_clamped_1.default, edge_arrowHead_1.default]);\nexports.default = EdgeArrowProgram;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSettings = exports.validateSettings = exports.DEFAULT_EDGE_PROGRAM_CLASSES = exports.DEFAULT_NODE_PROGRAM_CLASSES = exports.DEFAULT_SETTINGS = void 0;\nvar utils_1 = require(\"./utils\");\nvar label_1 = __importDefault(require(\"./rendering/canvas/label\"));\nvar hover_1 = __importDefault(require(\"./rendering/canvas/hover\"));\nvar edge_label_1 = __importDefault(require(\"./rendering/canvas/edge-label\"));\nvar node_point_1 = __importDefault(require(\"./rendering/webgl/programs/node.point\"));\nvar edge_rectangle_1 = __importDefault(require(\"./rendering/webgl/programs/edge.rectangle\"));\nvar edge_arrow_1 = __importDefault(require(\"./rendering/webgl/programs/edge.arrow\"));\nexports.DEFAULT_SETTINGS = {\n    // Performance\n    hideEdgesOnMove: false,\n    hideLabelsOnMove: false,\n    renderLabels: true,\n    renderEdgeLabels: false,\n    enableEdgeClickEvents: false,\n    enableEdgeWheelEvents: false,\n    enableEdgeHoverEvents: false,\n    // Component rendering\n    defaultNodeColor: \"#999\",\n    defaultNodeType: \"circle\",\n    defaultEdgeColor: \"#ccc\",\n    defaultEdgeType: \"line\",\n    labelFont: \"Arial\",\n    labelSize: 14,\n    labelWeight: \"normal\",\n    labelColor: { color: \"#000\" },\n    edgeLabelFont: \"Arial\",\n    edgeLabelSize: 14,\n    edgeLabelWeight: \"normal\",\n    edgeLabelColor: { attribute: \"color\" },\n    stagePadding: 30,\n    zoomToSizeRatioFunction: Math.sqrt,\n    itemSizesReference: \"screen\",\n    // Labels\n    labelDensity: 1,\n    labelGridCellSize: 100,\n    labelRenderedSizeThreshold: 6,\n    // Reducers\n    nodeReducer: null,\n    edgeReducer: null,\n    // Features\n    zIndex: false,\n    minCameraRatio: null,\n    maxCameraRatio: null,\n    // Renderers\n    labelRenderer: label_1.default,\n    hoverRenderer: hover_1.default,\n    edgeLabelRenderer: edge_label_1.default,\n    // Lifecycle\n    allowInvalidContainer: false,\n    // Program classes\n    nodeProgramClasses: {},\n    nodeHoverProgramClasses: {},\n    edgeProgramClasses: {},\n};\nexports.DEFAULT_NODE_PROGRAM_CLASSES = {\n    circle: node_point_1.default,\n};\nexports.DEFAULT_EDGE_PROGRAM_CLASSES = {\n    arrow: edge_arrow_1.default,\n    line: edge_rectangle_1.default,\n};\nfunction validateSettings(settings) {\n    if (typeof settings.labelDensity !== \"number\" || settings.labelDensity < 0) {\n        throw new Error(\"Settings: invalid `labelDensity`. Expecting a positive number.\");\n    }\n    var minCameraRatio = settings.minCameraRatio, maxCameraRatio = settings.maxCameraRatio;\n    if (typeof minCameraRatio === \"number\" && typeof maxCameraRatio === \"number\" && maxCameraRatio < minCameraRatio) {\n        throw new Error(\"Settings: invalid camera ratio boundaries. Expecting `maxCameraRatio` to be greater than `minCameraRatio`.\");\n    }\n}\nexports.validateSettings = validateSettings;\nfunction resolveSettings(settings) {\n    var resolvedSettings = (0, utils_1.assign)({}, exports.DEFAULT_SETTINGS, settings);\n    resolvedSettings.nodeProgramClasses = (0, utils_1.assign)({}, exports.DEFAULT_NODE_PROGRAM_CLASSES, resolvedSettings.nodeProgramClasses);\n    resolvedSettings.edgeProgramClasses = (0, utils_1.assign)({}, exports.DEFAULT_EDGE_PROGRAM_CLASSES, resolvedSettings.edgeProgramClasses);\n    return resolvedSettings;\n}\nexports.resolveSettings = resolveSettings;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar captor_1 = __importStar(require(\"./captor\"));\nvar DRAG_TIMEOUT = 200;\nvar TOUCH_INERTIA_RATIO = 3;\nvar TOUCH_INERTIA_DURATION = 200;\n/**\n * Touch captor class.\n *\n * @constructor\n */\nvar TouchCaptor = /** @class */ (function (_super) {\n    __extends(TouchCaptor, _super);\n    function TouchCaptor(container, renderer) {\n        var _this = _super.call(this, container, renderer) || this;\n        _this.enabled = true;\n        _this.isMoving = false;\n        _this.hasMoved = false;\n        _this.touchMode = 0; // number of touches down\n        _this.startTouchesPositions = [];\n        // Binding methods:\n        _this.handleStart = _this.handleStart.bind(_this);\n        _this.handleLeave = _this.handleLeave.bind(_this);\n        _this.handleMove = _this.handleMove.bind(_this);\n        // Binding events\n        container.addEventListener(\"touchstart\", _this.handleStart, false);\n        container.addEventListener(\"touchend\", _this.handleLeave, false);\n        container.addEventListener(\"touchcancel\", _this.handleLeave, false);\n        container.addEventListener(\"touchmove\", _this.handleMove, false);\n        return _this;\n    }\n    TouchCaptor.prototype.kill = function () {\n        var container = this.container;\n        container.removeEventListener(\"touchstart\", this.handleStart);\n        container.removeEventListener(\"touchend\", this.handleLeave);\n        container.removeEventListener(\"touchcancel\", this.handleLeave);\n        container.removeEventListener(\"touchmove\", this.handleMove);\n    };\n    TouchCaptor.prototype.getDimensions = function () {\n        return {\n            width: this.container.offsetWidth,\n            height: this.container.offsetHeight,\n        };\n    };\n    TouchCaptor.prototype.dispatchRelatedMouseEvent = function (type, e, touch, emitter) {\n        var mousePosition = touch || e.touches[0];\n        var mouseEvent = new MouseEvent(type, {\n            clientX: mousePosition.clientX,\n            clientY: mousePosition.clientY,\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n        });\n        mouseEvent.isFakeSigmaMouseEvent = true;\n        (emitter || this.container).dispatchEvent(mouseEvent);\n    };\n    TouchCaptor.prototype.handleStart = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 1)\n            this.dispatchRelatedMouseEvent(\"mousedown\", e);\n        var touches = (0, captor_1.getTouchesArray)(e.touches);\n        this.touchMode = touches.length;\n        this.startCameraState = this.renderer.getCamera().getState();\n        this.startTouchesPositions = touches.map(function (touch) { return (0, captor_1.getPosition)(touch, _this.container); });\n        this.lastTouches = touches;\n        this.lastTouchesPositions = this.startTouchesPositions;\n        // When there are two touches down, let's record distance and angle as well:\n        if (this.touchMode === 2) {\n            var _a = __read(this.startTouchesPositions, 2), _b = _a[0], x0 = _b.x, y0 = _b.y, _c = _a[1], x1 = _c.x, y1 = _c.y;\n            this.startTouchesAngle = Math.atan2(y1 - y0, x1 - x0);\n            this.startTouchesDistance = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n        }\n        this.emit(\"touchdown\", (0, captor_1.getTouchCoords)(e, this.container));\n    };\n    TouchCaptor.prototype.handleLeave = function (e) {\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 0 && this.lastTouches && this.lastTouches.length) {\n            this.dispatchRelatedMouseEvent(\"mouseup\", e, this.lastTouches[0], document);\n            // ... and only click if no move was made\n            if (!this.hasMoved) {\n                this.dispatchRelatedMouseEvent(\"click\", e, this.lastTouches[0]);\n            }\n        }\n        if (this.movingTimeout) {\n            this.isMoving = false;\n            clearTimeout(this.movingTimeout);\n        }\n        switch (this.touchMode) {\n            case 2:\n                if (e.touches.length === 1) {\n                    this.handleStart(e);\n                    e.preventDefault();\n                    break;\n                }\n            /* falls through */\n            case 1:\n                // TODO\n                // Dispatch event\n                if (this.isMoving) {\n                    var camera = this.renderer.getCamera();\n                    var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };\n                    camera.animate({\n                        x: cameraState.x + TOUCH_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\n                        y: cameraState.y + TOUCH_INERTIA_RATIO * (cameraState.y - previousCameraState.y),\n                    }, {\n                        duration: TOUCH_INERTIA_DURATION,\n                        easing: \"quadraticOut\",\n                    });\n                }\n                this.hasMoved = false;\n                this.isMoving = false;\n                this.touchMode = 0;\n                break;\n        }\n        this.emit(\"touchup\", (0, captor_1.getTouchCoords)(e, this.container));\n    };\n    TouchCaptor.prototype.handleMove = function (e) {\n        var _a;\n        var _this = this;\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 1)\n            this.dispatchRelatedMouseEvent(\"mousemove\", e);\n        var touches = (0, captor_1.getTouchesArray)(e.touches);\n        var touchesPositions = touches.map(function (touch) { return (0, captor_1.getPosition)(touch, _this.container); });\n        this.lastTouches = touches;\n        this.lastTouchesPositions = touchesPositions;\n        // If a move was initiated at some point and we get back to startpoint,\n        // we should still consider that we did move (which also happens after a\n        // multiple touch when only one touch remains in which case handleStart\n        // is recalled within handleLeave).\n        // Now, some mobile browsers report zero-distance moves so we also check that\n        // one of the touches did actually move from the origin position.\n        this.hasMoved || (this.hasMoved = touchesPositions.some(function (position, idx) {\n            var startPosition = _this.startTouchesPositions[idx];\n            return position.x !== startPosition.x || position.y !== startPosition.y;\n        }));\n        // If there was no move, do not trigger touch moves behavior\n        if (!this.hasMoved) {\n            return;\n        }\n        this.isMoving = true;\n        if (this.movingTimeout)\n            clearTimeout(this.movingTimeout);\n        this.movingTimeout = window.setTimeout(function () {\n            _this.isMoving = false;\n        }, DRAG_TIMEOUT);\n        var camera = this.renderer.getCamera();\n        var startCameraState = this.startCameraState;\n        switch (this.touchMode) {\n            case 1: {\n                var _b = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0]), xStart = _b.x, yStart = _b.y;\n                var _c = this.renderer.viewportToFramedGraph(touchesPositions[0]), x = _c.x, y = _c.y;\n                camera.setState({\n                    x: startCameraState.x + xStart - x,\n                    y: startCameraState.y + yStart - y,\n                });\n                break;\n            }\n            case 2: {\n                /**\n                 * Here is the thinking here:\n                 *\n                 * 1. We can find the new angle and ratio, by comparing the vector from \"touch one\" to \"touch two\" at the start\n                 *    of the d'n'd and now\n                 *\n                 * 2. We can use `Camera#viewportToGraph` inside formula to retrieve the new camera position, using the graph\n                 *    position of a touch at the beginning of the d'n'd (using `startCamera.viewportToGraph`) and the viewport\n                 *    position of this same touch now\n                 */\n                var newCameraState = {};\n                var _d = touchesPositions[0], x0 = _d.x, y0 = _d.y;\n                var _e = touchesPositions[1], x1 = _e.x, y1 = _e.y;\n                var angleDiff = Math.atan2(y1 - y0, x1 - x0) - this.startTouchesAngle;\n                var ratioDiff = Math.hypot(y1 - y0, x1 - x0) / this.startTouchesDistance;\n                // 1.\n                var newRatio = camera.getBoundedRatio(startCameraState.ratio / ratioDiff);\n                newCameraState.ratio = newRatio;\n                newCameraState.angle = startCameraState.angle + angleDiff;\n                // 2.\n                var dimensions = this.getDimensions();\n                var touchGraphPosition = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0], { cameraState: startCameraState });\n                var smallestDimension = Math.min(dimensions.width, dimensions.height);\n                var dx = smallestDimension / dimensions.width;\n                var dy = smallestDimension / dimensions.height;\n                var ratio = newRatio / smallestDimension;\n                // Align with center of the graph:\n                var x = x0 - smallestDimension / 2 / dx;\n                var y = y0 - smallestDimension / 2 / dy;\n                // Rotate:\n                _a = __read([\n                    x * Math.cos(-newCameraState.angle) - y * Math.sin(-newCameraState.angle),\n                    y * Math.cos(-newCameraState.angle) + x * Math.sin(-newCameraState.angle),\n                ], 2), x = _a[0], y = _a[1];\n                newCameraState.x = touchGraphPosition.x - x * ratio;\n                newCameraState.y = touchGraphPosition.y + y * ratio;\n                camera.setState(newCameraState);\n                break;\n            }\n        }\n        this.emit(\"touchmove\", (0, captor_1.getTouchCoords)(e, this.container));\n    };\n    return TouchCaptor;\n}(captor_1.default));\nexports.default = TouchCaptor;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.doEdgeCollideWithPoint = exports.isPixelColored = void 0;\n/**\n * This helper returns true is the pixel at (x,y) in the given WebGL context is\n * colored, and false else.\n */\nfunction isPixelColored(gl, x, y) {\n    var pixels = new Uint8Array(4);\n    gl.readPixels(x, gl.drawingBufferHeight - y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return pixels[3] > 0;\n}\nexports.isPixelColored = isPixelColored;\n/**\n * This helper checks whether or not a point (x, y) collides with an\n * edge, connecting a source (xS, yS) to a target (xT, yT) with a thickness in\n * pixels.\n */\nfunction doEdgeCollideWithPoint(x, y, xS, yS, xT, yT, thickness) {\n    // Check first if point is out of the rectangle which opposite corners are the\n    // source and the target, rectangle we expand by `thickness` in every\n    // directions:\n    if (x < xS - thickness && x < xT - thickness)\n        return false;\n    if (y < yS - thickness && y < yT - thickness)\n        return false;\n    if (x > xS + thickness && x > xT + thickness)\n        return false;\n    if (y > yS + thickness && y > yT + thickness)\n        return false;\n    // Check actual collision now: Since we now the point is in this big rectangle\n    // we \"just\" need to check that the distance between the point and the line\n    // connecting the source and the target is less than `thickness`:\n    // https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\n    var distance = Math.abs((xT - xS) * (yS - y) - (xS - x) * (yT - yS)) / Math.sqrt(Math.pow(xT - xS, 2) + Math.pow(yT - yS, 2));\n    return distance < thickness / 2;\n}\nexports.doEdgeCollideWithPoint = doEdgeCollideWithPoint;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extend_1 = __importDefault(require(\"@yomguithereal/helpers/extend\"));\nvar camera_1 = __importDefault(require(\"./core/camera\"));\nvar mouse_1 = __importDefault(require(\"./core/captors/mouse\"));\nvar quadtree_1 = __importDefault(require(\"./core/quadtree\"));\nvar types_1 = require(\"./types\");\nvar utils_1 = require(\"./utils\");\nvar labels_1 = require(\"./core/labels\");\nvar settings_1 = require(\"./settings\");\nvar touch_1 = __importDefault(require(\"./core/captors/touch\"));\nvar matrices_1 = require(\"./utils/matrices\");\nvar edge_collisions_1 = require(\"./utils/edge-collisions\");\n/**\n * Constants.\n */\nvar X_LABEL_MARGIN = 150;\nvar Y_LABEL_MARGIN = 50;\n/**\n * Important functions.\n */\nfunction applyNodeDefaults(settings, key, data) {\n    if (!data.hasOwnProperty(\"x\") || !data.hasOwnProperty(\"y\"))\n        throw new Error(\"Sigma: could not find a valid position (x, y) for node \\\"\".concat(key, \"\\\". All your nodes must have a number \\\"x\\\" and \\\"y\\\". Maybe your forgot to apply a layout or your \\\"nodeReducer\\\" is not returning the correct data?\"));\n    if (!data.color)\n        data.color = settings.defaultNodeColor;\n    if (!data.label && data.label !== \"\")\n        data.label = null;\n    if (data.label !== undefined && data.label !== null)\n        data.label = \"\" + data.label;\n    else\n        data.label = null;\n    if (!data.size)\n        data.size = 2;\n    if (!data.hasOwnProperty(\"hidden\"))\n        data.hidden = false;\n    if (!data.hasOwnProperty(\"highlighted\"))\n        data.highlighted = false;\n    if (!data.hasOwnProperty(\"forceLabel\"))\n        data.forceLabel = false;\n    if (!data.type || data.type === \"\")\n        data.type = settings.defaultNodeType;\n    if (!data.zIndex)\n        data.zIndex = 0;\n    return data;\n}\nfunction applyEdgeDefaults(settings, key, data) {\n    if (!data.color)\n        data.color = settings.defaultEdgeColor;\n    if (!data.label)\n        data.label = \"\";\n    if (!data.size)\n        data.size = 0.5;\n    if (!data.hasOwnProperty(\"hidden\"))\n        data.hidden = false;\n    if (!data.hasOwnProperty(\"forceLabel\"))\n        data.forceLabel = false;\n    if (!data.type || data.type === \"\")\n        data.type = settings.defaultEdgeType;\n    if (!data.zIndex)\n        data.zIndex = 0;\n    return data;\n}\n/**\n * Main class.\n *\n * @constructor\n * @param {Graph}       graph     - Graph to render.\n * @param {HTMLElement} container - DOM container in which to render.\n * @param {object}      settings  - Optional settings.\n */\nvar Sigma = /** @class */ (function (_super) {\n    __extends(Sigma, _super);\n    function Sigma(graph, container, settings) {\n        if (settings === void 0) { settings = {}; }\n        var _this = _super.call(this) || this;\n        _this.elements = {};\n        _this.canvasContexts = {};\n        _this.webGLContexts = {};\n        _this.activeListeners = {};\n        _this.quadtree = new quadtree_1.default();\n        _this.labelGrid = new labels_1.LabelGrid();\n        _this.nodeDataCache = {};\n        _this.edgeDataCache = {};\n        _this.nodesWithForcedLabels = [];\n        _this.edgesWithForcedLabels = [];\n        _this.nodeExtent = { x: [0, 1], y: [0, 1] };\n        _this.matrix = (0, matrices_1.identity)();\n        _this.invMatrix = (0, matrices_1.identity)();\n        _this.correctionRatio = 1;\n        _this.customBBox = null;\n        _this.normalizationFunction = (0, utils_1.createNormalizationFunction)({\n            x: [0, 1],\n            y: [0, 1],\n        });\n        // Cache:\n        _this.graphToViewportRatio = 1;\n        // Starting dimensions and pixel ratio\n        _this.width = 0;\n        _this.height = 0;\n        _this.pixelRatio = (0, utils_1.getPixelRatio)();\n        // State\n        _this.displayedNodeLabels = new Set();\n        _this.displayedEdgeLabels = new Set();\n        _this.highlightedNodes = new Set();\n        _this.hoveredNode = null;\n        _this.hoveredEdge = null;\n        _this.renderFrame = null;\n        _this.renderHighlightedNodesFrame = null;\n        _this.needToProcess = false;\n        _this.checkEdgesEventsFrame = null;\n        // Programs\n        _this.nodePrograms = {};\n        _this.nodeHoverPrograms = {};\n        _this.edgePrograms = {};\n        // Resolving settings\n        _this.settings = (0, settings_1.resolveSettings)(settings);\n        // Validating\n        (0, settings_1.validateSettings)(_this.settings);\n        (0, utils_1.validateGraph)(graph);\n        if (!(container instanceof HTMLElement))\n            throw new Error(\"Sigma: container should be an html element.\");\n        // Properties\n        _this.graph = graph;\n        _this.container = container;\n        // Initializing contexts\n        _this.createWebGLContext(\"edges\", { preserveDrawingBuffer: true });\n        _this.createCanvasContext(\"edgeLabels\");\n        _this.createWebGLContext(\"nodes\");\n        _this.createCanvasContext(\"labels\");\n        _this.createCanvasContext(\"hovers\");\n        _this.createWebGLContext(\"hoverNodes\");\n        _this.createCanvasContext(\"mouse\");\n        // Blending\n        for (var key in _this.webGLContexts) {\n            var gl = _this.webGLContexts[key];\n            gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            gl.enable(gl.BLEND);\n        }\n        // Loading programs\n        for (var type in _this.settings.nodeProgramClasses) {\n            var NodeProgramClass = _this.settings.nodeProgramClasses[type];\n            _this.nodePrograms[type] = new NodeProgramClass(_this.webGLContexts.nodes, _this);\n            var NodeHoverProgram = NodeProgramClass;\n            if (type in _this.settings.nodeHoverProgramClasses) {\n                NodeHoverProgram = _this.settings.nodeHoverProgramClasses[type];\n            }\n            _this.nodeHoverPrograms[type] = new NodeHoverProgram(_this.webGLContexts.hoverNodes, _this);\n        }\n        for (var type in _this.settings.edgeProgramClasses) {\n            var EdgeProgramClass = _this.settings.edgeProgramClasses[type];\n            _this.edgePrograms[type] = new EdgeProgramClass(_this.webGLContexts.edges, _this);\n        }\n        // Initial resize\n        _this.resize();\n        // Initializing the camera\n        _this.camera = new camera_1.default();\n        // Binding camera events\n        _this.bindCameraHandlers();\n        // Initializing captors\n        _this.mouseCaptor = new mouse_1.default(_this.elements.mouse, _this);\n        _this.touchCaptor = new touch_1.default(_this.elements.mouse, _this);\n        // Binding event handlers\n        _this.bindEventHandlers();\n        // Binding graph handlers\n        _this.bindGraphHandlers();\n        // Trigger eventual settings-related things\n        _this.handleSettingsUpdate();\n        // Processing data for the first time & render\n        _this.refresh();\n        return _this;\n    }\n    /**---------------------------------------------------------------------------\n     * Internal methods.\n     **---------------------------------------------------------------------------\n     */\n    /**\n     * Internal function used to create a canvas element.\n     * @param  {string} id - Context's id.\n     * @return {Sigma}\n     */\n    Sigma.prototype.createCanvas = function (id) {\n        var canvas = (0, utils_1.createElement)(\"canvas\", {\n            position: \"absolute\",\n        }, {\n            class: \"sigma-\".concat(id),\n        });\n        this.elements[id] = canvas;\n        this.container.appendChild(canvas);\n        return canvas;\n    };\n    /**\n     * Internal function used to create a canvas context and add the relevant\n     * DOM elements.\n     *\n     * @param  {string} id - Context's id.\n     * @return {Sigma}\n     */\n    Sigma.prototype.createCanvasContext = function (id) {\n        var canvas = this.createCanvas(id);\n        var contextOptions = {\n            preserveDrawingBuffer: false,\n            antialias: false,\n        };\n        this.canvasContexts[id] = canvas.getContext(\"2d\", contextOptions);\n        return this;\n    };\n    /**\n     * Internal function used to create a canvas context and add the relevant\n     * DOM elements.\n     *\n     * @param  {string}  id      - Context's id.\n     * @param  {object?} options - #getContext params to override (optional)\n     * @return {Sigma}\n     */\n    Sigma.prototype.createWebGLContext = function (id, options) {\n        var canvas = this.createCanvas(id);\n        var contextOptions = __assign({ preserveDrawingBuffer: false, antialias: false }, (options || {}));\n        var context;\n        // First we try webgl2 for an easy performance boost\n        context = canvas.getContext(\"webgl2\", contextOptions);\n        // Else we fall back to webgl\n        if (!context)\n            context = canvas.getContext(\"webgl\", contextOptions);\n        // Edge, I am looking right at you...\n        if (!context)\n            context = canvas.getContext(\"experimental-webgl\", contextOptions);\n        this.webGLContexts[id] = context;\n        return this;\n    };\n    /**\n     * Method binding camera handlers.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindCameraHandlers = function () {\n        var _this = this;\n        this.activeListeners.camera = function () {\n            _this.scheduleRender();\n        };\n        this.camera.on(\"updated\", this.activeListeners.camera);\n        return this;\n    };\n    /**\n     * Method unbinding camera handlers.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.unbindCameraHandlers = function () {\n        this.camera.removeListener(\"updated\", this.activeListeners.camera);\n        return this;\n    };\n    /**\n     * Method that checks whether or not a node collides with a given position.\n     */\n    Sigma.prototype.mouseIsOnNode = function (_a, _b, size) {\n        var x = _a.x, y = _a.y;\n        var nodeX = _b.x, nodeY = _b.y;\n        return (x > nodeX - size &&\n            x < nodeX + size &&\n            y > nodeY - size &&\n            y < nodeY + size &&\n            Math.sqrt(Math.pow(x - nodeX, 2) + Math.pow(y - nodeY, 2)) < size);\n    };\n    /**\n     * Method that returns all nodes in quad at a given position.\n     */\n    Sigma.prototype.getQuadNodes = function (position) {\n        var mouseGraphPosition = this.viewportToFramedGraph(position);\n        return this.quadtree.point(mouseGraphPosition.x, 1 - mouseGraphPosition.y);\n    };\n    /**\n     * Method that returns the closest node to a given position.\n     */\n    Sigma.prototype.getNodeAtPosition = function (position) {\n        var x = position.x, y = position.y;\n        var quadNodes = this.getQuadNodes(position);\n        // We will hover the node whose center is closest to mouse\n        var minDistance = Infinity, nodeAtPosition = null;\n        for (var i = 0, l = quadNodes.length; i < l; i++) {\n            var node = quadNodes[i];\n            var data = this.nodeDataCache[node];\n            var nodePosition = this.framedGraphToViewport(data);\n            var size = this.scaleSize(data.size);\n            if (!data.hidden && this.mouseIsOnNode(position, nodePosition, size)) {\n                var distance = Math.sqrt(Math.pow(x - nodePosition.x, 2) + Math.pow(y - nodePosition.y, 2));\n                // TODO: sort by min size also for cases where center is the same\n                if (distance < minDistance) {\n                    minDistance = distance;\n                    nodeAtPosition = node;\n                }\n            }\n        }\n        return nodeAtPosition;\n    };\n    /**\n     * Method binding event handlers.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindEventHandlers = function () {\n        var _this = this;\n        // Handling window resize\n        this.activeListeners.handleResize = function () {\n            _this.scheduleRender();\n        };\n        window.addEventListener(\"resize\", this.activeListeners.handleResize);\n        // Handling mouse move\n        this.activeListeners.handleMove = function (e) {\n            var baseEvent = {\n                event: e,\n                preventSigmaDefault: function () {\n                    e.preventSigmaDefault();\n                },\n            };\n            var nodeToHover = _this.getNodeAtPosition(e);\n            if (nodeToHover && _this.hoveredNode !== nodeToHover && !_this.nodeDataCache[nodeToHover].hidden) {\n                // Handling passing from one node to the other directly\n                if (_this.hoveredNode)\n                    _this.emit(\"leaveNode\", __assign(__assign({}, baseEvent), { node: _this.hoveredNode }));\n                _this.hoveredNode = nodeToHover;\n                _this.emit(\"enterNode\", __assign(__assign({}, baseEvent), { node: nodeToHover }));\n                _this.scheduleHighlightedNodesRender();\n                return;\n            }\n            // Checking if the hovered node is still hovered\n            if (_this.hoveredNode) {\n                var data = _this.nodeDataCache[_this.hoveredNode];\n                var pos = _this.framedGraphToViewport(data);\n                var size = _this.scaleSize(data.size);\n                if (!_this.mouseIsOnNode(e, pos, size)) {\n                    var node = _this.hoveredNode;\n                    _this.hoveredNode = null;\n                    _this.emit(\"leaveNode\", __assign(__assign({}, baseEvent), { node: node }));\n                    _this.scheduleHighlightedNodesRender();\n                    return;\n                }\n            }\n            if (_this.settings.enableEdgeHoverEvents === true) {\n                _this.checkEdgeHoverEvents(baseEvent);\n            }\n            else if (_this.settings.enableEdgeHoverEvents === \"debounce\") {\n                if (!_this.checkEdgesEventsFrame)\n                    _this.checkEdgesEventsFrame = (0, utils_1.requestFrame)(function () {\n                        _this.checkEdgeHoverEvents(baseEvent);\n                        _this.checkEdgesEventsFrame = null;\n                    });\n            }\n        };\n        // Handling click\n        var createMouseListener = function (eventType) {\n            return function (e) {\n                var baseEvent = {\n                    event: e,\n                    preventSigmaDefault: function () {\n                        e.preventSigmaDefault();\n                    },\n                };\n                var isFakeSigmaMouseEvent = e.original.isFakeSigmaMouseEvent;\n                var nodeAtPosition = isFakeSigmaMouseEvent ? _this.getNodeAtPosition(e) : _this.hoveredNode;\n                if (nodeAtPosition)\n                    return _this.emit(\"\".concat(eventType, \"Node\"), __assign(__assign({}, baseEvent), { node: nodeAtPosition }));\n                if (eventType === \"wheel\" ? _this.settings.enableEdgeWheelEvents : _this.settings.enableEdgeClickEvents) {\n                    var edge = _this.getEdgeAtPoint(e.x, e.y);\n                    if (edge)\n                        return _this.emit(\"\".concat(eventType, \"Edge\"), __assign(__assign({}, baseEvent), { edge: edge }));\n                }\n                return _this.emit(\"\".concat(eventType, \"Stage\"), baseEvent);\n            };\n        };\n        this.activeListeners.handleClick = createMouseListener(\"click\");\n        this.activeListeners.handleRightClick = createMouseListener(\"rightClick\");\n        this.activeListeners.handleDoubleClick = createMouseListener(\"doubleClick\");\n        this.activeListeners.handleWheel = createMouseListener(\"wheel\");\n        this.activeListeners.handleDown = createMouseListener(\"down\");\n        this.mouseCaptor.on(\"mousemove\", this.activeListeners.handleMove);\n        this.mouseCaptor.on(\"click\", this.activeListeners.handleClick);\n        this.mouseCaptor.on(\"rightClick\", this.activeListeners.handleRightClick);\n        this.mouseCaptor.on(\"doubleClick\", this.activeListeners.handleDoubleClick);\n        this.mouseCaptor.on(\"wheel\", this.activeListeners.handleWheel);\n        this.mouseCaptor.on(\"mousedown\", this.activeListeners.handleDown);\n        // TODO\n        // Deal with Touch captor events\n        return this;\n    };\n    /**\n     * Method binding graph handlers\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindGraphHandlers = function () {\n        var _this = this;\n        var graph = this.graph;\n        this.activeListeners.graphUpdate = function () {\n            _this.scheduleRefresh();\n        };\n        this.activeListeners.dropNodeGraphUpdate = function (e) {\n            delete _this.nodeDataCache[e.key];\n            if (_this.hoveredNode === e.key)\n                _this.hoveredNode = null;\n            _this.activeListeners.graphUpdate();\n        };\n        this.activeListeners.dropEdgeGraphUpdate = function (e) {\n            delete _this.edgeDataCache[e.key];\n            if (_this.hoveredEdge === e.key)\n                _this.hoveredEdge = null;\n            _this.activeListeners.graphUpdate();\n        };\n        this.activeListeners.clearEdgesGraphUpdate = function () {\n            _this.edgeDataCache = {};\n            _this.hoveredEdge = null;\n            _this.activeListeners.graphUpdate();\n        };\n        this.activeListeners.clearGraphUpdate = function () {\n            _this.nodeDataCache = {};\n            _this.hoveredNode = null;\n            _this.activeListeners.clearEdgesGraphUpdate();\n        };\n        graph.on(\"nodeAdded\", this.activeListeners.graphUpdate);\n        graph.on(\"nodeDropped\", this.activeListeners.dropNodeGraphUpdate);\n        graph.on(\"nodeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.on(\"eachNodeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.on(\"edgeAdded\", this.activeListeners.graphUpdate);\n        graph.on(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\n        graph.on(\"edgeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.on(\"eachEdgeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.on(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\n        graph.on(\"cleared\", this.activeListeners.clearGraphUpdate);\n        return this;\n    };\n    /**\n     * Method used to unbind handlers from the graph.\n     *\n     * @return {undefined}\n     */\n    Sigma.prototype.unbindGraphHandlers = function () {\n        var graph = this.graph;\n        graph.removeListener(\"nodeAdded\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"nodeDropped\", this.activeListeners.dropNodeGraphUpdate);\n        graph.removeListener(\"nodeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"eachNodeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"edgeAdded\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\n        graph.removeListener(\"edgeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"eachEdgeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\n        graph.removeListener(\"cleared\", this.activeListeners.clearGraphUpdate);\n    };\n    /**\n     * Method dealing with \"leaveEdge\" and \"enterEdge\" events.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.checkEdgeHoverEvents = function (payload) {\n        var edgeToHover = this.hoveredNode ? null : this.getEdgeAtPoint(payload.event.x, payload.event.y);\n        if (edgeToHover !== this.hoveredEdge) {\n            if (this.hoveredEdge)\n                this.emit(\"leaveEdge\", __assign(__assign({}, payload), { edge: this.hoveredEdge }));\n            if (edgeToHover)\n                this.emit(\"enterEdge\", __assign(__assign({}, payload), { edge: edgeToHover }));\n            this.hoveredEdge = edgeToHover;\n        }\n        return this;\n    };\n    /**\n     * Method looking for an edge colliding with a given point at (x, y). Returns\n     * the key of the edge if any, or null else.\n     */\n    Sigma.prototype.getEdgeAtPoint = function (x, y) {\n        var e_1, _a;\n        var _this = this;\n        var _b = this, edgeDataCache = _b.edgeDataCache, nodeDataCache = _b.nodeDataCache;\n        // Check first that pixel is colored:\n        // Note that mouse positions must be corrected by pixel ratio to correctly\n        // index the drawing buffer.\n        if (!(0, edge_collisions_1.isPixelColored)(this.webGLContexts.edges, x * this.pixelRatio, y * this.pixelRatio))\n            return null;\n        // Check for each edge if it collides with the point:\n        var _c = this.viewportToGraph({ x: x, y: y }), graphX = _c.x, graphY = _c.y;\n        // To translate edge thicknesses to the graph system, we observe by how much\n        // the length of a non-null edge is transformed to between the graph system\n        // and the viewport system:\n        var transformationRatio = 0;\n        this.graph.someEdge(function (key, _, sourceId, targetId, _a, _b) {\n            var xs = _a.x, ys = _a.y;\n            var xt = _b.x, yt = _b.y;\n            if (edgeDataCache[key].hidden || nodeDataCache[sourceId].hidden || nodeDataCache[targetId].hidden)\n                return false;\n            if (xs !== xt || ys !== yt) {\n                var graphLength = Math.sqrt(Math.pow(xt - xs, 2) + Math.pow(yt - ys, 2));\n                var _c = _this.graphToViewport({ x: xs, y: ys }), vp_xs = _c.x, vp_ys = _c.y;\n                var _d = _this.graphToViewport({ x: xt, y: yt }), vp_xt = _d.x, vp_yt = _d.y;\n                var viewportLength = Math.sqrt(Math.pow(vp_xt - vp_xs, 2) + Math.pow(vp_yt - vp_ys, 2));\n                transformationRatio = graphLength / viewportLength;\n                return true;\n            }\n        });\n        // If no non-null edge has been found, return null:\n        if (!transformationRatio)\n            return null;\n        // Now we can look for matching edges:\n        var edges = this.graph.filterEdges(function (key, edgeAttributes, sourceId, targetId, sourcePosition, targetPosition) {\n            if (edgeDataCache[key].hidden || nodeDataCache[sourceId].hidden || nodeDataCache[targetId].hidden)\n                return false;\n            if ((0, edge_collisions_1.doEdgeCollideWithPoint)(graphX, graphY, sourcePosition.x, sourcePosition.y, targetPosition.x, targetPosition.y, \n            // Adapt the edge size to the zoom ratio:\n            _this.scaleSize(edgeDataCache[key].size * transformationRatio))) {\n                return true;\n            }\n        });\n        if (edges.length === 0)\n            return null; // no edges found\n        // if none of the edges have a zIndex, selected the most recently created one to match the rendering order\n        var selectedEdge = edges[edges.length - 1];\n        // otherwise select edge with highest zIndex\n        var highestZIndex = -Infinity;\n        try {\n            for (var edges_1 = __values(edges), edges_1_1 = edges_1.next(); !edges_1_1.done; edges_1_1 = edges_1.next()) {\n                var edge = edges_1_1.value;\n                var zIndex = this.graph.getEdgeAttribute(edge, \"zIndex\");\n                if (zIndex >= highestZIndex) {\n                    selectedEdge = edge;\n                    highestZIndex = zIndex;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (edges_1_1 && !edges_1_1.done && (_a = edges_1.return)) _a.call(edges_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return selectedEdge;\n    };\n    /**\n     * Method used to process the whole graph's data.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.process = function () {\n        var _this = this;\n        var graph = this.graph;\n        var settings = this.settings;\n        var dimensions = this.getDimensions();\n        var nodeZExtent = [Infinity, -Infinity];\n        var edgeZExtent = [Infinity, -Infinity];\n        // Clearing the quad\n        this.quadtree.clear();\n        // Resetting the label grid\n        // TODO: it's probably better to do this explicitly or on resizes for layout and anims\n        this.labelGrid.resizeAndClear(dimensions, settings.labelGridCellSize);\n        // Clear the highlightedNodes\n        this.highlightedNodes = new Set();\n        // Computing extents\n        this.nodeExtent = (0, utils_1.graphExtent)(graph);\n        // Resetting `forceLabel` indices\n        this.nodesWithForcedLabels = [];\n        this.edgesWithForcedLabels = [];\n        // NOTE: it is important to compute this matrix after computing the node's extent\n        // because #.getGraphDimensions relies on it\n        var nullCamera = new camera_1.default();\n        var nullCameraMatrix = (0, utils_1.matrixFromCamera)(nullCamera.getState(), this.getDimensions(), this.getGraphDimensions(), this.getSetting(\"stagePadding\") || 0);\n        // Rescaling function\n        this.normalizationFunction = (0, utils_1.createNormalizationFunction)(this.customBBox || this.nodeExtent);\n        var nodesPerPrograms = {};\n        var nodes = graph.nodes();\n        for (var i = 0, l = nodes.length; i < l; i++) {\n            var node = nodes[i];\n            // Node display data resolution:\n            //   1. First we get the node's attributes\n            //   2. We optionally reduce them using the function provided by the user\n            //      Note that this function must return a total object and won't be merged\n            //   3. We apply our defaults, while running some vital checks\n            //   4. We apply the normalization function\n            // We shallow copy node data to avoid dangerous behaviors from reducers\n            var attr = Object.assign({}, graph.getNodeAttributes(node));\n            if (settings.nodeReducer)\n                attr = settings.nodeReducer(node, attr);\n            var data = applyNodeDefaults(this.settings, node, attr);\n            nodesPerPrograms[data.type] = (nodesPerPrograms[data.type] || 0) + 1;\n            this.nodeDataCache[node] = data;\n            this.normalizationFunction.applyTo(data);\n            if (data.forceLabel)\n                this.nodesWithForcedLabels.push(node);\n            if (this.settings.zIndex) {\n                if (data.zIndex < nodeZExtent[0])\n                    nodeZExtent[0] = data.zIndex;\n                if (data.zIndex > nodeZExtent[1])\n                    nodeZExtent[1] = data.zIndex;\n            }\n        }\n        for (var type in this.nodePrograms) {\n            if (!this.nodePrograms.hasOwnProperty(type)) {\n                throw new Error(\"Sigma: could not find a suitable program for node type \\\"\".concat(type, \"\\\"!\"));\n            }\n            this.nodePrograms[type].reallocate(nodesPerPrograms[type] || 0);\n            // We reset that count here, so that we can reuse it while calling the Program#process methods:\n            nodesPerPrograms[type] = 0;\n        }\n        // Handling node z-index\n        // TODO: z-index needs us to compute display data before hand\n        if (this.settings.zIndex && nodeZExtent[0] !== nodeZExtent[1])\n            nodes = (0, utils_1.zIndexOrdering)(nodeZExtent, function (node) { return _this.nodeDataCache[node].zIndex; }, nodes);\n        var normalizationRatio = this.normalizationFunction.ratio;\n        for (var i = 0, l = nodes.length; i < l; i++) {\n            var node = nodes[i];\n            var data = this.nodeDataCache[node];\n            this.quadtree.add(node, data.x, 1 - data.y, this.scaleSize(data.size, 1) / normalizationRatio);\n            if (typeof data.label === \"string\" && !data.hidden)\n                this.labelGrid.add(node, data.size, this.framedGraphToViewport(data, { matrix: nullCameraMatrix }));\n            var nodeProgram = this.nodePrograms[data.type];\n            if (!nodeProgram)\n                throw new Error(\"Sigma: could not find a suitable program for node type \\\"\".concat(data.type, \"\\\"!\"));\n            nodeProgram.process(nodesPerPrograms[data.type]++, data);\n            // Save the node in the highlighted set if needed\n            if (data.highlighted && !data.hidden)\n                this.highlightedNodes.add(node);\n        }\n        this.labelGrid.organize();\n        var edgesPerPrograms = {};\n        var edges = graph.edges();\n        for (var i = 0, l = edges.length; i < l; i++) {\n            var edge = edges[i];\n            // Edge display data resolution:\n            //   1. First we get the edge's attributes\n            //   2. We optionally reduce them using the function provided by the user\n            //      Note that this function must return a total object and won't be merged\n            //   3. We apply our defaults, while running some vital checks\n            // We shallow copy edge data to avoid dangerous behaviors from reducers\n            var attr = Object.assign({}, graph.getEdgeAttributes(edge));\n            if (settings.edgeReducer)\n                attr = settings.edgeReducer(edge, attr);\n            var data = applyEdgeDefaults(this.settings, edge, attr);\n            edgesPerPrograms[data.type] = (edgesPerPrograms[data.type] || 0) + 1;\n            this.edgeDataCache[edge] = data;\n            if (data.forceLabel && !data.hidden)\n                this.edgesWithForcedLabels.push(edge);\n            if (this.settings.zIndex) {\n                if (data.zIndex < edgeZExtent[0])\n                    edgeZExtent[0] = data.zIndex;\n                if (data.zIndex > edgeZExtent[1])\n                    edgeZExtent[1] = data.zIndex;\n            }\n        }\n        for (var type in this.edgePrograms) {\n            if (!this.edgePrograms.hasOwnProperty(type)) {\n                throw new Error(\"Sigma: could not find a suitable program for edge type \\\"\".concat(type, \"\\\"!\"));\n            }\n            this.edgePrograms[type].reallocate(edgesPerPrograms[type] || 0);\n            // We reset that count here, so that we can reuse it while calling the Program#process methods:\n            edgesPerPrograms[type] = 0;\n        }\n        // Handling edge z-index\n        if (this.settings.zIndex && edgeZExtent[0] !== edgeZExtent[1])\n            edges = (0, utils_1.zIndexOrdering)(edgeZExtent, function (edge) { return _this.edgeDataCache[edge].zIndex; }, edges);\n        for (var i = 0, l = edges.length; i < l; i++) {\n            var edge = edges[i];\n            var data = this.edgeDataCache[edge];\n            var extremities = graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]];\n            this.edgePrograms[data.type].process(edgesPerPrograms[data.type]++, sourceData, targetData, data);\n        }\n        return this;\n    };\n    /**\n     * Method that backports potential settings updates where it's needed.\n     * @private\n     */\n    Sigma.prototype.handleSettingsUpdate = function () {\n        this.camera.minRatio = this.settings.minCameraRatio;\n        this.camera.maxRatio = this.settings.maxCameraRatio;\n        this.camera.setState(this.camera.validateState(this.camera.getState()));\n        return this;\n    };\n    /**\n     * Method used to render labels.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderLabels = function () {\n        if (!this.settings.renderLabels)\n            return this;\n        var cameraState = this.camera.getState();\n        // Selecting labels to draw\n        var labelsToDisplay = this.labelGrid.getLabelsToDisplay(cameraState.ratio, this.settings.labelDensity);\n        (0, extend_1.default)(labelsToDisplay, this.nodesWithForcedLabels);\n        this.displayedNodeLabels = new Set();\n        // Drawing labels\n        var context = this.canvasContexts.labels;\n        for (var i = 0, l = labelsToDisplay.length; i < l; i++) {\n            var node = labelsToDisplay[i];\n            var data = this.nodeDataCache[node];\n            // If the node was already drawn (like if it is eligible AND has\n            // `forceLabel`), we don't want to draw it again\n            // NOTE: we can do better probably\n            if (this.displayedNodeLabels.has(node))\n                continue;\n            // If the node is hidden, we don't need to display its label obviously\n            if (data.hidden)\n                continue;\n            var _a = this.framedGraphToViewport(data), x = _a.x, y = _a.y;\n            // NOTE: we can cache the labels we need to render until the camera's ratio changes\n            var size = this.scaleSize(data.size);\n            // Is node big enough?\n            if (!data.forceLabel && size < this.settings.labelRenderedSizeThreshold)\n                continue;\n            // Is node actually on screen (with some margin)\n            // NOTE: we used to rely on the quadtree for this, but the coordinates\n            // conversion make it unreliable and at that point we already converted\n            // to viewport coordinates and since the label grid already culls the\n            // number of potential labels to display this looks like a good\n            // performance compromise.\n            // NOTE: labelGrid.getLabelsToDisplay could probably optimize by not\n            // considering cells obviously outside of the range of the current\n            // view rectangle.\n            if (x < -X_LABEL_MARGIN ||\n                x > this.width + X_LABEL_MARGIN ||\n                y < -Y_LABEL_MARGIN ||\n                y > this.height + Y_LABEL_MARGIN)\n                continue;\n            // Because displayed edge labels depend directly on actually rendered node\n            // labels, we need to only add to this.displayedNodeLabels nodes whose label\n            // is rendered.\n            // This makes this.displayedNodeLabels depend on viewport, which might become\n            // an issue once we start memoizing getLabelsToDisplay.\n            this.displayedNodeLabels.add(node);\n            this.settings.labelRenderer(context, __assign(__assign({ key: node }, data), { size: size, x: x, y: y }), this.settings);\n        }\n        return this;\n    };\n    /**\n     * Method used to render edge labels, based on which node labels were\n     * rendered.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderEdgeLabels = function () {\n        if (!this.settings.renderEdgeLabels)\n            return this;\n        var context = this.canvasContexts.edgeLabels;\n        // Clearing\n        context.clearRect(0, 0, this.width, this.height);\n        var edgeLabelsToDisplay = (0, labels_1.edgeLabelsToDisplayFromNodes)({\n            graph: this.graph,\n            hoveredNode: this.hoveredNode,\n            displayedNodeLabels: this.displayedNodeLabels,\n            highlightedNodes: this.highlightedNodes,\n        }).concat(this.edgesWithForcedLabels);\n        var displayedLabels = new Set();\n        for (var i = 0, l = edgeLabelsToDisplay.length; i < l; i++) {\n            var edge = edgeLabelsToDisplay[i], extremities = this.graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]], edgeData = this.edgeDataCache[edge];\n            // If the edge was already drawn (like if it is eligible AND has\n            // `forceLabel`), we don't want to draw it again\n            if (displayedLabels.has(edge))\n                continue;\n            // If the edge is hidden we don't need to display its label\n            // NOTE: the test on sourceData & targetData is probably paranoid at this point?\n            if (edgeData.hidden || sourceData.hidden || targetData.hidden) {\n                continue;\n            }\n            this.settings.edgeLabelRenderer(context, __assign(__assign({ key: edge }, edgeData), { size: this.scaleSize(edgeData.size) }), __assign(__assign(__assign({ key: extremities[0] }, sourceData), this.framedGraphToViewport(sourceData)), { size: this.scaleSize(sourceData.size) }), __assign(__assign(__assign({ key: extremities[1] }, targetData), this.framedGraphToViewport(targetData)), { size: this.scaleSize(targetData.size) }), this.settings);\n            displayedLabels.add(edge);\n        }\n        this.displayedEdgeLabels = displayedLabels;\n        return this;\n    };\n    /**\n     * Method used to render the highlighted nodes.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderHighlightedNodes = function () {\n        var _this = this;\n        var context = this.canvasContexts.hovers;\n        // Clearing\n        context.clearRect(0, 0, this.width, this.height);\n        // Rendering\n        var render = function (node) {\n            var data = _this.nodeDataCache[node];\n            var _a = _this.framedGraphToViewport(data), x = _a.x, y = _a.y;\n            var size = _this.scaleSize(data.size);\n            _this.settings.hoverRenderer(context, __assign(__assign({ key: node }, data), { size: size, x: x, y: y }), _this.settings);\n        };\n        var nodesToRender = [];\n        if (this.hoveredNode && !this.nodeDataCache[this.hoveredNode].hidden) {\n            nodesToRender.push(this.hoveredNode);\n        }\n        this.highlightedNodes.forEach(function (node) {\n            // The hovered node has already been highlighted\n            if (node !== _this.hoveredNode)\n                nodesToRender.push(node);\n        });\n        // Draw labels:\n        nodesToRender.forEach(function (node) { return render(node); });\n        // Draw WebGL nodes on top of the labels:\n        var nodesPerPrograms = {};\n        // 1. Count nodes per type:\n        nodesToRender.forEach(function (node) {\n            var type = _this.nodeDataCache[node].type;\n            nodesPerPrograms[type] = (nodesPerPrograms[type] || 0) + 1;\n        });\n        // 2. Allocate for each type for the proper number of nodes\n        for (var type in this.nodeHoverPrograms) {\n            this.nodeHoverPrograms[type].reallocate(nodesPerPrograms[type] || 0);\n            // Also reset count, to use when rendering:\n            nodesPerPrograms[type] = 0;\n        }\n        // 3. Process all nodes to render:\n        nodesToRender.forEach(function (node) {\n            var data = _this.nodeDataCache[node];\n            _this.nodeHoverPrograms[data.type].process(nodesPerPrograms[data.type]++, data);\n        });\n        // 4. Clear hovered nodes layer:\n        this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);\n        // 5. Render:\n        for (var type in this.nodeHoverPrograms) {\n            var program = this.nodeHoverPrograms[type];\n            program.render({\n                matrix: this.matrix,\n                width: this.width,\n                height: this.height,\n                pixelRatio: this.pixelRatio,\n                zoomRatio: this.camera.ratio,\n                sizeRatio: 1 / this.scaleSize(),\n                correctionRatio: this.correctionRatio,\n            });\n        }\n    };\n    /**\n     * Method used to schedule a hover render.\n     *\n     */\n    Sigma.prototype.scheduleHighlightedNodesRender = function () {\n        var _this = this;\n        if (this.renderHighlightedNodesFrame || this.renderFrame)\n            return;\n        this.renderHighlightedNodesFrame = (0, utils_1.requestFrame)(function () {\n            // Resetting state\n            _this.renderHighlightedNodesFrame = null;\n            // Rendering\n            _this.renderHighlightedNodes();\n            _this.renderEdgeLabels();\n        });\n    };\n    /**\n     * Method used to render.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.render = function () {\n        var _this = this;\n        this.emit(\"beforeRender\");\n        var exitRender = function () {\n            _this.emit(\"afterRender\");\n            return _this;\n        };\n        // If a render was scheduled, we cancel it\n        if (this.renderFrame) {\n            (0, utils_1.cancelFrame)(this.renderFrame);\n            this.renderFrame = null;\n        }\n        // First we need to resize\n        this.resize();\n        // Do we need to reprocess data?\n        if (this.needToProcess)\n            this.process();\n        this.needToProcess = false;\n        // Clearing the canvases\n        this.clear();\n        // If we have no nodes we can stop right there\n        if (!this.graph.order)\n            return exitRender();\n        // TODO: improve this heuristic or move to the captor itself?\n        // TODO: deal with the touch captor here as well\n        var mouseCaptor = this.mouseCaptor;\n        var moving = this.camera.isAnimated() ||\n            mouseCaptor.isMoving ||\n            mouseCaptor.draggedEvents ||\n            mouseCaptor.currentWheelDirection;\n        // Then we need to extract a matrix from the camera\n        var cameraState = this.camera.getState();\n        var viewportDimensions = this.getDimensions();\n        var graphDimensions = this.getGraphDimensions();\n        var padding = this.getSetting(\"stagePadding\") || 0;\n        this.matrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding);\n        this.invMatrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding, true);\n        this.correctionRatio = (0, utils_1.getMatrixImpact)(this.matrix, cameraState, viewportDimensions);\n        this.graphToViewportRatio = this.getGraphToViewportRatio();\n        // [jacomyal]\n        // This comment is related to the one above the `getMatrixImpact` definition:\n        // - `this.correctionRatio` is somehow not completely explained\n        // - `this.graphToViewportRatio` is the ratio of a distance in the viewport divided by the same distance in the\n        //   graph\n        // - `this.normalizationFunction.ratio` is basically `Math.max(graphDX, graphDY)`\n        // And now, I observe that if I multiply these three ratios, I have something constant, which value remains 2, even\n        // when I change the graph, the viewport or the camera. It might be useful later so I prefer to let this comment:\n        // console.log(this.graphToViewportRatio * this.correctionRatio * this.normalizationFunction.ratio * 2);\n        var params = {\n            matrix: this.matrix,\n            width: this.width,\n            height: this.height,\n            pixelRatio: this.pixelRatio,\n            zoomRatio: this.camera.ratio,\n            sizeRatio: 1 / this.scaleSize(),\n            correctionRatio: this.correctionRatio,\n        };\n        // Drawing nodes\n        for (var type in this.nodePrograms) {\n            var program = this.nodePrograms[type];\n            program.render(params);\n        }\n        // Drawing edges\n        if (!this.settings.hideEdgesOnMove || !moving) {\n            for (var type in this.edgePrograms) {\n                var program = this.edgePrograms[type];\n                program.render(params);\n            }\n        }\n        // Do not display labels on move per setting\n        if (this.settings.hideLabelsOnMove && moving)\n            return exitRender();\n        this.renderLabels();\n        this.renderEdgeLabels();\n        this.renderHighlightedNodes();\n        return exitRender();\n    };\n    /**---------------------------------------------------------------------------\n     * Public API.\n     **---------------------------------------------------------------------------\n     */\n    /**\n     * Method returning the renderer's camera.\n     *\n     * @return {Camera}\n     */\n    Sigma.prototype.getCamera = function () {\n        return this.camera;\n    };\n    /**\n     * Method setting the renderer's camera.\n     *\n     * @param  {Camera} camera - New camera.\n     * @return {Sigma}\n     */\n    Sigma.prototype.setCamera = function (camera) {\n        this.unbindCameraHandlers();\n        this.camera = camera;\n        this.bindCameraHandlers();\n    };\n    /**\n     * Method returning the container DOM element.\n     *\n     * @return {HTMLElement}\n     */\n    Sigma.prototype.getContainer = function () {\n        return this.container;\n    };\n    /**\n     * Method returning the renderer's graph.\n     *\n     * @return {Graph}\n     */\n    Sigma.prototype.getGraph = function () {\n        return this.graph;\n    };\n    /**\n     * Method used to set the renderer's graph.\n     *\n     * @return {Graph}\n     */\n    Sigma.prototype.setGraph = function (graph) {\n        if (graph === this.graph)\n            return;\n        // Unbinding handlers on the current graph\n        this.unbindGraphHandlers();\n        // Clearing the graph data caches\n        this.nodeDataCache = {};\n        this.edgeDataCache = {};\n        // Cleaning renderer state tied to the current graph\n        this.displayedNodeLabels.clear();\n        this.displayedEdgeLabels.clear();\n        this.highlightedNodes.clear();\n        this.hoveredNode = null;\n        this.hoveredEdge = null;\n        this.nodesWithForcedLabels.length = 0;\n        this.edgesWithForcedLabels.length = 0;\n        if (this.checkEdgesEventsFrame !== null) {\n            (0, utils_1.cancelFrame)(this.checkEdgesEventsFrame);\n            this.checkEdgesEventsFrame = null;\n        }\n        // Installing new graph\n        this.graph = graph;\n        // Binding new handlers\n        this.bindGraphHandlers();\n        // Re-rendering now to avoid discrepancies from now to next frame\n        this.refresh();\n    };\n    /**\n     * Method returning the mouse captor.\n     *\n     * @return {MouseCaptor}\n     */\n    Sigma.prototype.getMouseCaptor = function () {\n        return this.mouseCaptor;\n    };\n    /**\n     * Method returning the touch captor.\n     *\n     * @return {TouchCaptor}\n     */\n    Sigma.prototype.getTouchCaptor = function () {\n        return this.touchCaptor;\n    };\n    /**\n     * Method returning the current renderer's dimensions.\n     *\n     * @return {Dimensions}\n     */\n    Sigma.prototype.getDimensions = function () {\n        return { width: this.width, height: this.height };\n    };\n    /**\n     * Method returning the current graph's dimensions.\n     *\n     * @return {Dimensions}\n     */\n    Sigma.prototype.getGraphDimensions = function () {\n        var extent = this.customBBox || this.nodeExtent;\n        return {\n            width: extent.x[1] - extent.x[0] || 1,\n            height: extent.y[1] - extent.y[0] || 1,\n        };\n    };\n    /**\n     * Method used to get all the sigma node attributes.\n     * It's usefull for example to get the position of a node\n     * and to get values that are set by the nodeReducer\n     *\n     * @param  {string} key - The node's key.\n     * @return {NodeDisplayData | undefined} A copy of the desired node's attribute or undefined if not found\n     */\n    Sigma.prototype.getNodeDisplayData = function (key) {\n        var node = this.nodeDataCache[key];\n        return node ? Object.assign({}, node) : undefined;\n    };\n    /**\n     * Method used to get all the sigma edge attributes.\n     * It's usefull for example to get values that are set by the edgeReducer.\n     *\n     * @param  {string} key - The edge's key.\n     * @return {EdgeDisplayData | undefined} A copy of the desired edge's attribute or undefined if not found\n     */\n    Sigma.prototype.getEdgeDisplayData = function (key) {\n        var edge = this.edgeDataCache[key];\n        return edge ? Object.assign({}, edge) : undefined;\n    };\n    /**\n     * Method used to get the set of currently displayed node labels.\n     *\n     * @return {Set<string>} A set of node keys whose label is displayed.\n     */\n    Sigma.prototype.getNodeDisplayedLabels = function () {\n        return new Set(this.displayedNodeLabels);\n    };\n    /**\n     * Method used to get the set of currently displayed edge labels.\n     *\n     * @return {Set<string>} A set of edge keys whose label is displayed.\n     */\n    Sigma.prototype.getEdgeDisplayedLabels = function () {\n        return new Set(this.displayedEdgeLabels);\n    };\n    /**\n     * Method returning a copy of the settings collection.\n     *\n     * @return {Settings} A copy of the settings collection.\n     */\n    Sigma.prototype.getSettings = function () {\n        return __assign({}, this.settings);\n    };\n    /**\n     * Method returning the current value for a given setting key.\n     *\n     * @param  {string} key - The setting key to get.\n     * @return {any} The value attached to this setting key or undefined if not found\n     */\n    Sigma.prototype.getSetting = function (key) {\n        return this.settings[key];\n    };\n    /**\n     * Method setting the value of a given setting key. Note that this will schedule\n     * a new render next frame.\n     *\n     * @param  {string} key - The setting key to set.\n     * @param  {any}    value - The value to set.\n     * @return {Sigma}\n     */\n    Sigma.prototype.setSetting = function (key, value) {\n        this.settings[key] = value;\n        (0, settings_1.validateSettings)(this.settings);\n        this.handleSettingsUpdate();\n        this.scheduleRefresh();\n        return this;\n    };\n    /**\n     * Method updating the value of a given setting key using the provided function.\n     * Note that this will schedule a new render next frame.\n     *\n     * @param  {string}   key     - The setting key to set.\n     * @param  {function} updater - The update function.\n     * @return {Sigma}\n     */\n    Sigma.prototype.updateSetting = function (key, updater) {\n        this.settings[key] = updater(this.settings[key]);\n        (0, settings_1.validateSettings)(this.settings);\n        this.handleSettingsUpdate();\n        this.scheduleRefresh();\n        return this;\n    };\n    /**\n     * Method used to resize the renderer.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.resize = function () {\n        var previousWidth = this.width, previousHeight = this.height;\n        this.width = this.container.offsetWidth;\n        this.height = this.container.offsetHeight;\n        this.pixelRatio = (0, utils_1.getPixelRatio)();\n        if (this.width === 0) {\n            if (this.settings.allowInvalidContainer)\n                this.width = 1;\n            else\n                throw new Error(\"Sigma: Container has no width. You can set the allowInvalidContainer setting to true to stop seeing this error.\");\n        }\n        if (this.height === 0) {\n            if (this.settings.allowInvalidContainer)\n                this.height = 1;\n            else\n                throw new Error(\"Sigma: Container has no height. You can set the allowInvalidContainer setting to true to stop seeing this error.\");\n        }\n        // If nothing has changed, we can stop right here\n        if (previousWidth === this.width && previousHeight === this.height)\n            return this;\n        this.emit(\"resize\");\n        // Sizing dom elements\n        for (var id in this.elements) {\n            var element = this.elements[id];\n            element.style.width = this.width + \"px\";\n            element.style.height = this.height + \"px\";\n        }\n        // Sizing canvas contexts\n        for (var id in this.canvasContexts) {\n            this.elements[id].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\n            this.elements[id].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\n            if (this.pixelRatio !== 1)\n                this.canvasContexts[id].scale(this.pixelRatio, this.pixelRatio);\n        }\n        // Sizing WebGL contexts\n        for (var id in this.webGLContexts) {\n            this.elements[id].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\n            this.elements[id].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\n            this.webGLContexts[id].viewport(0, 0, this.width * this.pixelRatio, this.height * this.pixelRatio);\n        }\n        return this;\n    };\n    /**\n     * Method used to clear all the canvases.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.clear = function () {\n        this.webGLContexts.nodes.clear(this.webGLContexts.nodes.COLOR_BUFFER_BIT);\n        this.webGLContexts.edges.clear(this.webGLContexts.edges.COLOR_BUFFER_BIT);\n        this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);\n        this.canvasContexts.labels.clearRect(0, 0, this.width, this.height);\n        this.canvasContexts.hovers.clearRect(0, 0, this.width, this.height);\n        this.canvasContexts.edgeLabels.clearRect(0, 0, this.width, this.height);\n        return this;\n    };\n    /**\n     * Method used to refresh, i.e. force the renderer to fully reprocess graph\n     * data and render.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.refresh = function () {\n        this.needToProcess = true;\n        this.render();\n        return this;\n    };\n    /**\n     * Method used to schedule a render at the next available frame.\n     * This method can be safely called on a same frame because it basically\n     * debounce refresh to the next frame.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.scheduleRender = function () {\n        var _this = this;\n        if (!this.renderFrame) {\n            this.renderFrame = (0, utils_1.requestFrame)(function () {\n                _this.render();\n            });\n        }\n        return this;\n    };\n    /**\n     * Method used to schedule a refresh (i.e. fully reprocess graph data and render)\n     * at the next available frame.\n     * This method can be safely called on a same frame because it basically\n     * debounce refresh to the next frame.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.scheduleRefresh = function () {\n        this.needToProcess = true;\n        this.scheduleRender();\n        return this;\n    };\n    /**\n     * Method used to (un)zoom, while preserving the position of a viewport point.\n     * Used for instance to zoom \"on the mouse cursor\".\n     *\n     * @param viewportTarget\n     * @param newRatio\n     * @return {CameraState}\n     */\n    Sigma.prototype.getViewportZoomedState = function (viewportTarget, newRatio) {\n        var _a = this.camera.getState(), ratio = _a.ratio, angle = _a.angle, x = _a.x, y = _a.y;\n        // TODO: handle max zoom\n        var ratioDiff = newRatio / ratio;\n        var center = {\n            x: this.width / 2,\n            y: this.height / 2,\n        };\n        var graphMousePosition = this.viewportToFramedGraph(viewportTarget);\n        var graphCenterPosition = this.viewportToFramedGraph(center);\n        return {\n            angle: angle,\n            x: (graphMousePosition.x - graphCenterPosition.x) * (1 - ratioDiff) + x,\n            y: (graphMousePosition.y - graphCenterPosition.y) * (1 - ratioDiff) + y,\n            ratio: newRatio,\n        };\n    };\n    /**\n     * Method returning the abstract rectangle containing the graph according\n     * to the camera's state.\n     *\n     * @return {object} - The view's rectangle.\n     */\n    Sigma.prototype.viewRectangle = function () {\n        // TODO: reduce relative margin?\n        var marginX = (0 * this.width) / 8, marginY = (0 * this.height) / 8;\n        var p1 = this.viewportToFramedGraph({ x: 0 - marginX, y: 0 - marginY }), p2 = this.viewportToFramedGraph({ x: this.width + marginX, y: 0 - marginY }), h = this.viewportToFramedGraph({ x: 0, y: this.height + marginY });\n        return {\n            x1: p1.x,\n            y1: p1.y,\n            x2: p2.x,\n            y2: p2.y,\n            height: p2.y - h.y,\n        };\n    };\n    /**\n     * Method returning the coordinates of a point from the framed graph system to the viewport system. It allows\n     * overriding anything that is used to get the translation matrix, or even the matrix itself.\n     *\n     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\n     * of computations.\n     */\n    Sigma.prototype.framedGraphToViewport = function (coordinates, override) {\n        if (override === void 0) { override = {}; }\n        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !!override.graphDimensions;\n        var matrix = override.matrix\n            ? override.matrix\n            : recomputeMatrix\n                ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting(\"stagePadding\") || 0)\n                : this.matrix;\n        var viewportPos = (0, matrices_1.multiplyVec2)(matrix, coordinates);\n        return {\n            x: ((1 + viewportPos.x) * this.width) / 2,\n            y: ((1 - viewportPos.y) * this.height) / 2,\n        };\n    };\n    /**\n     * Method returning the coordinates of a point from the viewport system to the framed graph system. It allows\n     * overriding anything that is used to get the translation matrix, or even the matrix itself.\n     *\n     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\n     * of computations.\n     */\n    Sigma.prototype.viewportToFramedGraph = function (coordinates, override) {\n        if (override === void 0) { override = {}; }\n        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !override.graphDimensions;\n        var invMatrix = override.matrix\n            ? override.matrix\n            : recomputeMatrix\n                ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting(\"stagePadding\") || 0, true)\n                : this.invMatrix;\n        var res = (0, matrices_1.multiplyVec2)(invMatrix, {\n            x: (coordinates.x / this.width) * 2 - 1,\n            y: 1 - (coordinates.y / this.height) * 2,\n        });\n        if (isNaN(res.x))\n            res.x = 0;\n        if (isNaN(res.y))\n            res.y = 0;\n        return res;\n    };\n    /**\n     * Method used to translate a point's coordinates from the viewport system (pixel distance from the top-left of the\n     * stage) to the graph system (the reference system of data as they are in the given graph instance).\n     *\n     * This method accepts an optional camera which can be useful if you need to translate coordinates\n     * based on a different view than the one being currently being displayed on screen.\n     *\n     * @param {Coordinates}                  viewportPoint\n     * @param {CoordinateConversionOverride} override\n     */\n    Sigma.prototype.viewportToGraph = function (viewportPoint, override) {\n        if (override === void 0) { override = {}; }\n        return this.normalizationFunction.inverse(this.viewportToFramedGraph(viewportPoint, override));\n    };\n    /**\n     * Method used to translate a point's coordinates from the graph system (the reference system of data as they are in\n     * the given graph instance) to the viewport system (pixel distance from the top-left of the stage).\n     *\n     * This method accepts an optional camera which can be useful if you need to translate coordinates\n     * based on a different view than the one being currently being displayed on screen.\n     *\n     * @param {Coordinates}                  graphPoint\n     * @param {CoordinateConversionOverride} override\n     */\n    Sigma.prototype.graphToViewport = function (graphPoint, override) {\n        if (override === void 0) { override = {}; }\n        return this.framedGraphToViewport(this.normalizationFunction(graphPoint), override);\n    };\n    /**\n     * Method returning the distance multiplier between the graph system and the\n     * viewport system.\n     */\n    Sigma.prototype.getGraphToViewportRatio = function () {\n        var graphP1 = { x: 0, y: 0 };\n        var graphP2 = { x: 1, y: 1 };\n        var graphD = Math.sqrt(Math.pow(graphP1.x - graphP2.x, 2) + Math.pow(graphP1.y - graphP2.y, 2));\n        var viewportP1 = this.graphToViewport(graphP1);\n        var viewportP2 = this.graphToViewport(graphP2);\n        var viewportD = Math.sqrt(Math.pow(viewportP1.x - viewportP2.x, 2) + Math.pow(viewportP1.y - viewportP2.y, 2));\n        return viewportD / graphD;\n    };\n    /**\n     * Method returning the graph's bounding box.\n     *\n     * @return {{ x: Extent, y: Extent }}\n     */\n    Sigma.prototype.getBBox = function () {\n        return (0, utils_1.graphExtent)(this.graph);\n    };\n    /**\n     * Method returning the graph's custom bounding box, if any.\n     *\n     * @return {{ x: Extent, y: Extent } | null}\n     */\n    Sigma.prototype.getCustomBBox = function () {\n        return this.customBBox;\n    };\n    /**\n     * Method used to override the graph's bounding box with a custom one. Give `null` as the argument to stop overriding.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.setCustomBBox = function (customBBox) {\n        this.customBBox = customBBox;\n        this.scheduleRender();\n        return this;\n    };\n    /**\n     * Method used to shut the container & release event listeners.\n     *\n     * @return {undefined}\n     */\n    Sigma.prototype.kill = function () {\n        // Emitting \"kill\" events so that plugins and such can cleanup\n        this.emit(\"kill\");\n        // Releasing events\n        this.removeAllListeners();\n        // Releasing camera handlers\n        this.unbindCameraHandlers();\n        // Releasing DOM events & captors\n        window.removeEventListener(\"resize\", this.activeListeners.handleResize);\n        this.mouseCaptor.kill();\n        this.touchCaptor.kill();\n        // Releasing graph handlers\n        this.unbindGraphHandlers();\n        // Releasing cache & state\n        this.quadtree = new quadtree_1.default();\n        this.nodeDataCache = {};\n        this.edgeDataCache = {};\n        this.nodesWithForcedLabels = [];\n        this.edgesWithForcedLabels = [];\n        this.highlightedNodes.clear();\n        // Clearing frames\n        if (this.renderFrame) {\n            (0, utils_1.cancelFrame)(this.renderFrame);\n            this.renderFrame = null;\n        }\n        if (this.renderHighlightedNodesFrame) {\n            (0, utils_1.cancelFrame)(this.renderHighlightedNodesFrame);\n            this.renderHighlightedNodesFrame = null;\n        }\n        // Destroying canvases\n        var container = this.container;\n        while (container.firstChild)\n            container.removeChild(container.firstChild);\n    };\n    /**\n     * Method used to scale the given size according to the camera's ratio, i.e.\n     * zooming state.\n     *\n     * @param  {number?} size -        The size to scale (node size, edge thickness etc.).\n     * @param  {number?} cameraRatio - A camera ratio (defaults to the actual camera ratio).\n     * @return {number}              - The scaled size.\n     */\n    Sigma.prototype.scaleSize = function (size, cameraRatio) {\n        if (size === void 0) { size = 1; }\n        if (cameraRatio === void 0) { cameraRatio = this.camera.ratio; }\n        return ((size / this.settings.zoomToSizeRatioFunction(cameraRatio)) *\n            (this.getSetting(\"itemSizesReference\") === \"positions\" ? cameraRatio * this.graphToViewportRatio : 1));\n    };\n    /**\n     * Method that returns the collection of all used canvases.\n     * At the moment, the instantiated canvases are the following, and in the\n     * following order in the DOM:\n     * - `edges`\n     * - `nodes`\n     * - `edgeLabels`\n     * - `labels`\n     * - `hovers`\n     * - `hoverNodes`\n     * - `mouse`\n     *\n     * @return {PlainObject<HTMLCanvasElement>} - The collection of canvases.\n     */\n    Sigma.prototype.getCanvases = function () {\n        return __assign({}, this.elements);\n    };\n    return Sigma;\n}(types_1.TypedEventEmitter));\nexports.default = Sigma;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sigma = exports.MouseCaptor = exports.QuadTree = exports.Camera = void 0;\n/**\n * Sigma.js Library Endpoint\n * =========================\n *\n * The library endpoint.\n * @module\n */\nvar sigma_1 = __importDefault(require(\"./sigma\"));\nexports.Sigma = sigma_1.default;\nvar camera_1 = __importDefault(require(\"./core/camera\"));\nexports.Camera = camera_1.default;\nvar quadtree_1 = __importDefault(require(\"./core/quadtree\"));\nexports.QuadTree = quadtree_1.default;\nvar mouse_1 = __importDefault(require(\"./core/captors/mouse\"));\nexports.MouseCaptor = mouse_1.default;\nexports.default = sigma_1.default;\n"],
  "mappings": "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",
  "names": ["node", "attrs", "k", "d", "b", "TypedEventEmitter", "d", "b", "Camera", "d", "b", "Captor", "d", "b", "MouseCaptor", "QuadTree", "LabelCandidate", "LabelGrid", "require_utils", "AbstractProgram", "Program", "d", "b", "AbstractNodeProgram", "NodeProgram", "t", "e", "o", "n", "o", "e", "d", "b", "NodePointProgram", "d", "b", "AbstractEdgeProgram", "EdgeProgram", "n", "o", "e", "n", "t", "e", "d", "b", "EdgeRectangleProgram", "a", "n", "e", "o", "r", "e", "d", "b", "EdgeArrowHeadProgram", "o", "n", "e", "d", "b", "EdgeClampedProgram", "d", "b", "TouchCaptor", "d", "b", "Sigma", "_a", "_b", "_c", "node", "edge", "type", "require_sigma"]
}
